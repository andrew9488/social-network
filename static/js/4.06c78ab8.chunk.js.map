{"version":3,"sources":["components/Users/Users.module.css","components/Users/User.module.css","components/common/Paginator/Paginator.module.css","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","User","React","memo","props","className","style","user","userAvatar","to","id","src","photos","small","UsersPhoto","alt","userData","name","status","followed","disabled","followingInProgress","some","onClick","unFollowTC","followTC","Paginator","useState","portionNumber","setPortionNumber","countPage","Math","ceil","totalCount","pageSize","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","index","onClickCurrentPage","currentPage","Users","usersPage","isFetching","Preloader","container","u","UsersContainer","page","getUsersTC","this","Fragment","PureComponent","compose","connect","state","users","disableButton","withAuthRedirect"],"mappings":"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","file":"static/js/4.06c78ab8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3EiO7\",\"container\":\"Users_container__1wJvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__u-ni-\",\"userAvatar\":\"User_userAvatar__2YTUN\",\"userData\":\"User_userData__15nCn\",\"name\":\"User_name__32ePm\",\"status\":\"User_status__2z335\",\"location\":\"User_location__1EDt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2h5rT\",\"currentPage\":\"Paginator_currentPage__2jLvZ\"};","import {UserType} from \"../../redux/usersPageReducer\";\r\nimport React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UsersPhoto from \"../../assets/images/avatars/usersAvatar.jpg\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.userAvatar}>\r\n                <NavLink to={\"/profile/\" + props.user.id}>\r\n                    <img src={props.user.photos.small !== null ? props.user.photos.small : UsersPhoto}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={style.userData}>\r\n                <span className={style.name}>{props.user.name}</span>\r\n                <span\r\n                    className={style.status}>{props.user.status !== null ? props.user.status : \"I have not status\"}</span>\r\n            </div>\r\n            <div>\r\n                {\r\n                    !props.user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.followTC(props.user.id)\r\n                                  }}>follow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.unFollowTC(props.user.id)\r\n                                  }}>unfollow</button>\r\n                }\r\n                <button>message</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    onClickCurrentPage: (page: number) => void\r\n    currentPage: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo((props) => {\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    let countPage = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil((countPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>{`<`}</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, index) => {\r\n                    return <span key={index} onClick={() => {\r\n                        props.onClickCurrentPage(p)\r\n                    }}\r\n                                 className={props.currentPage === p ? style.currentPage : ''}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>{`>`}</button>}\r\n        </div>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport {User} from \"./User\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\n\r\nexport const Users: React.FC<UsersPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <Paginator totalCount={props.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       onClickCurrentPage={props.onClickCurrentPage}\r\n                       currentPage={props.currentPage}/>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={style.container}>\r\n                    {\r\n                        props.usersPage.map(u => <User key={u.id}\r\n                                                       user={u}\r\n                                                       followingInProgress={props.followingInProgress}\r\n                                                       followTC={props.followTC}\r\n                                                       unFollowTC={props.unFollowTC}/>)\r\n                    }\r\n                </div>}\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {followTC, getUsersTC, unFollowTC, UserType} from \"../../redux/usersPageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersClassContainerPropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype OwnTypeProps = {\r\n    onClickCurrentPage: (page: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType & OwnTypeProps\r\n\r\nclass UsersContainer extends React.PureComponent<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickCurrentPage = (page: number) => {\r\n        this.props.getUsersTC(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Users {...this.props}\r\n                       onClickCurrentPage={this.onClickCurrentPage}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        disableButton: state.usersPage.disableButton,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUsersTC, followTC, unFollowTC}), withAuthRedirect)(UsersContainer)"],"sourceRoot":""}