{"version":3,"sources":["components/Login/Login.module.css","components/Login/LoginForm.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx"],"names":["module","exports","LoginForm","reduxForm","form","props","style","textAlign","href","target","onSubmit","handleSubmit","className","loginForm","Field","name","type","placeholder","component","Input","validate","required","error","display","Login","React","memo","useCallback","formData","email","password","rememberMe","logInTC","isAuth","to","loginPage","compose","connect","state","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,2B,oICgDjBC,EAAYC,YAAwB,CAC7CC,KAAM,SADeD,EAnC+B,SAACE,GACrD,OACI,qCACI,sBAAKC,MAAO,CAACC,UAAW,UAAxB,UACI,yDACI,mBAAGC,KAAM,wCACNC,OAAQ,SADX,sBAIJ,wEACA,0DACA,kDAEJ,uBAAMC,SAAUL,EAAMM,aAAcC,UAAWN,IAAMO,UAArD,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,KAAK,OAAOC,YAAY,QAAQC,UAAWC,IAAOC,SAAU,CAACC,SAErF,8BACI,cAACP,EAAA,EAAD,CAAOC,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,UAAWC,IAClEC,SAAU,CAACC,SAEtB,qBAAKT,UAAWN,IAAMgB,MAAtB,SACKjB,EAAMiB,QAEX,sBAAKhB,MAAO,CAACiB,QAAS,QAAtB,UACI,cAACT,EAAA,EAAD,CAAOC,KAAK,aAAaC,KAAK,WAAWE,UAAWC,MAAQ,kDAEhE,8BACI,wBAAQH,KAAK,SAAb,+B,0BCpCPQ,EAAkCC,IAAMC,MAAK,SAACrB,GAEvD,IAAMK,EAAWiB,uBAAY,SAACC,GAA4B,IAC/CC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,WACxB1B,EAAM2B,QAAQH,EAAOC,EAAUC,KAChC,CAAC1B,IAEJ,OAAIA,EAAM4B,OACC,cAAC,IAAD,CAAUC,GAAG,sBAIpB,sBAAKtB,UAAWN,IAAM6B,UAAtB,UACI,uCACA,cAACjC,EAAD,CAAWQ,SAAUA,U,QCGlB0B,sBACXC,aAToB,SAACC,GACrB,MAAO,CACHL,OAAQK,EAAMC,KAAKN,UAO6D,CAACD,cAD1EI,CACqFZ","file":"static/js/5.04a717c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__1F-A9\"};","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/Form/CustomField\";\r\nimport {required} from \"../../utils/validator\";\r\nimport style from \"../common/Form/CustomField.module.css\"\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n//style in CustomField.module.css\r\n\r\nconst Form: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <p>To log in get registered\r\n                    <a href={'https://social-network.samuraijs.com/'}\r\n                       target={'_blank'}> here\r\n                    </a>\r\n                </p>\r\n                <p>or use common test account credentials:</p>\r\n                <p>Email: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n            <form onSubmit={props.handleSubmit} className={style.loginForm}>\r\n                <div>\r\n                    <Field name=\"email\" type=\"text\" placeholder=\"login\" component={Input} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"password\" type=\"password\" placeholder=\"password\" component={Input}\r\n                           validate={[required]}/>\r\n                </div>\r\n                <div className={style.error}>\r\n                    {props.error}\r\n                </div>\r\n                <div style={{display: \"flex\"}}>\r\n                    <Field name=\"rememberMe\" type=\"checkbox\" component={Input}/><span>remember me</span>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}\r\nexport const LoginForm = reduxForm<FormDataType>({\r\n    form: \"login\"\r\n})(Form)","import React, {useCallback} from \"react\"\r\nimport {FormDataType, LoginForm} from \"./LoginForm\";\r\nimport style from \"./Login.module.css\"\r\nimport {LoginPropsType} from \"./LoginContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo((props) => {\r\n\r\n    const onSubmit = useCallback((formData: FormDataType) => {\r\n        const {email, password, rememberMe} = formData\r\n        props.logInTC(email, password, rememberMe)\r\n    }, [props])\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile/:userId?\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.loginPage}>\r\n            <h2>login</h2>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n})","import React, {ComponentType} from \"react\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./Login\";\r\nimport {logInTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logInTC: (email: string | null, password: string | null, rememberMe: boolean) => void\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType)=>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport type LoginPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(MapStateToProps, {logInTC}))(Login)"],"sourceRoot":""}