{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileAvatar/ProfileAvatar.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Profile/ProfileData/ProfileData.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsItem/DialogContainer.tsx","components/Dialogs/DialogsItem/Dialog.tsx","utils/validator.ts","components/common/Form/CustomField.tsx","components/common/Form/CommonForm.tsx","redux/dialogsPageReducer.ts","components/Dialogs/DialogsItem/MessageContainer.tsx","components/Dialogs/DialogsItem/Message.tsx","components/Dialogs/Dialogs.tsx","api/api.ts","redux/usersPageReducer.ts","assets/images/avatars/usersAvatar.jpg","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","assets/images/avatars/city-Z.png","components/Profile/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileData.tsx","assets/images/avatars/myAvatar.jpg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/LoginContainer.tsx","components/Login/Login.tsx","redux/appReducer.ts","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","components/common/Form/CustomField.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsItem/Dialog.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Footer/Footer.module.css","components/Dialogs/DialogsItem/Message.module.css","components/Profile/Profile.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","style","navbar","items","item","to","activeClassName","activeLink","Footer","footer","footerText","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","compose","dialogs","dialogsPage","dialog","map","d","dialogItemContainer","id","dialogItem","src","img","alt","name","required","value","FormControl","input","meta","touched","error","fieldForm","children","Textarea","Input","max","length","maxLength","CommonForm","reduxForm","form","onSubmit","handleSubmit","Field","type","component","validate","initialState","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","newText","dispatch","sendMessage","text","messageText","m","Dialogs","DialogContainer","MessageContainer","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","followAPI","post","delete","profileAPI","userId","status","put","authAPI","email","password","rememberMe","users","totalCount","isFetching","disableButton","followingInProgress","usersPageReducer","u","followed","filter","setIsFetchingUsersComponent","setFollowingProgress","Preloader","preloader","Users","useState","portionNumber","setPortionNumber","countPage","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","usersPage","page","paginator","onClick","p","index","onClickCurrentPage","container","user","userAvatar","photos","small","UsersPhoto","width","height","borderRadius","userData","disabled","some","unFollowTC","followTC","UsersContainer","getUsersTC","this","Fragment","React","setCurrentPage","resultCode","follow","unFollow","ProfileAvatar","profileAvatar","photo1","photo2","photo3","ProfileStatus","useEffect","setStatus","editableMode","setEditableMode","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","ProfileData","profileData","avatar","avatarImg","profile","large","fullName","aboutMe","work","lookingForAJob","busy","open","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","postsElement","posts","postMessageContainer","postMessage","myAvatar","like","likesCounter","profilePageReducer","newPost","postText","setIsFetchingProfileComponent","setProfileStatus","profilePage","addPost","myPosts","title","Profile","updateStatusTC","MyPostsContainer","ProfileContainer","Number","match","params","myId","getUserProfileTC","getUserStatusTC","withRouter","Header","header","logo","headUser","logOut","login","logOutTC","authReducer","setIsAuth","authTC","setUserData","logInTC","stopSubmit","_error","HeaderContainer","LoginForm","loginForm","placeholder","display","loginPage","formData","isInitialization","appReducer","App","appInitializeTC","app","content","path","render","LoginContainer","authPromise","Promise","all","sidebarReducer","reducer","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e52764d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__FhxYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__1F-A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3EiO7\",\"paginator\":\"Users_paginator__30n-k\",\"currentPage\":\"Users_currentPage__jJNpC\",\"container\":\"Users_container__1wJvV\",\"user\":\"Users_user__2v1B1\",\"userAvatar\":\"Users_userAvatar__2NoUX\",\"userData\":\"Users_userData__3H7_8\",\"name\":\"Users_name__1ZiLC\",\"status\":\"Users_status__1zTcp\",\"location\":\"Users_location__3dymT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"data\":\"ProfileData_data__2dnsH\",\"name\":\"ProfileData_name__Cie_-\",\"aboutMe\":\"ProfileData_aboutMe__29MIs\",\"work\":\"ProfileData_work__3nfZO\",\"open\":\"ProfileData_open__1BQzQ\",\"busy\":\"ProfileData_busy__3wO3n\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import {Dialog} from \"./Dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogType} from \"../../../redux/dialogsPageReducer\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport { ComponentType } from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\ntype MapDispatchPropsType = {}\r\n\r\nexport type DialogPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {}),\r\n    withAuthRedirect)(Dialog)\r\n","import style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogPropsType} from \"./DialogContainer\";\r\n\r\nexport const Dialog: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            {props.dialogs.map(d => <div className={style.dialogItemContainer} key={d.id}>\r\n                <NavLink to={\"/dialogs/\" + d.id} activeClassName={style.activeLink}>\r\n                    <div className={style.dialogItem}>\r\n                        <img src={d.img} alt=\"avatar\"/>\r\n                        <span>{d.name}</span>\r\n                    </div>\r\n                </NavLink>\r\n            </div>)}\r\n        </div>\r\n    );\r\n}\r\n","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = ({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormType = {\r\n    newText: string\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    );\r\n}\r\nexport const CommonForm = reduxForm<CommonFormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessageActionCreator>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessageActionCreator = (newText: string) => ({type: \"SEND-MESSAGE\", newText}) as const","import {Message} from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogsPageReducerActionsType, MessageType, sendMessageActionCreator,} from \"../../../redux/dialogsPageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (text: string) => void\r\n}\r\n\r\nexport type MessagePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<DialogsPageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (text: string) => {\r\n            dispatch(sendMessageActionCreator(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Message)\r\n","import style from \"./Message.module.css\";\r\nimport React from \"react\";\r\nimport {MessagePropsType} from \"./MessageContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n\r\n    const sendMessageText = (text: CommonFormType) => {\r\n        props.sendMessage(text.newText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.message}>\r\n            <div className={style.messageText}>\r\n                {props.messages.map(m => <div key={m.id}>{m.message}</div>)}\r\n            </div>\r\n            <CommonForm onSubmit={sendMessageText}/>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogContainer from \"./DialogsItem/DialogContainer\";\r\nimport MessageContainer from \"./DialogsItem/MessageContainer\";\r\n\r\nexport const Dialogs: React.FC = () => {\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div>\r\n                <DialogContainer/>\r\n            </div>\r\n            <div>\r\n                <MessageContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) => ({\r\n    type: \"SET-IS-FETCHING-USERS-COMPONENT\",\r\n    isFetching\r\n} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) => ({\r\n    type: \"SET-FOLLOWING-PROGRESS\",\r\n    disableButton,\r\n    userId\r\n} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport UsersPhoto from \"../../assets/images/avatars/usersAvatar.jpg\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\n\r\nexport const Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    let countPage = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil((countPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <div className={style.page}>\r\n                <div className={style.paginator}>\r\n                    {portionNumber > 1 &&\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n                    {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map((p, index) => {\r\n                            return <span key={index} onClick={() => {\r\n                                props.onClickCurrentPage(p)\r\n                            }}\r\n                                         className={props.currentPage === p ? style.currentPage : ''}>{p}</span>\r\n                        })}\r\n                    {portionCount > portionNumber &&\r\n                    <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>}\r\n                </div>\r\n            </div>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={style.container}>\r\n                    {\r\n                        props.usersPage.map(u => <div key={u.id} className={style.user}>\r\n                            <div className={style.userAvatar}>\r\n                                <NavLink to={\"/profile/\" + u.id}>\r\n                                    <img src={u.photos.small != null ? u.photos.small : UsersPhoto}\r\n                                         style={{width: \"80px\", height: \"80px\", borderRadius: \"100%\",}}\r\n                                         alt=\"avatar\"/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={style.userData}>\r\n                                <span className={style.name}>{u.name}</span>\r\n                                <span\r\n                                    className={style.status}>{u.status != null ? u.status : \"I have not status\"}</span>\r\n                                {/*<div className={style.location}>*/}\r\n                                {/*    <span>{\"u.location.city\"},</span>*/}\r\n                                {/*    <span>{\"u.location.country\"}</span>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    !u.followed\r\n                                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                  onClick={() => {\r\n                                                      props.followTC(u.id)\r\n                                                  }}>follow</button>\r\n                                        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                  onClick={() => {\r\n                                                      props.unFollowTC(u.id)\r\n                                                  }}>unfollow</button>\r\n                                }\r\n                                <button>message</button>\r\n                            </div>\r\n                        </div>)\r\n                    }\r\n                </div>}\r\n        </div>\r\n    );\r\n}","import {connect} from \"react-redux\";\r\nimport {followTC, getUsersTC, unFollowTC, UserType} from \"../../redux/usersPageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersClassContainerPropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype OwnTypeProps = {\r\n    onClickCurrentPage: (page: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType & OwnTypeProps\r\n\r\nclass UsersContainer extends React.Component<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickCurrentPage = (page: number) => {\r\n        this.props.getUsersTC(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Users {...this.props}\r\n                       onClickCurrentPage={this.onClickCurrentPage}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        disableButton: state.usersPage.disableButton,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUsersTC, followTC, unFollowTC}), withAuthRedirect)(UsersContainer)","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React from \"react\";\r\nimport style from \"./ProfileAvatar.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileAvatar: React.FC = () => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = (props) => {\r\n    return (\r\n        <div className={style.profileData}>\r\n            {props.isFetching\r\n                ? <Preloader/>\r\n                : <>\r\n                    <div className={style.avatar}>\r\n                        <img className={style.avatarImg}\r\n                             src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                    </div>\r\n                    <div className={style.data}>\r\n                        <h3 className={style.name}>{props.profile.fullName}</h3>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        <span className={style.aboutMe}>{props.profile.aboutMe}</span>\r\n                        <div className={style.work}>\r\n                    <span>\r\n                        <span className={!props.profile.lookingForAJob ? style.open : style.busy}>\r\n                            {!props.profile.lookingForAJob ? \" Open to work\" : \" Busy\"}</span>\r\n                        </span>\r\n                            {props.profile.lookingForAJob && <span>{props.profile.lookingForAJobDescription}</span>}\r\n                        </div>\r\n                        <ul>Contacts:\r\n                            {props.profile.contacts.facebook && <li>{props.profile.contacts.facebook}</li>}\r\n                            {props.profile.contacts.website && <li>{props.profile.contacts.website}</li>}\r\n                            {props.profile.contacts.vk && <li>{props.profile.contacts.vk}</li>}\r\n                            {props.profile.contacts.twitter && <li>{props.profile.contacts.twitter}</li>}\r\n                            {props.profile.contacts.instagram && <li>{props.profile.contacts.instagram}</li>}\r\n                            {props.profile.contacts.youtube && <li>{props.profile.contacts.youtube}</li>}\r\n                            {props.profile.contacts.github && <li>{props.profile.contacts.github}</li>}\r\n                            {props.profile.contacts.mainLink && <li>{props.profile.contacts.mainLink}</li>}\r\n                        </ul>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/myAvatar.d884b73f.jpg\";","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from '../../../../assets/images/avatars/myAvatar.jpg'\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\nexport function Post(props: PostPropsType) {\r\n\r\n    const postsElement =\r\n        <>\r\n            {props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                <div className={style.postMessage}>\r\n                    <img src={myAvatar}\r\n                         alt=\"my_avatar\"/>\r\n                    <div className={style.text}> {p.post} </div>\r\n                </div>\r\n                <div className={style.like}>Like {p.likesCounter}</div>\r\n            </div>)}\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n\r\n    const addPost = (text: CommonFormType) => {\r\n        props.addPost(text.newText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import myAvatar from \"../assets/images/avatars/myAvatar.jpg\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\ntype ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: \"https://www.instagram.com/__pashkevich_/\" | null,\r\n    youtube: string | null,\r\n    github: \"https://github.com/andrew9488\" | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: \"Student of IT-Incubator\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: \"https://www.instagram.com/__pashkevich_/\",\r\n            youtube: null,\r\n            github: \"https://github.com/andrew9488\",\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"Looking vacancy of Frontend Developer by React.js\",\r\n        fullName: null as \"Andrew Pashkevich\" | null,\r\n        userId: 13446,\r\n        photos: {\r\n            small: myAvatar,\r\n            large: myAvatar\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPostActionCreator = (postText: string) => ({type: \"ADD-POST\", postText} as const)\r\n\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"SET-USER-PROFILE-DATA\", profile} as const)\r\n\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) => ({\r\n    type: \"SET-IS-FETCHING-PROFILE-COMPONENT\",\r\n    isFetching\r\n} as const)\r\n\r\nexport const setProfileStatus = (status: string) => ({\r\n    type: \"SET-PROFILE-STATUS\",\r\n    status\r\n} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                }\r\n            })\r\n    }\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPostActionCreator, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPostActionCreator(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileTC, getUserStatusTC, ProfileType, updateStatusTC} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUserProfileTC, getUserStatusTC, updateStatusTC}), withRouter, withAuthRedirect)(ProfileContainer)\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\">Notification</NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to=\"/profile/13446 \">{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to=\"/login\">Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsAuth>\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"SET-USER-DATA\", data: {userId, login, email}} as const)\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"SET-IS-AUTH\", isAuth} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authTC())\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"login\", {_error: error}))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false))\r\n                    dispatch(setIsAuth(false))\r\n                }\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/Form/CustomField\";\r\nimport {required} from \"../../utils/validator\";\r\nimport style from \"../common/Form/CustomField.module.css\"\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n//style in CustomField.module.css\r\n\r\nconst Form: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.loginForm}>\r\n            <div>\r\n                <Field name=\"email\" type=\"text\" placeholder=\"login\" component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\" type=\"password\" placeholder=\"password\" component={Input} validate={[required]}/>\r\n            </div>\r\n            <div className={style.error}>\r\n                {props.error}\r\n            </div>\r\n            <div style={{display: \"flex\"}}>\r\n                <Field name=\"rememberMe\" type=\"checkbox\" component={Input}/><span>remember me</span>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Submit</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\nexport const LoginForm = reduxForm<FormDataType>({\r\n    form: \"login\"\r\n})(Form)","import React, {ComponentType} from \"react\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./Login\";\r\nimport {logInTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logInTC: (email: string | null, password: string | null, rememberMe: boolean) => void\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType)=>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport type LoginPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(MapStateToProps, {logInTC}))(Login)","import React from \"react\"\r\nimport {FormDataType, LoginForm} from \"./LoginForm\";\r\nimport style from \"./Login.module.css\"\r\nimport {LoginPropsType} from \"./LoginContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        const {email, password, rememberMe} = formData\r\n        props.logInTC(email, password, rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.loginPage}>\r\n            <h2>login</h2>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) => ({type: \"INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise]).then(() => {\r\n            dispatch(initializeSuccess(true))\r\n        })\r\n    }\r\n}\r\n","import React, {ComponentType} from \"react\";\nimport style from \"./App.module.css\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.Component<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Switch>\n                        <Route path=\"/login\" render={() => <LoginContainer/>}/>\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/dialogs\" render={() => <Dialogs/>}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__vfZZh\",\"dialogItemContainer\":\"Dialog_dialogItemContainer__3oAht\",\"activeLink\":\"Dialog_activeLink__3wrI0\",\"dialogItem\":\"Dialog_dialogItem__3A0vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__NMOAK\",\"messageText\":\"Message_messageText__215RR\",\"sendMessageButton\":\"Message_sendMessageButton__2mVJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};"],"sourceRoot":""}