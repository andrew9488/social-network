{"version":3,"sources":["App.module.css","components/Footer/Footer.module.css","components/Profile/Profile.module.css","hoc/withAuthRedirect.tsx","components/common/Form/CommonForm.tsx","components/Navbar/Navbar.module.css","redux/dialogsPageReducer.ts","utils/objectHelpers.ts","redux/usersPageReducer.ts","components/Profile/ProfileAvatar/ProfileAvatar.module.css","components/Profile/ProfileData/Contacts.module.css","api/api.ts","components/Profile/ProfileData/ProfileInfo.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","assets/images/avatars/city-Z.png","components/Profile/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileData/Contacts.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileInfo.tsx","components/Profile/ProfileData/ProfileForm.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/appReducer.ts","hoc/withSuspense.tsx","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","components/common/Form/CustomField.tsx","redux/authReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","utils/validator.ts","components/Profile/ProfileData/ProfileData.module.css","components/Profile/ProfileData/ProfileForm.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","assets/images/avatars/usersAvatar.jpg","components/common/Form/CustomField.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","max","maxLength","Form","React","memo","onSubmit","handleSubmit","name","type","component","Textarea","validate","required","CommonForm","reduxForm","form","initialState","dialogs","id","img","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","newText","sendMessage","objectHelpers","items","itemId","objectPropsName","newObjectsProps","map","item","users","pageSize","totalCount","currentPage","isFetching","disableButton","followingInProgress","setIsFetchingUsersComponent","usersPageReducer","userId","followed","filter","setFollowingProgress","getUsersTC","dispatch","usersAPI","getUsers","then","data","setCurrentPage","catch","error","console","warn","followTC","followAPI","follow","resultCode","length","unFollowTC","unFollow","instance","axios","create","withCredentials","baseURL","headers","get","response","post","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","uploadPhoto","formData","FormData","append","updateProfileInfo","profile","authAPI","authMe","logIn","email","password","rememberMe","logOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","style","navbar","activeClassName","activeLink","Footer","footer","footerText","ProfileAvatar","profileAvatar","src","photo1","alt","photo2","photo3","Contacts","contactsValue","contactsKey","li","ProfileStatus","useEffect","setStatus","useState","editableMode","setEditableMode","onBlur","autoFocus","value","onChange","e","currentTarget","onDoubleClick","ProfileInfo","fullName","isOwner","onClick","onActivateEditMode","icon","faPen","aboutMe","descriptionInfo","work","lookingForAJob","open","busy","lookingForAJobDescription","ProfileForm","formContainer","formButton","faCheck","deactivateEditMode","cancel","Field","placeholder","Input","checkboxField","Object","keys","contacts","key","contactFields","ProfileData","editMode","setEditMode","useCallback","changeProfileInfo","profileData","Preloader","avatar","avatarImg","photos","large","userAvatar","faFileImage","buttonLoad","target","files","initialValues","index","Post","postsElement","posts","p","postMessageContainer","postMessage","smallImage","myAvatar","text","like","increase","faHeart","likesCounter","MyPosts","addPost","myPosts","title","container","facebook","website","vk","twitter","instagram","youtube","github","mainLink","small","profilePageReducer","newPost","postText","postId","photo","setIsFetchingProfileComponent","setProfileStatus","getUserProfileTC","compose","profilePage","Profile","updateStatusTC","uploadPhotoTC","changeProfileInfoTC","MyPostsContainer","ProfileContainer","Number","this","match","params","myId","getUserStatusTC","refresh","prevProps","prevState","PureComponent","getState","stopSubmit","_error","withRouter","Header","header","logo","headUser","faEnvelope","faBell","login","logOutTC","HeaderContainer","isInitialization","appReducer","withSuspense","Suspense","fallback","Dialogs","lazy","UsersContainer","LoginContainer","App","appInitializeTC","app","content","exact","path","render","authPromise","authTC","Promise","all","sidebarReducer","reducer","combineReducers","dialogsPage","sidebar","usersPage","authReducer","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","fieldForm","children","setIsAuth","setUserData","logInTC","preloader"],"mappings":"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","file":"static/js/main.1fd0cbe6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormType = {\r\n    newText: string\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormType>> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__34pJT\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type PhotoType = {\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    uploadPhoto(data: Blob) {\r\n        const formData = new FormData()\r\n        formData.append(`image`, data)\r\n        return instance.put<CommonResponseType<PhotoType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateProfileInfo(profile: ProfileType) {\r\n        return instance.put<CommonResponseType>(`profile`, profile)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProfileInfo_name__2lyxE\",\"aboutMe\":\"ProfileInfo_aboutMe__2eb73\",\"work\":\"ProfileInfo_work__1n8of\",\"open\":\"ProfileInfo_open__20fJ1\",\"busy\":\"ProfileInfo_busy__268D-\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__1nUvi\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React from \"react\";\r\nimport style from \"./ProfileAvatar.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileAvatar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Contacts.module.css\"\r\n\r\ntype ContactsPropsType = {\r\n    contactsKey: string | null\r\n    contactsValue: string | null\r\n}\r\nexport const Contacts: React.FC<ContactsPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.contactsValue && props.contactsValue ?\r\n                    <>\r\n                        <span>{props.contactsKey}</span>\r\n                        <li className={style.li}>{props.contactsValue}</li>\r\n                    </> : null}\r\n            </ul>\r\n        </>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPen} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    isOwner: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    onActivateEditMode: () => void\r\n}\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <h3 className={style.name}>{props.fullName} {props.isOwner ?\r\n                <button onClick={props.onActivateEditMode}><FontAwesomeIcon icon={faPen}/></button> : \"\"} </h3>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <span className={style.aboutMe}><span\r\n                className={style.descriptionInfo}>About Me:</span> {props.aboutMe}</span>\r\n            <div className={style.work}>\r\n                        <span className={props.lookingForAJob ? style.open : style.busy}>\r\n                            <span\r\n                                className={style.descriptionInfo}>Looking a job:</span> {props.lookingForAJob ? \" Open to work\" : \" Busy\"}\r\n                        </span>\r\n                {props.lookingForAJob && props.lookingForAJobDescription &&\r\n                <span><span className={style.descriptionInfo}>Vacancy:</span> {props.lookingForAJobDescription}</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./ProfileForm.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Input, Textarea} from \"../../common/Form/CustomField\";\r\nimport {required} from \"../../../utils/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\n\r\ntype FormType = {\r\n    profile: ProfileType\r\n    deactivateEditMode: () => void\r\n}\r\n\r\nexport type ProfileFormPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n}\r\n\r\nconst Form: React.FC<InjectedFormProps<ProfileFormPropsType, FormType> & FormType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.formContainer}>\r\n            <div className={style.formButton}>\r\n                <button type=\"submit\"><FontAwesomeIcon icon={faCheck}/></button>\r\n                <button onClick={props.deactivateEditMode} className={style.cancel}>x</button>\r\n            </div>\r\n            <div>\r\n                <span>Full Name: </span><Field name=\"fullName\" type=\"text\" placeholder=\"Full Name\" component={Input}\r\n                                               validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <span>About Me: </span><Field name=\"aboutMe\" type=\"text\" component={Textarea} validate={[required]}/>\r\n            </div>\r\n            <div className={style.checkboxField}>\r\n                <span>Looking for a job: </span>\r\n                <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input}/>\r\n            </div>\r\n            <div>\r\n                <span>A Job Description: </span>\r\n                <Field name=\"lookingForAJobDescription\" type=\"text\" component={Textarea} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                <span>Contacts:</span>\r\n                {(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key) => {\r\n                    return <div key={key} className={style.contactFields}>\r\n                        <span>{key}: </span><Field name={\"contacts.\" + key} type=\"text\" component={Input}\r\n                                                   validate={[]}/>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport const ProfileForm = (reduxForm<ProfileFormPropsType, FormType>(\r\n    {\r\n        form: \"profileInfo\",\r\n    }\r\n)(Form))","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Contacts} from \"./Contacts\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileForm, ProfileFormPropsType} from \"./ProfileForm\";\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    uploadPhoto: (photos: Blob) => void\r\n    isOwner: boolean\r\n    changeProfileInfo: (profile: ProfileType) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n\r\n\r\n        const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n        const onUploadPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n            if (e.target.files) {\r\n                props.uploadPhoto(e.target.files[0])\r\n            }\r\n        }\r\n\r\n        const onActivateEditMode = () => {\r\n            setEditMode(true)\r\n        }\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false)\r\n        }\r\n\r\n        const onSubmit = useCallback((formData: ProfileFormPropsType) => {\r\n            // @ts-ignore\r\n            props.changeProfileInfo(formData)\r\n            setEditMode(false)\r\n        }, [props])\r\n\r\n        return (\r\n            <div className={style.profileData}>\r\n                {props.isFetching\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <div className={style.avatar}>\r\n                            <img className={style.avatarImg}\r\n                                 src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                                 alt=\"my_avatar\"/>\r\n                            {props.isOwner\r\n                                ? <label>\r\n                                    <FontAwesomeIcon icon={faFileImage} className={style.buttonLoad}/>\r\n                                    <input type=\"file\" onChange={onUploadPhoto}/>\r\n                                </label>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={style.data}>\r\n                            {editMode\r\n                                ? <ProfileForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                               profile={props.profile}\r\n                                               deactivateEditMode={deactivateEditMode}/>\r\n                                : < ProfileInfo fullName={props.profile.fullName}\r\n                                                aboutMe={props.profile.aboutMe}\r\n                                                lookingForAJob={props.profile.lookingForAJob}\r\n                                                lookingForAJobDescription={props.profile.lookingForAJobDescription}\r\n                                                isOwner={props.isOwner}\r\n                                                status={props.status}\r\n                                                updateStatus={props.updateStatus}\r\n                                                onActivateEditMode={onActivateEditMode}\r\n                                />\r\n                            }\r\n                            {\r\n                                editMode ? null\r\n                                    : <div>\r\n                                        <b>Contacts: </b>{(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key, index) => {\r\n                                        return <Contacts key={index} contactsKey={key}\r\n                                                         contactsValue={props.profile.contacts[key]}/>\r\n                                    })}\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from \"../../../../assets/images/avatars/usersAvatar.jpg\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n    increase: (id: number) => void\r\n    smallImage: string | null\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const increase = (id: number) => {\r\n        props.increase(id)\r\n    }\r\n\r\n    const postsElement =\r\n        <>\r\n            {\r\n                props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                    <div className={style.postMessage}>\r\n                        <img src={props.smallImage ? props.smallImage : myAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                        <div className={style.text}> {p.post} </div>\r\n                    </div>\r\n                    <div className={style.like}\r\n                         onClick={() => increase(p.id)}>\r\n                        <FontAwesomeIcon icon={faHeart}/> {p.likesCounter}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const addPost = useCallback((text: CommonFormType) => {\r\n        props.addPost(text.newText)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}\r\n                      increase={props.increase}\r\n                      smallImage={props.smallImage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof increaseLike>\r\n    | ReturnType<typeof setProfileImage>\r\n\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: null,\r\n        fullName: null as string | null,\r\n        userId: 1,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"PROFILE-PAGE/INCREASE-LIKE\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => p.id === action.postId ? {...p, likesCounter: p.likesCounter + 1} : p)\r\n            }\r\n        }\r\n        case \"PROFILE-PAGE/SET-PROFILE-IMAGE\": {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: {\r\n                        ...state.profile.photos,\r\n                        large: action.photo,\r\n                        small: action.photo\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPost = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\nexport const increaseLike = (postId: number) =>\r\n    ({type: \"PROFILE-PAGE/INCREASE-LIKE\", postId} as const)\r\nexport const setProfileImage = (photo: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-IMAGE\", photo} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const uploadPhotoTC = (photos: Blob): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.uploadPhoto(photos)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileImage(data.data.photos.large))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const changeProfileInfoTC = (profile: ProfileType): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType | StopSubmitActionsType>, getState: () => AppStateType) => {\r\n        const userId = getState().auth.data.userId\r\n        profileAPI.updateProfileInfo(profile)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(getUserProfileTC(userId))\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"profileInfo\", {_error: error}))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, increaseLike, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    smallImage: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n    increase: (id: number) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        smallImage: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPost(text))\r\n        },\r\n        increase: (id: number) => {\r\n            dispatch(increaseLike(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                    uploadPhoto={props.uploadPhotoTC}\r\n                    changeProfileInfo={props.changeProfileInfoTC}\r\n                    isOwner={props.isOwner ? props.isOwner : false}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfileTC,\r\n    getUserStatusTC,\r\n    uploadPhotoTC,\r\n    ProfileType,\r\n    updateStatusTC, changeProfileInfoTC\r\n} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n    isOwner?: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    uploadPhotoTC: (photos: Blob) => void\r\n    changeProfileInfoTC: (profile: ProfileType) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    refresh() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile isOwner={!this.props.match.params.userId}{...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {\r\n            getUserProfileTC,\r\n            getUserStatusTC,\r\n            updateStatusTC,\r\n            uploadPhotoTC,\r\n            changeProfileInfoTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\"><FontAwesomeIcon icon={faEnvelope}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\"><FontAwesomeIcon icon={faBell}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to=\"/profile/13446 \">{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to=\"/login\">Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (restProps: T) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...restProps}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n","import React, {ComponentType} from \"react\";\nimport style from \"./App.module.css\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs/Dialogs\"))\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\nconst LoginContainer = React.lazy(() => import(\"./components/Login/LoginContainer\"))\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Switch>\n                        <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/login\" component={withSuspense(LoginContainer)}/>\n                        <Route path=\"/users\" component={withSuspense(UsersContainer)}/>\n                        <Route path=\"/dialogs\" component={withSuspense(Dialogs)}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsAuth>\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authTC())\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"login\", {_error: error}))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"buttonLoad\":\"ProfileData_buttonLoad__1p5LM\",\"data\":\"ProfileData_data__2dnsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ProfileForm_formContainer__MMIHX\",\"formButton\":\"ProfileForm_formButton__3AVOl\",\"cancel\":\"ProfileForm_cancel__1BYbG\",\"checkboxField\":\"ProfileForm_checkboxField__1SvOV\",\"contactFields\":\"ProfileForm_contactFields__3zXi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};"],"sourceRoot":""}