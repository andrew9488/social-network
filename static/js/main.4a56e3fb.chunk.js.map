{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileAvatar/ProfileAvatar.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Profile/ProfileData/ProfileData.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/Dialogs/DialogsItem/Dialog.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsItem/DialogContainer.tsx","utils/validator.ts","components/common/Form/CustomField.tsx","components/common/Form/CommonForm.tsx","components/Dialogs/DialogsItem/Message.tsx","redux/dialogsPageReducer.ts","components/Dialogs/DialogsItem/MessageContainer.tsx","components/Dialogs/Dialogs.tsx","api/api.ts","utils/objectHelpers.ts","redux/usersPageReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","assets/images/avatars/usersAvatar.jpg","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","assets/images/avatars/city-Z.png","components/Profile/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileData.tsx","assets/images/avatars/myAvatar.jpg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","redux/appReducer.ts","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","components/common/Form/CustomField.module.css","components/Users/Users.module.css","components/Users/User.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsItem/Dialog.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Footer/Footer.module.css","components/Dialogs/DialogsItem/Message.module.css","components/Profile/Profile.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","React","memo","className","style","navbar","items","item","to","activeClassName","activeLink","Footer","footer","footerText","Dialog","props","dialog","dialogs","map","d","dialogItemContainer","id","dialogItem","src","img","alt","name","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","restProps","compose","dialogsPage","required","value","FormControl","input","meta","touched","error","fieldForm","children","Textarea","Input","max","length","maxLength","Form","onSubmit","handleSubmit","Field","type","component","validate","CommonForm","reduxForm","form","Message","sendMessageText","useCallback","text","sendMessage","newText","message","messageText","messages","m","initialState","dialogsPageReducer","action","newMessage","Date","getTime","dispatch","Dialogs","DialogContainer","MessageContainer","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","followAPI","post","delete","profileAPI","userId","status","put","authAPI","email","password","rememberMe","objectHelpers","itemId","objectPropsName","newObjectsProps","users","totalCount","isFetching","disableButton","followingInProgress","usersPageReducer","followed","filter","setIsFetchingUsersComponent","setFollowingProgress","Preloader","preloader","User","user","userAvatar","photos","small","UsersPhoto","userData","disabled","some","onClick","unFollowTC","followTC","Users","useState","portionNumber","setPortionNumber","countPage","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","usersPage","page","paginator","p","index","onClickCurrentPage","container","u","UsersContainer","getUsersTC","this","Fragment","PureComponent","setCurrentPage","catch","console","warn","resultCode","follow","unFollow","ProfileAvatar","profileAvatar","photo1","photo2","photo3","ProfileStatus","useEffect","setStatus","editableMode","setEditableMode","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","ProfileData","profileData","avatar","avatarImg","profile","large","fullName","aboutMe","work","lookingForAJob","busy","open","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","postsElement","posts","postMessageContainer","postMessage","myAvatar","like","likesCounter","MyPosts","addPost","myPosts","title","profilePageReducer","newPost","postText","setIsFetchingProfileComponent","setProfileStatus","profilePage","Profile","updateStatusTC","MyPostsContainer","ProfileContainer","Number","match","params","myId","getUserProfileTC","getUserStatusTC","withRouter","Header","header","logo","headUser","logOut","login","logOutTC","authReducer","setIsAuth","authTC","setUserData","logInTC","stopSubmit","_error","HeaderContainer","LoginForm","textAlign","href","target","loginForm","placeholder","display","Login","formData","loginPage","isInitialization","appReducer","App","appInitializeTC","app","content","path","render","LoginContainer","authPromise","Promise","all","sidebarReducer","reducer","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,6B,mBCAzHD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,UAAY,+BAA+B,KAAO,0BAA0B,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,4B,mDCapTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2GCLDQ,EAAmBC,IAAMC,MAAK,WACvC,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,sBAAKF,UAAWC,IAAME,MAAtB,UACI,qBAAKH,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAMM,WAA9C,uBAEJ,qBAAKP,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBL,IAAMM,WAA3C,oBAEJ,qBAAKP,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAMM,WAA9C,wBAEJ,qBAAKP,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAMM,WAA5C,0BAEJ,qBAAKP,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAMM,WAA5C,qBAEJ,qBAAKP,UAAWC,IAAMG,KAAtB,SACI,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBL,IAAMM,WAA/C,gC,iBCpBPC,EAAmBV,IAAMC,MAAK,WACvC,OACI,wBAAQC,UAAWC,IAAMQ,OAAzB,SACI,sBAAKT,UAAWC,IAAMS,WAAtB,UACI,4DAAqC,uBACrC,6F,mCCJHC,EAAoCb,IAAMC,MAAK,SAACa,GAEzD,OACI,qBAAKZ,UAAWC,IAAMY,OAAtB,SACKD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAI,qBAAKhB,UAAWC,IAAMgB,oBAAtB,SACpB,cAAC,IAAD,CAASZ,GAAI,YAAcW,EAAEE,GAAIZ,gBAAiBL,IAAMM,WAAxD,SACI,sBAAKP,UAAWC,IAAMkB,WAAtB,UACI,qBAAKC,IAAKJ,EAAEK,IAAKC,IAAI,WACrB,+BAAON,EAAEO,aAJmDP,EAAEE,Y,+BCAhFM,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAOhC,OAAQC,YAAQN,EAAiB,GAAzBM,EANkB,SAAClB,GAA8B,IAC9Cc,EAAwBd,EAAxBc,OAAWK,EADkC,YACrBnB,EADqB,YAEpD,OAAKc,EACE,cAACG,EAAD,eAAeE,IADF,cAAC,IAAD,CAAU1B,GAAG,c,WCK1B2B,cACXF,aARoB,SAACL,GACrB,MAAO,CACHX,QAASW,EAAMQ,YAAYnB,WAMqD,IACpFc,EAFWI,CAEOrB,G,mCCzBTuB,EAAW,SAACC,GACrB,OAAIA,OACA,EAEO,qB,iBCATC,EAA2CtC,IAAMC,MAAK,YAAmD,EAAjDsC,MAAkD,IAAD,IAA1CC,KAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAWT,EAAe,gCAC3G,OACI,qCACI,qBAAK/B,UAAS,UAAKC,IAAMwC,UAAX,YAAwBF,GAAWC,EAAQvC,IAAMuC,MAAQ,IAAvE,SACKT,EAAUW,WAEf,qBAAK1C,UAAWC,IAAMuC,MAAtB,SACKD,GAAWC,GAAS,+BAAOA,YAM/BG,EAAwC7C,IAAMC,MAAK,SAACa,GAAW,IACjEyB,EAAuCzB,EAAvCyB,MAA0BN,GAAanB,EAAhC0B,KAAgC1B,EAA1B8B,SADmD,YACzB9B,EADyB,8BAEvE,OAAO,cAACwB,EAAD,2BAAiBxB,GAAjB,aAAwB,oDAAcyB,GAAWN,UAG/Ca,EAAqC9C,IAAMC,MAAK,SAACa,GAAW,IAC9DyB,EAAuCzB,EAAvCyB,MAA0BN,GAAanB,EAAhC0B,KAAgC1B,EAA1B8B,SADgD,YACtB9B,EADsB,8BAEpE,OAAO,cAACwB,EAAD,2BAAiBxB,GAAjB,aAAwB,iDAAWyB,GAAWN,UCfnDc,EFDmB,SAACA,GACtB,OAAO,SAACV,GACJ,GAAIA,GAASA,EAAMW,OAASD,EACxB,MAAM,qBAAN,OAA4BA,EAA5B,aEFAE,CAAU,KAEhBC,EAAoDlD,IAAMC,MAAK,SAACa,GAClE,OACI,uBAAMqC,SAAUrC,EAAMsC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAO5B,KAAK,UAAU6B,KAAK,OAAOC,UAAWV,EAAUW,SAAU,CAACpB,EAAUW,OAEhF,8BACI,wBAAQO,KAAK,SAAb,0BAMHG,EAAaC,YAA0B,CAChDC,KAAM,sBADgBD,CAEvBR,GCrBUU,EAAsC5D,IAAMC,MAAK,SAACa,GAE3D,IAAM+C,EAAkBC,uBAAY,SAACC,GACjCjD,EAAMkD,YAAYD,EAAKE,WACxB,CAACnD,IAEJ,OACI,sBAAKZ,UAAWC,IAAM+D,QAAtB,UACI,qBAAKhE,UAAWC,IAAMgE,YAAtB,SACKrD,EAAMsD,SAASnD,KAAI,SAAAoD,GAAC,OAAI,8BAAiBA,EAAEH,SAATG,EAAEjD,SAEzC,cAACqC,EAAD,CAAYN,SAAUU,U,QCJ5BS,EAAe,CACjBtD,QAAS,CACL,CACII,GAAI,EACJK,KAAM,OACNF,IAAK,6FAET,CAACH,GAAI,EAAGK,KAAM,qBAAsBF,IAAK,4EACzC,CACIH,GAAI,EACJK,KAAM,YACNF,IAAK,6FAET,CAACH,GAAI,EAAGK,KAAM,SAAUF,IAAK,8DAC7B,CAACH,GAAI,EAAGK,KAAM,eAAgBF,IAAK,2DAEvC6C,SAAU,CACN,CAAChD,GAAI,EAAG8C,QAAS,oBACjB,CAAC9C,GAAI,EAAG8C,QAAS,uBACjB,CAAC9C,GAAI,EAAG8C,QAAS,sCACjB,CAAC9C,GAAI,EAAG8C,QAAS,qBAuBVK,EAjBY,WAAsG,IAArG5C,EAAoG,uDAA1E2C,EAAcE,EAA4D,uCAE5H,OAAQA,EAAOlB,MACX,IAAK,4BACD,IAAMmB,EAA0B,CAC5BrD,IAAI,IAAIsD,MAAOC,UACfT,QAASM,EAAOP,SAEpB,OAAO,2BACAtC,GADP,IAEIyC,SAAS,GAAD,mBAAMzC,EAAMyC,UAAZ,CAAsBK,MAEtC,QACI,OAAO9C,ICnBJO,cACXF,aAfoB,SAACL,GACrB,MAAO,CACHyC,SAAUzC,EAAMQ,YAAYiC,aAIT,SAACQ,GACxB,MAAO,CACHZ,YAAa,SAACD,GACVa,ED8BqC,CAACtB,KAAM,4BAA6BW,QC9BpDF,SAO7BjC,EAFWI,CAEO0B,GC7BTiB,EAAoB7E,IAAMC,MAAK,WAExC,OACI,sBAAKC,UAAWC,IAAMa,QAAtB,UACI,8BACI,cAAC8D,EAAD,MAEJ,8BACI,cAACC,EAAD,Y,UCSVC,G,QAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,GAAW,SACXC,EAAqBC,GAC1B,OAAOR,GAASS,IAAT,qBAA6CF,EAA7C,kBAAkEC,IACpE/F,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAKnBC,GAAY,SACdxE,GACH,OAAO4D,GAASa,KAAT,iBAA4CzE,GAAM,IACpD3B,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAJnBC,GAAY,SAOZxE,GACL,OAAO4D,GAASc,OAAT,iBAA8C1E,IAChD3B,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAKnBI,GAAa,SACPC,GACX,OAAOhB,GAASS,IAAT,kBAAqCO,IACvCvG,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAJnBI,GAAa,SAORC,GACV,OAAOhB,GAASS,IAAT,yBAAuCO,IACzCvG,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAVnBI,GAAa,SAaTE,GACT,OAAOjB,GAASkB,IAAT,iBAAmD,CAACD,OAAQA,IAC9DxG,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAKnBQ,GAAU,WAEf,OAAOnB,GAASS,IAAT,WACFhG,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAJnBQ,GAAU,SAObC,EAAsBC,EAAyBC,GACjD,OAAOtB,GAASa,KAAT,aAAoE,CAACO,QAAOC,WAAUC,eACxF7G,MAAK,SAAAiG,GACF,OAAOA,EAASC,SAVnBQ,GAAU,WAcf,OAAOnB,GAASc,OAAT,cACFrG,MAAK,SAAAiG,GACF,OAAOA,EAASC,SC3FnBY,GAAgB,SAAClG,EAAYmG,EAAaC,EAAsBC,GACzE,OAAOrG,EAAMY,KAAI,SAACX,GAAD,OAAeA,EAAKmG,KAAqBD,EAA1B,2BAAuClG,GAASoG,GAAmBpG,MCkCjGgE,GAAe,CACjBqC,MAAO,GACPnB,SAAU,GACVoB,WAAY,EACZrB,YAAa,EACbsB,YAAY,EACZC,eAAe,EACfC,oBAAqB,IAsCVC,GAjCU,WAAoG,IAAnGrF,EAAkG,uDAAxE2C,GAAcE,EAA0D,uCAExH,OAAQA,EAAOlB,MACX,IAAK,oBACD,OAAO,2BACA3B,GADP,IAEIgF,MAAOJ,GAAc5E,EAAMgF,MAAOnC,EAAOwB,OAAQ,KAAM,CAACiB,UAAU,MAE1E,IAAK,sBACD,OAAO,2BACAtF,GADP,IAEIgF,MAAOJ,GAAc5E,EAAMgF,MAAOnC,EAAOwB,OAAQ,KAAM,CAACiB,UAAU,MAE1E,IAAK,uBACD,OAAO,2BAAItF,GAAX,IAAkBgF,MAAOnC,EAAOmC,QACpC,IAAK,8BACD,OAAO,2BAAIhF,GAAX,IAAkB4D,YAAaf,EAAOe,cAC1C,IAAK,6BACD,OAAO,2BAAI5D,GAAX,IAAkBiF,WAAYpC,EAAOoC,aACzC,IAAK,6CACD,OAAO,2BAAIjF,GAAX,IAAkBkF,WAAYrC,EAAOqC,aACzC,IAAK,oCACD,OAAO,2BACAlF,GADP,IAEIoF,oBAAqBvC,EAAOsC,cAAP,sBACXnF,EAAMoF,qBADK,CACgBvC,EAAOwB,SACtCrE,EAAMoF,oBAAoBG,QAAO,SAAA9F,GAAE,OAAIA,IAAOoD,EAAOwB,YAEnE,QACI,OAAOrE,IAWNwF,GAA8B,SAACN,GAAD,MACtC,CAACvD,KAAM,6CAA8CuD,eAC7CO,GAAuB,SAACN,EAAwBd,GAAzB,MAC/B,CAAC1C,KAAM,oCAAqCwD,gBAAed,W,6BC1FjD,OAA0B,6CCW1BqB,GARarH,IAAMC,MAAK,WACnC,OACI,mCACI,qBAAKqB,IAAKgG,GAAW9F,IAAI,mB,oBCNtB,OAA0B,wCCY5B+F,GAAgCvH,IAAMC,MAAK,SAACa,GAErD,OACI,sBAAKZ,UAAWC,KAAMqH,KAAtB,UACI,qBAAKtH,UAAWC,KAAMsH,WAAtB,SACI,cAAC,IAAD,CAASlH,GAAI,YAAcO,EAAM0G,KAAKpG,GAAtC,SACI,qBAAKE,IAAiC,OAA5BR,EAAM0G,KAAKE,OAAOC,MAAiB7G,EAAM0G,KAAKE,OAAOC,MAAQC,GAClEpG,IAAI,eAGjB,sBAAKtB,UAAWC,KAAM0H,SAAtB,UACI,sBAAM3H,UAAWC,KAAMsB,KAAvB,SAA8BX,EAAM0G,KAAK/F,OACzC,sBACIvB,UAAWC,KAAM8F,OADrB,SACoD,OAAtBnF,EAAM0G,KAAKvB,OAAkBnF,EAAM0G,KAAKvB,OAAS,yBAEnF,gCAESnF,EAAM0G,KAAKP,SAKN,wBAAQa,SAAUhH,EAAMiG,oBAAoBgB,MAAK,SAAA3G,GAAE,OAAIA,IAAON,EAAM0G,KAAKpG,MACjE4G,QAAS,WACLlH,EAAMmH,WAAWnH,EAAM0G,KAAKpG,KAFxC,sBAJA,wBAAQ0G,SAAUhH,EAAMiG,oBAAoBgB,MAAK,SAAA3G,GAAE,OAAIA,IAAON,EAAM0G,KAAKpG,MACjE4G,QAAS,WACLlH,EAAMoH,SAASpH,EAAM0G,KAAKpG,KAFtC,oBASV,sDCjCH+G,GAAkCnI,IAAMC,MAAK,SAACa,GAMvD,IANkE,IAAD,EAEvBsH,mBAAiB,GAFM,oBAE1DC,EAF0D,KAE3CC,EAF2C,KAI7DC,EAAYC,KAAKC,KAAK3H,EAAM8F,WAAa9F,EAAM0E,UAC/CkD,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAWI,IAC5BD,EAAME,KAAKD,GAGf,IACIE,EAAeL,KAAKC,KAAMF,EADZ,IAEdO,EAFc,IAEWT,EAAgB,GAAmB,EAC5DU,EAHc,GAGWV,EAE7B,OACI,sBAAKnI,UAAWC,KAAM6I,UAAtB,UACI,qBAAK9I,UAAWC,KAAM8I,KAAtB,SACI,sBAAK/I,UAAWC,KAAM+I,UAAtB,UACKb,EAAgB,GACjB,wBAAQL,QAAS,kBAAMM,EAAiBD,EAAgB,IAAxD,kBACCK,EAAMxB,QAAO,SAAAiC,GAAC,OAAIA,GAAKL,GAAyBK,GAAKJ,KACjD9H,KAAI,SAACkI,EAAGC,GACL,OAAO,sBAAkBpB,QAAS,WAC9BlH,EAAMuI,mBAAmBF,IAEhBjJ,UAAWY,EAAMyE,cAAgB4D,EAAIhJ,KAAMoF,YAAc,GAH/D,SAGoE4D,GAHzDC,MAKzBP,EAAeR,GAChB,wBAAQL,QAAS,kBAAMM,EAAiBD,EAAgB,IAAxD,uBAGPvH,EAAM+F,WAAa,cAAC,GAAD,IACd,qBAAK3G,UAAWC,KAAMmJ,UAAtB,SAEMxI,EAAMkI,UAAU/H,KAAI,SAAAsI,GAAC,OAAI,cAAChC,GAAD,CACMC,KAAM+B,EACNxC,oBAAqBjG,EAAMiG,oBAC3BmB,SAAUpH,EAAMoH,SAChBD,WAAYnH,EAAMmH,YAJbsB,EAAEnI,eCGxDoI,G,4MAMFH,mBAAqB,SAACJ,GAClB,EAAKnI,MAAM2I,WAAWR,EAAM,EAAKnI,MAAM0E,W,kEAJvCkE,KAAK5I,MAAM2I,WAAWC,KAAK5I,MAAMyE,YAAamE,KAAK5I,MAAM0E,Y,+BAQzD,OACI,cAAC,IAAMmE,SAAP,UACI,cAACxB,GAAD,2BAAWuB,KAAK5I,OAAhB,IACOuI,mBAAoBK,KAAKL,4B,GAdnBrJ,IAAM4J,eAiCpB1H,eACXF,aAboB,SAACL,GACrB,MAAO,CACHqH,UAAWrH,EAAMqH,UAAUrC,MAC3BnB,SAAU7D,EAAMqH,UAAUxD,SAC1BoB,WAAYjF,EAAMqH,UAAUpC,WAC5BrB,YAAa5D,EAAMqH,UAAUzD,YAC7BsB,WAAYlF,EAAMqH,UAAUnC,WAC5BE,oBAAqBpF,EAAMqH,UAAUjC,oBACrCD,cAAenF,EAAMqH,UAAUlC,iBAM/B,CAAC2C,WNaiB,SAAClE,EAAqBC,GAC5C,OAAO,SAACZ,GACJA,EAASuC,IAA4B,IACrC7B,GAAkBC,EAAaC,GAC1B/F,MAAK,SAAAkG,GACFf,EAASuC,IAA4B,IACrCvC,EAdqC,CAACtB,KAAM,uBAAwBqD,MAclDhB,EAAKtF,QACvBuE,EAbsC,CAACtB,KAAM,6BAA8BsD,WAapDjB,EAAKiB,aAC5BhC,EAfc,SAACW,GAAD,MAA0B,CAACjC,KAAM,8BAA+BiC,eAerEsE,CAAetE,OAE3BuE,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QMxBRwF,SN6BG,SAAClC,GACrB,OAAO,SAACpB,GACJA,EAASwC,IAAqB,EAAMpB,IACpCJ,GAAiBI,GACZvG,MAAK,SAAAkG,GACsB,IAApBA,EAAKsE,WACLrF,EAhCE,SAACoB,GAAD,MAAqB,CAAC1C,KAAM,oBAAqB0C,UAgC1CkE,CAAOlE,IAEZL,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,IAGnCQ,EAASwC,IAAqB,EAAOpB,OAExC8D,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QM5CEuF,WNiDL,SAACjC,GACvB,OAAO,SAACpB,GACJA,EAASwC,IAAqB,EAAMpB,IACpCJ,GAAmBI,GACdvG,MAAK,SAAAkG,GACsB,IAApBA,EAAKsE,WACLrF,EAnDI,SAACoB,GAAD,MAAqB,CAAC1C,KAAM,sBAAuB0C,UAmD9CmE,CAASnE,IAEdL,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,IAGnCQ,EAASwC,IAAqB,EAAOpB,OAExC8D,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,UMhEgBZ,EAF9BI,CAEgDsH,I,yCC/EhD,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,mCCO5BY,GAA0BpK,IAAMC,MAAK,WAC9C,OACI,sBAAKC,UAAWC,KAAMkK,cAAtB,UACI,8BACI,qBAAK/I,IAAKgJ,GAAQ9I,IAAI,aAE1B,8BACI,qBAAKF,IAAKiJ,GAAQ/I,IAAI,aAE1B,8BACI,qBAAKF,IAAKkJ,GAAQhJ,IAAI,mB,oBCVzBiJ,GAAkD,SAAC3J,GAE5D4J,qBAAU,WACNC,EAAU7J,EAAMmF,UACjB,CAACnF,EAAMmF,SAJ4D,MAM9BmC,oBAAkB,GANY,oBAM/DwC,EAN+D,KAMjDC,EANiD,OAO1CzC,mBAAiBtH,EAAMmF,QAPmB,oBAO/DA,EAP+D,KAOvD0E,EAPuD,KAsBtE,OACI,8BACMC,EAEI,uBAAOE,OAbU,WAC3BD,GAAgB,GAChB/J,EAAMiK,aAAa9E,IAYF+E,WAAS,EACT3I,MAAO4D,EACPgF,SAXE,SAACC,GACpBP,EAAUO,EAAEC,cAAc9I,UAMhB,uBAAM+I,cAhBS,WACzBP,GAAgB,IAeN,qBAAoD/J,EAAMmF,aClB/DoF,GAA8CrL,IAAMC,MAAK,SAACa,GACnE,OACI,qBAAKZ,UAAWC,KAAMmL,YAAtB,SACKxK,EAAM+F,WACD,cAAC,GAAD,IACA,qCACE,qBAAK3G,UAAWC,KAAMoL,OAAtB,SACI,qBAAKrL,UAAWC,KAAMqL,UACjBlK,IAAKR,EAAM2K,QAAQ/D,OAAOgE,MAAQ5K,EAAM2K,QAAQ/D,OAAOgE,MAAQjE,GAC/DjG,IAAI,gBAEb,sBAAKtB,UAAWC,KAAMwF,KAAtB,UACI,oBAAIzF,UAAWC,KAAMsB,KAArB,SAA4BX,EAAM2K,QAAQE,WAC1C,cAAC,GAAD,CAAe1F,OAAQnF,EAAMmF,OAAQ8E,aAAcjK,EAAMiK,eACzD,sBAAM7K,UAAWC,KAAMyL,QAAvB,SAAiC9K,EAAM2K,QAAQG,UAC/C,sBAAK1L,UAAWC,KAAM0L,KAAtB,UACJ,+BACI,sBAAM3L,UAAYY,EAAM2K,QAAQK,eAA8B3L,KAAM4L,KAAnB5L,KAAM6L,KAAvD,SACMlL,EAAM2K,QAAQK,eAAmC,QAAlB,oBAEhChL,EAAM2K,QAAQK,gBAAkB,+BAAOhL,EAAM2K,QAAQQ,+BAE1D,2CACKnL,EAAM2K,QAAQS,SAASC,UAAY,6BAAKrL,EAAM2K,QAAQS,SAASC,WAC/DrL,EAAM2K,QAAQS,SAASE,SAAW,6BAAKtL,EAAM2K,QAAQS,SAASE,UAC9DtL,EAAM2K,QAAQS,SAASG,IAAM,6BAAKvL,EAAM2K,QAAQS,SAASG,KACzDvL,EAAM2K,QAAQS,SAASI,SAAW,6BAAKxL,EAAM2K,QAAQS,SAASI,UAC9DxL,EAAM2K,QAAQS,SAASK,WAAa,6BAAKzL,EAAM2K,QAAQS,SAASK,YAChEzL,EAAM2K,QAAQS,SAASM,SAAW,6BAAK1L,EAAM2K,QAAQS,SAASM,UAC9D1L,EAAM2K,QAAQS,SAASO,QAAU,6BAAK3L,EAAM2K,QAAQS,SAASO,SAC7D3L,EAAM2K,QAAQS,SAASQ,UAAY,6BAAK5L,EAAM2K,QAAQS,SAASQ,yB,wCC5C7E,OAA0B,qCCS5BC,GAAO3M,IAAMC,MAAK,SAACa,GAE5B,IAAM8L,EACF,mCACK9L,EAAM+L,MAAM5L,KAAI,SAAAkI,GAAC,OAAI,sBAAKjJ,UAAWC,KAAM2M,qBAAtB,UAClB,sBAAK5M,UAAWC,KAAM4M,YAAtB,UACI,qBAAKzL,IAAK0L,GACLxL,IAAI,cACT,sBAAKtB,UAAWC,KAAM4D,KAAtB,cAA8BoF,EAAEtD,KAAhC,UAEJ,sBAAK3F,UAAWC,KAAM8M,KAAtB,kBAAkC9D,EAAE+D,kBAN+B/D,EAAE/H,SAUjF,OACI,qBAAKlB,UAAWC,KAAM0F,KAAtB,SACK+G,OClBAO,GAAsCnN,IAAMC,MAAK,SAACa,GAE3D,IAAMsM,EAAUtJ,uBAAY,SAACC,GACzBjD,EAAMsM,QAAQrJ,EAAKE,WACpB,CAACnD,IAEJ,OACI,sBAAKZ,UAAWC,KAAMkN,QAAtB,UACI,oBAAInN,UAAWC,KAAMmN,MAArB,sBACA,sBAAKpN,UAAWC,KAAMmJ,UAAtB,UACI,cAAC7F,EAAD,CAAYN,SAAUiK,IACtB,cAACT,GAAD,CAAME,MAAO/L,EAAM+L,iBCwB7BvI,GAAe,CACjBuI,MAAO,CACH,CAACzL,GAAI,EAAGyE,KAAM,yBAA0BqH,aAAc,GACtD,CAAC9L,GAAI,EAAGyE,KAAM,qBAAsBqH,aAAc,GAClD,CAAC9L,GAAI,EAAGyE,KAAM,4BAA6BqH,aAAc,GACzD,CAAC9L,GAAI,EAAGyE,KAAM,kCAAmCqH,aAAc,IAEnEzB,QAAS,CACLG,QAAS,0BACTM,SAAU,CACNC,SAAU,KACVC,QAAS,KACTC,GAAI,KACJC,QAAS,KACTC,UAAW,2CACXC,QAAS,KACTC,OAAQ,gCACRC,SAAU,MAEdZ,gBAAgB,EAChBG,0BAA2B,oDAC3BN,SAAU,KACV3F,OAAQ,MACR0B,OAAQ,CACJC,MAAOqF,GACPtB,MAAOsB,KAGfnG,YAAY,EACZZ,OAAQ,IAsCGsH,GAjCY,WAAsG,IAArG5L,EAAoG,uDAA1E2C,GAAcE,EAA4D,uCAE5H,OAAQA,EAAOlB,MACX,IAAK,wBACD,IAAMkK,EAAoB,CACtBpM,IAAI,IAAIsD,MAAOC,UACfkB,KAAMrB,EAAOiJ,SACbP,aAAc,GAElB,OAAO,2BACAvL,GADP,IAEIkL,MAAM,GAAD,mBAAMlL,EAAMkL,OAAZ,CAAmBW,MAEhC,IAAK,qCACD,OAAO,2BACA7L,GADP,IAEI8J,QAASjH,EAAOiH,UAExB,IAAK,iDACD,OAAO,2BACA9J,GADP,IAEIkF,WAAYrC,EAAOqC,aAE3B,IAAK,kCACD,OAAO,2BACAlF,GADP,IAEIsE,OAAQzB,EAAOyB,SAEvB,QACI,OAAOtE,IASN+L,GAAgC,SAAC7G,GAAD,MACxC,CAACvD,KAAM,iDAAkDuD,eACjD8G,GAAmB,SAAC1H,GAAD,MAC3B,CAAC3C,KAAM,kCAAmC2C,WCvFhC/D,eACXF,aAfoB,SAACL,GACrB,MAAO,CACHkL,MAAOlL,EAAMiM,YAAYf,UAIN,SAACjI,GACxB,MAAO,CACHwI,QAAS,SAACrJ,GACNa,EDsFwC,CAACtB,KAAM,wBAAyBmK,SCtFjD1J,SAKpB7B,CAEciL,ICxBhBU,GAAsC7N,IAAMC,MAAK,SAACa,GAC3D,OACI,sBAAKZ,UAAWC,KAAMsL,QAAtB,UACI,cAACrB,GAAD,IACA,sBAAKlK,UAAWC,KAAMmJ,UAAtB,UACI,cAAC+B,GAAD,CACIxE,WAAY/F,EAAM+F,WAClB4E,QAAS3K,EAAM2K,QACfxF,OAAQnF,EAAMmF,OACd8E,aAAcjK,EAAMgN,iBAExB,cAACC,GAAD,aCWVC,G,kLAGE,IAAIhI,EAASiI,OAAOvE,KAAK5I,MAAMoN,MAAMC,OAAOnI,QACvCA,IACDA,EAAS0D,KAAK5I,MAAMsN,MAExB1E,KAAK5I,MAAMuN,iBAAiBrI,GAC5B0D,KAAK5I,MAAMwN,gBAAgBtI,K,+BAK3B,OACI,cAAC6H,GAAD,eAAanE,KAAK5I,Y,GAdCd,IAAM4J,eA4BtB1H,eACXF,aAVoB,SAACL,GACrB,MAAO,CACH8J,QAAS9J,EAAMiM,YAAYnC,QAC3B5E,WAAYlF,EAAMiM,YAAY/G,WAC9BZ,OAAQtE,EAAMiM,YAAY3H,OAC1BmI,KAAMzM,EAAME,KAAK8D,KAAKK,UAMtB,CAACqI,iBH2DuB,SAACrI,GAC7B,OAAO,SAACpB,GACJA,EAAS8I,IAA8B,IACvC3H,GAA0BC,GACrBvG,MAAK,SAAAkG,GACFf,EAXX,CAACtB,KAAM,qCAAsCmI,QAWN9F,IAC5Bf,EAAS8I,IAA8B,OAE1C5D,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QGpEF4L,gBHyEI,SAACtI,GAC5B,OAAO,SAACpB,GACJmB,GAAyBC,GACpBvG,MAAK,SAAAkG,GACFf,EAAS+I,GAAiBhI,OAE7BmE,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QGhFeoL,eHqFd,SAAC7H,GAC3B,OAAO,SAACrB,GACJmB,GAAwBE,GACnBxG,MAAK,SAAAkG,GACsB,IAApBA,EAAKsE,WACLrF,EAAS+I,GAAiB1H,IAEtBN,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,OAItC0F,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,UGlGiC6L,IAAYzM,EAF3DI,CAE6E8L,I,oBC5D7E,OAA0B,iCCM5BQ,GAAoCxO,IAAMC,MAAK,SAACa,GAEzD,OACI,yBAAQZ,UAAWC,KAAMsO,OAAzB,UACI,qBAAKvO,UAAWC,KAAMuO,KAAtB,SAA4B,qBAAKpN,IAAKoN,GAAMlN,IAAI,WAChD,sBAAKtB,UAAWC,KAAMwO,SAAtB,UACI,8BACI,cAAC,IAAD,CAASpO,GAAG,WAAZ,wBAEJ,8BACI,cAAC,IAAD,CAASA,GAAG,IAAZ,4BAEJ,8BAEQO,EAAMc,OAEF,sBAAK1B,UAAWC,KAAMyO,OAAtB,UACI,cAAC,IAAD,CAASrO,GAAG,kBAAZ,SAA+BO,EAAM6E,KAAKkJ,QAC1C,wBAAQ7G,QAASlH,EAAMgO,SAAvB,uBAEF,cAAC,IAAD,CAASvO,GAAG,SAAZ,8B,SCVxB+D,GAAe,CACjBqB,KAAM,CACFK,OAAQ,KACR6I,MAAO,KACPzI,MAAO,MAEXxE,QAAQ,GAuBGmN,GAlBK,WAA+F,IAA9FpN,EAA6F,uDAAnE2C,GAAcE,EAAqD,uCAE9G,OAAQA,EAAOlB,MACX,IAAK,qBACD,OAAO,2BACA3B,GADP,IAEIgE,KAAMnB,EAAOmB,OAErB,IAAK,mBACD,OAAO,2BACAhE,GADP,IAEIC,OAAQ4C,EAAO5C,SAEvB,QACI,OAAOD,IAQNqN,GAAY,SAACpN,GAAD,MAAsB,CAAC0B,KAAM,mBAAoB1B,WAE7DqN,GAAS,WAClB,OAAO,SAACrK,GACJ,OAAOuB,KACF1G,MAAK,SAAAkG,GACF,GAAwB,IAApBA,EAAKsE,WAAkB,CAAC,IAAD,EACEtE,EAAKA,KAAzBvE,EADkB,EAClBA,GAAIyN,EADc,EACdA,MAAOzI,EADO,EACPA,MAChBxB,EAVO,SAACoB,EAAgB6I,EAAezI,GAAhC,MACtB,CAAC9C,KAAM,qBAAsBqC,KAAM,CAACK,SAAQ6I,QAAOzI,UAS3B8I,CAAY9N,EAAIyN,EAAOzI,IAChCxB,EAASoK,IAAU,SAEfrJ,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,OAItC0F,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QAKhByM,GAAU,SAAC/I,EAAsBC,EAAyBC,GACnE,OAAO,SAAC1B,GACJuB,GAAcC,EAAOC,EAAUC,GAC1B7G,MAAK,SAAAkG,GACF,GAAwB,IAApBA,EAAKsE,WACLrF,EAASqK,WACN,GAAwB,IAApBtJ,EAAKsE,WAAkB,CAC9B,IAAMvH,EAAQiD,EAAKvB,SAAS,GAC5BQ,EAASwK,aAAW,QAAS,CAACC,OAAQ3M,UAElCiD,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,OAItC0F,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,QChEvB4M,G,uKAGE,OACI,cAACd,GAAD,eAAY9E,KAAK5I,Y,GAJCd,IAAM4J,eAgBrB5H,gBAPS,SAACL,GACrB,MAAO,CACHgE,KAAMhE,EAAME,KAAK8D,KACjB/D,OAAQD,EAAME,KAAKD,UAKT,CAACkN,SDoDK,WACpB,OAAO,SAAClK,GACJuB,KACK1G,MAAK,SAAAkG,GACsB,IAApBA,EAAKsE,YACLrF,EAASuK,GAAQ,KAAM,MAAM,IAC7BvK,EAASoK,IAAU,KAEfrJ,EAAKvB,SAASpB,OAAS,GACvB+G,QAAQC,KAAKrE,EAAKvB,SAAS,OAItC0F,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,SCnEdV,CACesN,ICSjBC,GAAY7L,YAAwB,CAC7CC,KAAM,SADeD,EAnC+B,SAAC5C,GACrD,OACI,qCACI,sBAAKX,MAAO,CAACqP,UAAW,UAAxB,UACI,yDACI,mBAAGC,KAAM,wCACNC,OAAQ,SADX,sBAIJ,wEACA,0DACA,kDAEJ,uBAAMvM,SAAUrC,EAAMsC,aAAclD,UAAWC,IAAMwP,UAArD,UACI,8BACI,cAACtM,EAAA,EAAD,CAAO5B,KAAK,QAAQ6B,KAAK,OAAOsM,YAAY,QAAQrM,UAAWT,EAAOU,SAAU,CAACpB,OAErF,8BACI,cAACiB,EAAA,EAAD,CAAO5B,KAAK,WAAW6B,KAAK,WAAWsM,YAAY,WAAWrM,UAAWT,EAClEU,SAAU,CAACpB,OAEtB,qBAAKlC,UAAWC,IAAMuC,MAAtB,SACK5B,EAAM4B,QAEX,sBAAKvC,MAAO,CAAC0P,QAAS,QAAtB,UACI,cAACxM,EAAA,EAAD,CAAO5B,KAAK,aAAa6B,KAAK,WAAWC,UAAWT,IAAQ,kDAEhE,8BACI,wBAAQQ,KAAK,SAAb,+B,qBCpCPwM,GAAkC9P,IAAMC,MAAK,SAACa,GAEvD,IAAMqC,EAAWW,uBAAY,SAACiM,GAA4B,IAC/C3J,EAA+B2J,EAA/B3J,MAAOC,EAAwB0J,EAAxB1J,SAAUC,EAAcyJ,EAAdzJ,WACxBxF,EAAMqO,QAAQ/I,EAAOC,EAAUC,KAChC,CAACxF,IAEJ,OAAIA,EAAMc,OACC,cAAC,IAAD,CAAUrB,GAAG,aAIpB,sBAAKL,UAAWC,KAAM6P,UAAtB,UACI,uCACA,cAACT,GAAD,CAAWpM,SAAUA,UCGlBjB,eACXF,aAToB,SAACL,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAO6D,CAACuN,aAD1EjN,CACqF4N,IChB9FxL,GAAe,CACjB2L,kBAAkB,GAkBPC,GAbI,WAA8F,IAA7FvO,EAA4F,uDAAlE2C,GAAcE,EAAoD,uCAE5G,OAAQA,EAAOlB,MACX,IAAK,yBACD,OAAO,2BACA3B,GADP,IAEIsO,iBAAkBzL,EAAOyL,mBAEjC,QACI,OAAOtO,ICMbwO,G,kLAGEzG,KAAK5I,MAAMsP,oB,+BAKX,OAAK1G,KAAK5I,MAAMmP,iBAKZ,sBAAK/P,UAAWC,IAAMkQ,IAAtB,UACI,cAAC,GAAD,IACA,cAACtQ,EAAD,IACA,qBAAKG,UAAWC,IAAMmQ,QAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,oBAAoBC,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAACC,GAAD,OACnC,cAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,cAAC3L,EAAD,YAG7C,cAACnE,EAAD,OAfG,cAAC,GAAD,Q,GATDV,IAAM4J,eAqCT1H,eACXF,aARoB,SAACL,GACrB,MAAO,CACHsO,iBAAkBtO,EAAM0O,IAAIJ,oBAO5B,CAACG,gBDpCsB,WAC3B,OAAO,SAACxL,GACJ,IAAI8L,EAAc9L,EAASqK,MAC3B0B,QAAQC,IAAI,CAACF,IACRjR,MAAK,WACFmF,EAPX,CAACtB,KAAM,yBAA0B2M,kBAOK,OAE9BnG,OAAM,SAAApH,GACHqH,QAAQC,KAAKtH,UC4BD6L,IAFbrM,CAEyBiO,ICpElC7L,GAAe,GASNuM,GALQ,WAA0E,IAAzElP,EAAwE,uDAA/C2C,GAE7C,OAAO3C,G,oBCILmP,GAAUC,YAAgB,CAC5BnD,YAAaL,GACbpL,YAAaoC,EACbyM,QAASH,GACT7H,UAAWhC,GACXnF,KAAMkN,GACNsB,IAAKH,GACLvM,KAAMsN,OAKGC,GAAQC,YAAYL,GAASM,YAAgBC,OAG1DC,OAAOJ,MAAQA,GCjBfK,IAASf,OACL,cAAC,IAAMgB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZO,SAASC,eAAe,SAM5BpS,K,mBCrBAF,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,UAAY,iC,mBCA5GD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,UAAY,yBAAyB,YAAc,2BAA2B,UAAY,2B,mBCAjJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,SAAW,uBAAuB,KAAO,mBAAmB,OAAS,qBAAqB,SAAW,yB,mBCAvLD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,qBAAuB,mCAAmC,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,qB,mBCA/KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,oBAAsB,oCAAoC,WAAa,2BAA2B,WAAa,6B,mBCAjKD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,yB,mBCA3HD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,MAAQ,yB,mBCApGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,mBCAnDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,kBAAoB,qC,mBCApHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,8B","file":"static/js/main.4a56e3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__FhxYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__1F-A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"data\":\"ProfileData_data__2dnsH\",\"name\":\"ProfileData_name__Cie_-\",\"aboutMe\":\"ProfileData_aboutMe__29MIs\",\"work\":\"ProfileData_work__3nfZO\",\"open\":\"ProfileData_open__1BQzQ\",\"busy\":\"ProfileData_busy__3wO3n\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","import style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogPropsType} from \"./DialogContainer\";\r\n\r\nexport const Dialog: React.FC<DialogPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            {props.dialogs.map(d => <div className={style.dialogItemContainer} key={d.id}>\r\n                <NavLink to={\"/dialogs/\" + d.id} activeClassName={style.activeLink}>\r\n                    <div className={style.dialogItem}>\r\n                        <img src={d.img} alt=\"avatar\"/>\r\n                        <span>{d.name}</span>\r\n                    </div>\r\n                </NavLink>\r\n            </div>)}\r\n        </div>\r\n    );\r\n})\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import {Dialog} from \"./Dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogType} from \"../../../redux/dialogsPageReducer\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport { ComponentType } from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\ntype MapDispatchPropsType = {}\r\n\r\nexport type DialogPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {}),\r\n    withAuthRedirect)(Dialog)\r\n","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormType = {\r\n    newText: string\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormType>> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","import style from \"./Message.module.css\";\r\nimport React, {useCallback} from \"react\";\r\nimport {MessagePropsType} from \"./MessageContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\nexport const Message: React.FC<MessagePropsType> = React.memo((props) => {\r\n\r\n    const sendMessageText = useCallback((text: CommonFormType) => {\r\n        props.sendMessage(text.newText)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.message}>\r\n            <div className={style.messageText}>\r\n                {props.messages.map(m => <div key={m.id}>{m.message}</div>)}\r\n            </div>\r\n            <CommonForm onSubmit={sendMessageText}/>\r\n        </div>\r\n    );\r\n})","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","import {Message} from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogsPageReducerActionsType, MessageType, sendMessage,} from \"../../../redux/dialogsPageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (text: string) => void\r\n}\r\n\r\nexport type MessagePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<DialogsPageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (text: string) => {\r\n            dispatch(sendMessage(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Message)\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogContainer from \"./DialogsItem/DialogContainer\";\r\nimport MessageContainer from \"./DialogsItem/MessageContainer\";\r\n\r\nexport const Dialogs: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div>\r\n                <DialogContainer/>\r\n            </div>\r\n            <div>\r\n                <MessageContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\n","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","import {UserType} from \"../../redux/usersPageReducer\";\r\nimport React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UsersPhoto from \"../../assets/images/avatars/usersAvatar.jpg\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.userAvatar}>\r\n                <NavLink to={\"/profile/\" + props.user.id}>\r\n                    <img src={props.user.photos.small !== null ? props.user.photos.small : UsersPhoto}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={style.userData}>\r\n                <span className={style.name}>{props.user.name}</span>\r\n                <span\r\n                    className={style.status}>{props.user.status !== null ? props.user.status : \"I have not status\"}</span>\r\n            </div>\r\n            <div>\r\n                {\r\n                    !props.user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.followTC(props.user.id)\r\n                                  }}>follow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.unFollowTC(props.user.id)\r\n                                  }}>unfollow</button>\r\n                }\r\n                <button>message</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport {User} from \"./User\";\r\n\r\nexport const Users: React.FC<UsersPropsType> = React.memo((props) => {\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    let countPage = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil((countPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <div className={style.page}>\r\n                <div className={style.paginator}>\r\n                    {portionNumber > 1 &&\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n                    {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map((p, index) => {\r\n                            return <span key={index} onClick={() => {\r\n                                props.onClickCurrentPage(p)\r\n                            }}\r\n                                         className={props.currentPage === p ? style.currentPage : ''}>{p}</span>\r\n                        })}\r\n                    {portionCount > portionNumber &&\r\n                    <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>}\r\n                </div>\r\n            </div>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={style.container}>\r\n                    {\r\n                        props.usersPage.map(u => <User key={u.id}\r\n                                                       user={u}\r\n                                                       followingInProgress={props.followingInProgress}\r\n                                                       followTC={props.followTC}\r\n                                                       unFollowTC={props.unFollowTC}/>)\r\n                    }\r\n                </div>}\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {followTC, getUsersTC, unFollowTC, UserType} from \"../../redux/usersPageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersClassContainerPropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    disableButton: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unFollowTC: (userId: number) => void\r\n}\r\n\r\ntype OwnTypeProps = {\r\n    onClickCurrentPage: (page: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType & OwnTypeProps\r\n\r\nclass UsersContainer extends React.PureComponent<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickCurrentPage = (page: number) => {\r\n        this.props.getUsersTC(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Users {...this.props}\r\n                       onClickCurrentPage={this.onClickCurrentPage}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        disableButton: state.usersPage.disableButton,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUsersTC, followTC, unFollowTC}), withAuthRedirect)(UsersContainer)","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React from \"react\";\r\nimport style from \"./ProfileAvatar.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileAvatar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profileData}>\r\n            {props.isFetching\r\n                ? <Preloader/>\r\n                : <>\r\n                    <div className={style.avatar}>\r\n                        <img className={style.avatarImg}\r\n                             src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                    </div>\r\n                    <div className={style.data}>\r\n                        <h3 className={style.name}>{props.profile.fullName}</h3>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        <span className={style.aboutMe}>{props.profile.aboutMe}</span>\r\n                        <div className={style.work}>\r\n                    <span>\r\n                        <span className={!props.profile.lookingForAJob ? style.open : style.busy}>\r\n                            {!props.profile.lookingForAJob ? \" Open to work\" : \" Busy\"}</span>\r\n                        </span>\r\n                            {props.profile.lookingForAJob && <span>{props.profile.lookingForAJobDescription}</span>}\r\n                        </div>\r\n                        <ul>Contacts:\r\n                            {props.profile.contacts.facebook && <li>{props.profile.contacts.facebook}</li>}\r\n                            {props.profile.contacts.website && <li>{props.profile.contacts.website}</li>}\r\n                            {props.profile.contacts.vk && <li>{props.profile.contacts.vk}</li>}\r\n                            {props.profile.contacts.twitter && <li>{props.profile.contacts.twitter}</li>}\r\n                            {props.profile.contacts.instagram && <li>{props.profile.contacts.instagram}</li>}\r\n                            {props.profile.contacts.youtube && <li>{props.profile.contacts.youtube}</li>}\r\n                            {props.profile.contacts.github && <li>{props.profile.contacts.github}</li>}\r\n                            {props.profile.contacts.mainLink && <li>{props.profile.contacts.mainLink}</li>}\r\n                        </ul>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/myAvatar.d884b73f.jpg\";","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from '../../../../assets/images/avatars/myAvatar.jpg'\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const postsElement =\r\n        <>\r\n            {props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                <div className={style.postMessage}>\r\n                    <img src={myAvatar}\r\n                         alt=\"my_avatar\"/>\r\n                    <div className={style.text}> {p.post} </div>\r\n                </div>\r\n                <div className={style.like}>Like {p.likesCounter}</div>\r\n            </div>)}\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const addPost = useCallback((text: CommonFormType) => {\r\n        props.addPost(text.newText)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import myAvatar from \"../assets/images/avatars/myAvatar.jpg\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPostAction>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\ntype ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: \"https://www.instagram.com/__pashkevich_/\" | null,\r\n    youtube: string | null,\r\n    github: \"https://github.com/andrew9488\" | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: \"Student of IT-Incubator\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: \"https://www.instagram.com/__pashkevich_/\",\r\n            youtube: null,\r\n            github: \"https://github.com/andrew9488\",\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"Looking vacancy of Frontend Developer by React.js\",\r\n        fullName: null as \"Andrew Pashkevich\" | null,\r\n        userId: 13446,\r\n        photos: {\r\n            small: myAvatar,\r\n            large: myAvatar\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPostAction = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPostAction, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPostAction(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileTC, getUserStatusTC, ProfileType, updateStatusTC} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUserProfileTC, getUserStatusTC, updateStatusTC}), withRouter, withAuthRedirect)(ProfileContainer)\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\">Notification</NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to=\"/profile/13446 \">{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to=\"/login\">Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsAuth>\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authTC())\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"login\", {_error: error}))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/Form/CustomField\";\r\nimport {required} from \"../../utils/validator\";\r\nimport style from \"../common/Form/CustomField.module.css\"\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n//style in CustomField.module.css\r\n\r\nconst Form: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <p>To log in get registered\r\n                    <a href={'https://social-network.samuraijs.com/'}\r\n                       target={'_blank'}> here\r\n                    </a>\r\n                </p>\r\n                <p>or use common test account credentials:</p>\r\n                <p>Email: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n            <form onSubmit={props.handleSubmit} className={style.loginForm}>\r\n                <div>\r\n                    <Field name=\"email\" type=\"text\" placeholder=\"login\" component={Input} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"password\" type=\"password\" placeholder=\"password\" component={Input}\r\n                           validate={[required]}/>\r\n                </div>\r\n                <div className={style.error}>\r\n                    {props.error}\r\n                </div>\r\n                <div style={{display: \"flex\"}}>\r\n                    <Field name=\"rememberMe\" type=\"checkbox\" component={Input}/><span>remember me</span>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}\r\nexport const LoginForm = reduxForm<FormDataType>({\r\n    form: \"login\"\r\n})(Form)","import React, {useCallback} from \"react\"\r\nimport {FormDataType, LoginForm} from \"./LoginForm\";\r\nimport style from \"./Login.module.css\"\r\nimport {LoginPropsType} from \"./LoginContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo((props) => {\r\n\r\n    const onSubmit = useCallback((formData: FormDataType) => {\r\n        const {email, password, rememberMe} = formData\r\n        props.logInTC(email, password, rememberMe)\r\n    }, [props])\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.loginPage}>\r\n            <h2>login</h2>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n})","import React, {ComponentType} from \"react\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Login} from \"./Login\";\r\nimport {logInTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logInTC: (email: string | null, password: string | null, rememberMe: boolean) => void\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType)=>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport type LoginPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(MapStateToProps, {logInTC}))(Login)","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React, {ComponentType} from \"react\";\nimport style from \"./App.module.css\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Switch>\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/login\" render={() => <LoginContainer/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/dialogs\" render={() => <Dialogs/>}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3EiO7\",\"paginator\":\"Users_paginator__30n-k\",\"currentPage\":\"Users_currentPage__jJNpC\",\"container\":\"Users_container__1wJvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__u-ni-\",\"userAvatar\":\"User_userAvatar__2YTUN\",\"userData\":\"User_userData__15nCn\",\"name\":\"User_name__32ePm\",\"status\":\"User_status__2z335\",\"location\":\"User_location__1EDt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__vfZZh\",\"dialogItemContainer\":\"Dialog_dialogItemContainer__3oAht\",\"activeLink\":\"Dialog_activeLink__3wrI0\",\"dialogItem\":\"Dialog_dialogItem__3A0vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__NMOAK\",\"messageText\":\"Message_messageText__215RR\",\"sendMessageButton\":\"Message_sendMessageButton__2mVJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};"],"sourceRoot":""}