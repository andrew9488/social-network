{"version":3,"sources":["components/Footer/Footer.module.css","components/Profile/Profile.module.css","hoc/withAuthRedirect.tsx","components/common/Form/CommonForm.tsx","components/common/Form/CustomField.tsx","redux/dialogsPageReducer.ts","components/Navbar/Navbar.module.css","utils/objectHelpers.ts","redux/usersPageReducer.ts","components/Profile/ProfileAvatar/ProfileAvatar.module.css","api/api.ts","components/Profile/ProfileData/ProfileData.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","assets/images/avatars/city-Z.png","components/Profile/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","assets/images/my-photo/my-photo1.png","redux/profilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/appReducer.ts","hoc/withSuspense.tsx","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","redux/authReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","assets/images/avatars/usersAvatar.jpg","components/common/Form/CustomField.module.css","components/Profile/MyPosts/MyPosts.module.css","utils/validator.ts","App.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","max","maxLength","Form","React","memo","onSubmit","handleSubmit","name","type","component","Textarea","validate","required","CommonForm","reduxForm","form","FormControl","input","meta","touched","error","className","style","fieldForm","children","Input","initialState","dialogs","id","img","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","newText","sendMessage","objectHelpers","items","itemId","objectPropsName","newObjectsProps","map","item","users","pageSize","totalCount","currentPage","isFetching","disableButton","followingInProgress","setIsFetchingUsersComponent","usersPageReducer","userId","followed","filter","setFollowingProgress","getUsersTC","dispatch","usersAPI","getUsers","then","data","setCurrentPage","catch","console","warn","followTC","followAPI","follow","resultCode","length","unFollowTC","unFollow","instance","axios","create","withCredentials","baseURL","headers","get","response","post","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","uploadPhoto","formData","FormData","append","authAPI","authMe","logIn","email","password","rememberMe","logOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","navbar","activeClassName","activeLink","Footer","footer","footerText","ProfileAvatar","profileAvatar","src","photo1","alt","photo2","photo3","ProfileStatus","useEffect","setStatus","useState","editableMode","setEditableMode","onBlur","autoFocus","value","onChange","e","currentTarget","onDoubleClick","ProfileData","profileData","Preloader","avatar","avatarImg","profile","photos","large","userAvatar","isOwner","icon","faFileImage","buttonLoad","target","files","fullName","aboutMe","work","lookingForAJob","busy","open","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","postsElement","posts","p","postMessageContainer","postMessage","smallImage","myAvatar","text","like","onClick","increase","faHeart","likesCounter","MyPosts","addPost","useCallback","myPosts","title","container","small","profilePageReducer","newPost","postText","postId","photo","setIsFetchingProfileComponent","setProfileStatus","compose","profilePage","Profile","updateStatusTC","uploadPhotoTC","MyPostsContainer","ProfileContainer","Number","this","match","params","myId","getUserProfileTC","getUserStatusTC","refresh","prevProps","prevState","PureComponent","withRouter","Header","header","logo","headUser","faEnvelope","faBell","login","logOutTC","HeaderContainer","isInitialization","appReducer","withSuspense","Suspense","fallback","Dialogs","lazy","UsersContainer","LoginContainer","App","appInitializeTC","app","content","exact","path","render","authPromise","authTC","Promise","all","sidebarReducer","reducer","combineReducers","dialogsPage","sidebar","usersPage","authReducer","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","setIsAuth","setUserData","logInTC","stopSubmit","_error","preloader"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,6B,oHCQ3DC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAOhC,OAAQC,YAAQN,EAAiB,GAAzBM,EANkB,SAACC,GAA8B,IAC9CL,EAAwBK,EAAxBL,OAAWM,EADkC,YACrBD,EADqB,YAEpD,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAG,gB,+HCTnCC,EAAMC,YAAU,KAEhBC,EAAoDC,IAAMC,MAAK,SAACP,GAClE,OACI,uBAAMQ,SAAUR,EAAMS,aAAtB,UACI,8BACI,cAAC,IAAD,CAAOC,KAAK,UAAUC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAEhF,8BACI,wBAAQQ,KAAK,SAAb,0BAMHK,EAAaC,YAA0B,CAChDC,KAAM,sBADgBD,CAEvBZ,I,gKCtBGc,EAA2Cb,IAAMC,MAAK,YAAmD,EAAjDa,MAAkD,IAAD,IAA1CC,KAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAWtB,EAAe,gCAC3G,OACI,qCACI,qBAAKuB,UAAS,UAAKC,IAAMC,UAAX,YAAwBJ,GAAWC,EAAQE,IAAMF,MAAQ,IAAvE,SACKtB,EAAU0B,WAEf,qBAAKH,UAAWC,IAAMF,MAAtB,SACKD,GAAWC,GAAS,+BAAOA,YAM/BV,EAAwCP,IAAMC,MAAK,SAACP,GAAW,IACjEoB,EAAuCpB,EAAvCoB,MAA0BnB,GAAaD,EAAhCqB,KAAgCrB,EAA1B2B,SADmD,YACzB3B,EADyB,8BAEvE,OAAO,cAACmB,EAAD,2BAAiBnB,GAAjB,aAAwB,oDAAcoB,GAAWnB,UAG/C2B,EAAqCtB,IAAMC,MAAK,SAACP,GAAW,IAC9DoB,EAAuCpB,EAAvCoB,MAA0BnB,GAAaD,EAAhCqB,KAAgCrB,EAA1B2B,SADgD,YACtB3B,EADsB,8BAEpE,OAAO,cAACmB,EAAD,2BAAiBnB,GAAjB,aAAwB,iDAAWoB,GAAWnB,W,sFCZnD4B,EAAe,CACjBC,QAAS,CACL,CACIC,GAAI,EACJrB,KAAM,OACNsB,IAAK,6FAET,CAACD,GAAI,EAAGrB,KAAM,qBAAsBsB,IAAK,4EACzC,CACID,GAAI,EACJrB,KAAM,YACNsB,IAAK,6FAET,CAACD,GAAI,EAAGrB,KAAM,SAAUsB,IAAK,8DAC7B,CAACD,GAAI,EAAGrB,KAAM,eAAgBsB,IAAK,2DAEvCC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,oBACjB,CAACH,GAAI,EAAGG,QAAS,uBACjB,CAACH,GAAI,EAAGG,QAAS,sCACjB,CAACH,GAAI,EAAGG,QAAS,qBAuBVC,IAjBY,WAAsG,IAArGzC,EAAoG,uDAA1EmC,EAAcO,EAA4D,uCAE5H,OAAQA,EAAOzB,MACX,IAAK,4BACD,IAAM0B,EAA0B,CAC5BN,IAAI,IAAIO,MAAOC,UACfL,QAASE,EAAOI,SAEpB,OAAO,2BACA9C,GADP,IAEIuC,SAAS,GAAD,mBAAMvC,EAAMuC,UAAZ,CAAsBI,MAEtC,QACI,OAAO3C,IAMZ,IAAM+C,EAAc,SAACD,GAAD,MAAsB,CAAC7B,KAAM,4BAA6B6B,a,mBCxDrFjD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,6B,kKCD5GkD,EAAgB,SAACC,EAAYC,EAAaC,EAAsBC,GACzE,OAAOH,EAAMI,KAAI,SAACC,GAAD,OAAeA,EAAKH,KAAqBD,EAA1B,2BAAuCI,GAASF,GAAmBE,MCkCjGnB,EAAe,CACjBoB,MAAO,GACPC,SAAU,GACVC,WAAY,EACZC,YAAa,EACbC,YAAY,EACZC,eAAe,EACfC,oBAAqB,IA6CZC,GAPEC,IAjCU,WAAoG,IAAnG/D,EAAkG,uDAAxEmC,EAAcO,EAA0D,uCAExH,OAAQA,EAAOzB,MACX,IAAK,oBACD,OAAO,2BACAjB,GADP,IAEIuD,MAAOP,EAAchD,EAAMuD,MAAOb,EAAOsB,OAAQ,KAAM,CAACC,UAAU,MAE1E,IAAK,sBACD,OAAO,2BACAjE,GADP,IAEIuD,MAAOP,EAAchD,EAAMuD,MAAOb,EAAOsB,OAAQ,KAAM,CAACC,UAAU,MAE1E,IAAK,uBACD,OAAO,2BAAIjE,GAAX,IAAkBuD,MAAOb,EAAOa,QACpC,IAAK,8BACD,OAAO,2BAAIvD,GAAX,IAAkB0D,YAAahB,EAAOgB,cAC1C,IAAK,6BACD,OAAO,2BAAI1D,GAAX,IAAkByD,WAAYf,EAAOe,aACzC,IAAK,6CACD,OAAO,2BAAIzD,GAAX,IAAkB2D,WAAYjB,EAAOiB,aACzC,IAAK,oCACD,OAAO,2BACA3D,GADP,IAEI6D,oBAAqBnB,EAAOkB,cAAP,sBACX5D,EAAM6D,qBADK,CACgBnB,EAAOsB,SACtChE,EAAM6D,oBAAoBK,QAAO,SAAA7B,GAAE,OAAIA,IAAOK,EAAOsB,YAEnE,QACI,OAAOhE,IAWwB,SAAC2D,GAAD,MACtC,CAAC1C,KAAM,6CAA8C0C,gBAC7CQ,EAAuB,SAACP,EAAwBI,GAAzB,MAC/B,CAAC/C,KAAM,oCAAqC2C,gBAAeI,WAEnDI,EAAa,SAACV,EAAqBF,GAC5C,OAAO,SAACa,GACJA,EAASP,GAA4B,IACrCQ,IAASC,SAASb,EAAaF,GAC1BgB,MAAK,SAAAC,GACFJ,EAASP,GAA4B,IACrCO,EAdqC,CAACpD,KAAM,uBAAwBsC,MAclDkB,EAAKxB,QACvBoB,EAbsC,CAACpD,KAAM,6BAA8BwC,WAapDgB,EAAKhB,aAC5BY,EAfc,SAACX,GAAD,MAA0B,CAACzC,KAAM,8BAA+ByC,eAerEgB,CAAehB,OAE3BiB,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QAKhBiD,EAAW,SAACd,GACrB,OAAO,SAACK,GACJA,EAASF,GAAqB,EAAMH,IACpCe,IAAUC,OAAOhB,GACZQ,MAAK,SAAAC,GACsB,IAApBA,EAAKQ,WACLZ,EAhCE,SAACL,GAAD,MAAqB,CAAC/C,KAAM,oBAAqB+C,UAgC1CgB,CAAOhB,IAEZS,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,IAGnC8B,EAASF,GAAqB,EAAOH,OAExCW,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QAKhBsD,EAAa,SAACnB,GACvB,OAAO,SAACK,GACJA,EAASF,GAAqB,EAAMH,IACpCe,IAAUK,SAASpB,GACdQ,MAAK,SAAAC,GACsB,IAApBA,EAAKQ,WACLZ,EAnDI,SAACL,GAAD,MAAqB,CAAC/C,KAAM,sBAAuB+C,UAmD9CoB,CAASpB,IAEdS,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,IAGnC8B,EAASF,GAAqB,EAAOH,OAExCW,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,S,oBC9I7BhC,EAAOC,QAAU,CAAC,cAAgB,uC,gCCDlC,qJA6BMuF,EA7BN,OA6BiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINpB,EAAW,CACpBC,SADoB,SACXb,EAAqBF,GAC1B,OAAO6B,EAASM,IAAT,qBAA6CjC,EAA7C,kBAAkEF,IACpEgB,MAAK,SAAAoB,GACF,OAAOA,EAASnB,UAKnBM,EAAY,CACrBC,OADqB,SACd3C,GACH,OAAOgD,EAASQ,KAAT,iBAA4CxD,GAAM,IACpDmC,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5BW,SAPqB,SAOZ/C,GACL,OAAOgD,EAASS,OAAT,iBAA8CzD,IAChDmC,MAAK,SAAAoB,GACF,OAAOA,EAASnB,UAKnBsB,EAAa,CACtBC,eADsB,SACPhC,GACX,OAAOqB,EAASM,IAAT,kBAAqC3B,IACvCQ,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5BwB,cAPsB,SAORjC,GACV,OAAOqB,EAASM,IAAT,yBAAuC3B,IACzCQ,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5ByB,aAbsB,SAaTC,GACT,OAAOd,EAASe,IAAT,iBAAmD,CAACD,OAAQA,IAC9D3B,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5B4B,YAnBsB,SAmBV5B,GACR,IAAM6B,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAT,QAAyB/B,GAClBY,EAASe,IAAT,gBAA6DE,EAAU,CAC1EZ,QAAS,CACL,eAAgB,yBAGnBlB,MAAK,SAAAoB,GACF,OAAOA,EAASnB,UAKnBgC,EAAU,CACnBC,OADmB,WAEf,OAAOrB,EAASM,IAAT,WACFnB,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5BkC,MAPmB,SAObC,EAAsBC,EAAyBC,GACjD,OAAOzB,EAASQ,KAAT,aAAoE,CAACe,QAAOC,WAAUC,eACxFtC,MAAK,SAAAoB,GACF,OAAOA,EAASnB,SAG5BsC,OAbmB,WAcf,OAAO1B,EAASS,OAAT,cACFtB,MAAK,SAAAoB,GACF,OAAOA,EAASnB,W,mBC7GhC5E,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,UAAY,+BAA+B,WAAa,gCAAgC,KAAO,0BAA0B,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,4B,mDCajWkH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2GCLDO,EAAmB5G,IAAMC,MAAK,WACvC,OACI,qBAAKiB,UAAWC,IAAM0F,OAAtB,SACI,sBAAK3F,UAAWC,IAAMkB,MAAtB,UACI,qBAAKnB,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,WAAWkH,gBAAiB3F,IAAM4F,WAA9C,uBAEJ,qBAAK7F,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,QAAQkH,gBAAiB3F,IAAM4F,WAA3C,oBAEJ,qBAAK7F,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,WAAWkH,gBAAiB3F,IAAM4F,WAA9C,wBAEJ,qBAAK7F,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,SAASkH,gBAAiB3F,IAAM4F,WAA5C,0BAEJ,qBAAK7F,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,SAASkH,gBAAiB3F,IAAM4F,WAA5C,qBAEJ,qBAAK7F,UAAWC,IAAMuB,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAG,YAAYkH,gBAAiB3F,IAAM4F,WAA/C,gC,kBCpBPC,EAAmBhH,IAAMC,MAAK,WACvC,OACI,wBAAQiB,UAAWC,IAAM8F,OAAzB,SACI,sBAAK/F,UAAWC,IAAM+F,WAAtB,UACI,4DAAqC,uBACrC,6F,mDCTD,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCO5BC,EAA0BnH,IAAMC,MAAK,WAC9C,OACI,sBAAKiB,UAAWC,IAAMiG,cAAtB,UACI,8BACI,qBAAKC,IAAKC,EAAQC,IAAI,aAE1B,8BACI,qBAAKF,IAAKG,EAAQD,IAAI,aAE1B,8BACI,qBAAKF,IAAKI,EAAQF,IAAI,mB,yCCVzBG,EAAkD,SAAChI,GAE5DiI,qBAAU,WACNC,EAAUlI,EAAM6F,UACjB,CAAC7F,EAAM6F,SAJ4D,MAM9BsC,oBAAkB,GANY,mBAM/DC,EAN+D,KAMjDC,EANiD,OAO1CF,mBAAiBnI,EAAM6F,QAPmB,mBAO/DA,EAP+D,KAOvDqC,EAPuD,KAsBtE,OACI,8BACME,EAEI,uBAAOE,OAbU,WAC3BD,GAAgB,GAChBrI,EAAM4F,aAAaC,IAYF0C,WAAS,EACTC,MAAO3C,EACP4C,SAXE,SAACC,GACpBR,EAAUQ,EAAEC,cAAcH,UAMhB,uBAAMI,cAhBS,WACzBP,GAAgB,IAeN,qBAAoDrI,EAAM6F,a,gBCb/DgD,EAA8CvI,IAAMC,MAAK,SAACP,GAQ/D,OACI,qBAAKwB,UAAWC,IAAMqH,YAAtB,SACK9I,EAAMqD,WACD,cAAC0F,EAAA,EAAD,IACA,qCACE,sBAAKvH,UAAWC,IAAMuH,OAAtB,UACI,qBAAKxH,UAAWC,IAAMwH,UACjBtB,IAAK3H,EAAMkJ,QAAQC,OAAOC,MAAQpJ,EAAMkJ,QAAQC,OAAOC,MAAQC,IAC/DxB,IAAI,cACR7H,EAAMsJ,QACD,kCACE,cAAC,IAAD,CAAiBC,KAAMC,IAAahI,UAAWC,IAAMgI,aACrD,uBAAO9I,KAAK,OAAO8H,SAlBzB,SAACC,GACfA,EAAEgB,OAAOC,OACT3J,EAAM+F,YAAY2C,EAAEgB,OAAOC,MAAM,UAkBf,MAGV,sBAAKnI,UAAWC,IAAM0C,KAAtB,UACI,oBAAI3C,UAAWC,IAAMf,KAArB,SAA4BV,EAAMkJ,QAAQU,WAC1C,cAAC,EAAD,CAAe/D,OAAQ7F,EAAM6F,OAAQD,aAAc5F,EAAM4F,eACzD,sBAAMpE,UAAWC,IAAMoI,QAAvB,SAAiC7J,EAAMkJ,QAAQW,UAC/C,sBAAKrI,UAAWC,IAAMqI,KAAtB,UACR,+BACI,sBAAMtI,UAAYxB,EAAMkJ,QAAQa,eAA8BtI,IAAMuI,KAAnBvI,IAAMwI,KAAvD,SACMjK,EAAMkJ,QAAQa,eAAmC,QAAlB,oBAE5B/J,EAAMkJ,QAAQa,gBAAkB,+BAAO/J,EAAMkJ,QAAQgB,+BAE1D,2CACKlK,EAAMkJ,QAAQiB,SAASC,UAAY,6BAAKpK,EAAMkJ,QAAQiB,SAASC,WAC/DpK,EAAMkJ,QAAQiB,SAASE,SAAW,6BAAKrK,EAAMkJ,QAAQiB,SAASE,UAC9DrK,EAAMkJ,QAAQiB,SAASG,IAAM,6BAAKtK,EAAMkJ,QAAQiB,SAASG,KACzDtK,EAAMkJ,QAAQiB,SAASI,SAAW,6BAAKvK,EAAMkJ,QAAQiB,SAASI,UAC9DvK,EAAMkJ,QAAQiB,SAASK,WAAa,6BAAKxK,EAAMkJ,QAAQiB,SAASK,YAChExK,EAAMkJ,QAAQiB,SAASM,SAAW,6BAAKzK,EAAMkJ,QAAQiB,SAASM,UAC9DzK,EAAMkJ,QAAQiB,SAASO,QAAU,6BAAK1K,EAAMkJ,QAAQiB,SAASO,SAC7D1K,EAAMkJ,QAAQiB,SAASQ,UAAY,6BAAK3K,EAAMkJ,QAAQiB,SAASQ,yB,kCCjDnFC,EAAOtK,IAAMC,MAAK,SAACP,GAE5B,IAIM6K,EACF,mCAEQ7K,EAAM8K,MAAM/H,KAAI,SAAAgI,GAAC,OAAI,sBAAKvJ,UAAWC,IAAMuJ,qBAAtB,UACjB,sBAAKxJ,UAAWC,IAAMwJ,YAAtB,UACI,qBAAKtD,IAAK3H,EAAMkL,WAAalL,EAAMkL,WAAaC,IAC3CtD,IAAI,cACT,sBAAKrG,UAAWC,IAAM2J,KAAtB,cAA8BL,EAAExF,KAAhC,UAEJ,sBAAK/D,UAAWC,IAAM4J,KACjBC,QAAS,kBAdZvJ,EAc2BgJ,EAAEhJ,QAb3C/B,EAAMuL,SAASxJ,GADF,IAACA,GAaF,UAEI,cAAC,IAAD,CAAiBwH,KAAMiC,MAF3B,IAEuCT,EAAEU,kBARyBV,EAAEhJ,SAcpF,OACI,qBAAKP,UAAWC,IAAM8D,KAAtB,SACKsF,O,SChCAa,EAAsCpL,IAAMC,MAAK,SAACP,GAE3D,IAAM2L,EAAUC,uBAAY,SAACR,GACzBpL,EAAM2L,QAAQP,EAAK5I,WACpB,CAACxC,IAEJ,OACI,sBAAKwB,UAAWC,IAAMoK,QAAtB,UACI,oBAAIrK,UAAWC,IAAMqK,MAArB,sBACA,sBAAKtK,UAAWC,IAAMsK,UAAtB,UACI,cAAC/K,EAAA,EAAD,CAAYR,SAAUmL,IACtB,cAACf,EAAD,CAAME,MAAO9K,EAAM8K,MACbS,SAAUvL,EAAMuL,SAChBL,WAAYlL,EAAMkL,sB,gBCpBzB,MAA0B,sC,QC4CnCrJ,EAAe,CACjBiJ,MAAO,CACH,CAAC/I,GAAI,EAAGwD,KAAM,yBAA0BkG,aAAc,GACtD,CAAC1J,GAAI,EAAGwD,KAAM,qBAAsBkG,aAAc,GAClD,CAAC1J,GAAI,EAAGwD,KAAM,4BAA6BkG,aAAc,GACzD,CAAC1J,GAAI,EAAGwD,KAAM,kCAAmCkG,aAAc,IAEnEvC,QAAS,CACLW,QAAS,eACTM,SAAU,CACNC,SAAU,KACVC,QAAS,mBACTC,GAAI,KACJC,QAAS,KACTC,UAAW,0CACXC,QAAS,KACTC,OAAQ,kCACRC,SAAU,MAEdZ,gBAAgB,EAChBG,0BAA2B,eAC3BN,SAAU,KACVlG,OAAQ,EACRyF,OAAQ,CACJ6C,MAAOb,EACP/B,MAAO+B,IAGf9H,YAAY,EACZwC,OAAQ,IAyDGoG,EApDY,WAAsG,IAArGvM,EAAoG,uDAA1EmC,EAAcO,EAA4D,uCAE5H,OAAQA,EAAOzB,MACX,IAAK,wBACD,IAAMuL,EAAoB,CACtBnK,IAAI,IAAIO,MAAOC,UACfgD,KAAMnD,EAAO+J,SACbV,aAAc,GAElB,OAAO,2BACA/L,GADP,IAEIoL,MAAM,GAAD,mBAAMpL,EAAMoL,OAAZ,CAAmBoB,MAEhC,IAAK,qCACD,OAAO,2BACAxM,GADP,IAEIwJ,QAAS9G,EAAO8G,UAExB,IAAK,iDACD,OAAO,2BACAxJ,GADP,IAEI2D,WAAYjB,EAAOiB,aAE3B,IAAK,kCACD,OAAO,2BACA3D,GADP,IAEImG,OAAQzD,EAAOyD,SAEvB,IAAK,6BACD,OAAO,2BACAnG,GADP,IAEIoL,MAAOpL,EAAMoL,MAAM/H,KAAI,SAAAgI,GAAC,OAAIA,EAAEhJ,KAAOK,EAAOgK,OAAhB,2BAA6BrB,GAA7B,IAAgCU,aAAcV,EAAEU,aAAe,IAAKV,OAGxG,IAAK,iCACD,OAAO,2BACArL,GADP,IAEIwJ,QAAQ,2BACDxJ,EAAMwJ,SADN,IAEHC,OAAO,2BACAzJ,EAAMwJ,QAAQC,QADf,IAEFC,MAAOhH,EAAOiK,MACdL,MAAO5J,EAAOiK,YAK9B,QACI,OAAO3M,IASN4M,GAAgC,SAACjJ,GAAD,MACxC,CAAC1C,KAAM,iDAAkD0C,eACjDkJ,GAAmB,SAAC1G,GAAD,MAC3B,CAAClF,KAAM,kCAAmCkF,W,QCtGhC2G,gBACXzM,aAnBoB,SAACL,GACrB,MAAO,CACHoL,MAAOpL,EAAM+M,YAAY3B,MACzBI,WAAYxL,EAAM+M,YAAYvD,QAAQC,OAAO6C,UAI1B,SAACjI,GACxB,MAAO,CACH4H,QAAS,SAACP,GACNrH,EDwGkC,CAACpD,KAAM,wBAAyBwL,SCxGjDf,KAErBG,SAAU,SAACxJ,GACPgC,ED6GP,CAACpD,KAAM,6BAA8ByL,OC7GRrK,SAKnByK,CAEcd,GC9BhBgB,GAAsCpM,IAAMC,MAAK,SAACP,GAC3D,OACI,sBAAKwB,UAAWC,IAAMyH,QAAtB,UACI,cAACzB,EAAD,IACA,sBAAKjG,UAAWC,IAAMsK,UAAtB,UACI,cAAClD,EAAD,CACIxF,WAAYrD,EAAMqD,WAClB6F,QAASlJ,EAAMkJ,QACfrD,OAAQ7F,EAAM6F,OACdD,aAAc5F,EAAM2M,eACpB5G,YAAa/F,EAAM4M,cACnBtD,UAAStJ,EAAMsJ,SAAUtJ,EAAMsJ,UAEnC,cAACuD,GAAD,a,UCiBVC,G,wKAGE,IAAIpJ,EAASqJ,OAAOC,KAAKhN,MAAMiN,MAAMC,OAAOxJ,QACvCA,IACDA,EAASsJ,KAAKhN,MAAMmN,MAExBH,KAAKhN,MAAMoN,iBAAiB1J,GAC5BsJ,KAAKhN,MAAMqN,gBAAgB3J,K,0CAI3BsJ,KAAKM,Y,yCAGUC,EAAgCC,GAC3CR,KAAKhN,MAAMiN,MAAMC,OAAOxJ,SAAW6J,EAAUN,MAAMC,OAAOxJ,QAC1DsJ,KAAKM,Y,+BAMT,OACI,cAACZ,GAAD,aAASpD,SAAU0D,KAAKhN,MAAMiN,MAAMC,OAAOxJ,QAC9BsJ,KAAKhN,Y,GAzBCM,IAAMmN,eAuCtBjB,gBACXzM,aAVoB,SAACL,GACrB,MAAO,CACHwJ,QAASxJ,EAAM+M,YAAYvD,QAC3B7F,WAAY3D,EAAM+M,YAAYpJ,WAC9BwC,OAAQnG,EAAM+M,YAAY5G,OAC1BsH,KAAMzN,EAAME,KAAKuE,KAAKT,UAMtB,CACI0J,iBHgEoB,SAAC1J,GAC7B,OAAO,SAACK,GACJA,EAASuI,IAA8B,IACvC7G,IAAWC,eAAehC,GACrBQ,MAAK,SAAAC,GACFJ,EAfX,CAACpD,KAAM,qCAAsCuI,QAeN/E,IAC5BJ,EAASuI,IAA8B,OAE1CjI,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QGxEjB8L,gBH6EmB,SAAC3J,GAC5B,OAAO,SAACK,GACJ0B,IAAWE,cAAcjC,GACpBQ,MAAK,SAAAC,GACFJ,EAASwI,GAAiBpI,OAE7BE,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QGnFjBoL,eHwFkB,SAAC9G,GAC3B,OAAO,SAAC9B,GACJ0B,IAAWG,aAAaC,GACnB3B,MAAK,SAAAC,GACsB,IAApBA,EAAKQ,WACLZ,EAASwI,GAAiB1G,IAEtB1B,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,OAItCoC,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QGpGjBqL,cHyGiB,SAACzD,GAC1B,OAAO,SAACpF,GACJ0B,IAAWM,YAAYoD,GAClBjF,MAAK,SAAAC,GACsB,IAApBA,EAAKQ,WACLZ,EAnDf,CAACpD,KAAM,iCAAkC0L,MAmDDlI,EAAKA,KAAKgF,OAAOC,QAEtCjF,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,OAItCoC,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,UGrHjBmM,IAAY7N,KAPT2M,CAO2BM,I,oBCpF3B,OAA0B,iCCS5Ba,GAAoCrN,IAAMC,MAAK,SAACP,GAEzD,OACI,yBAAQwB,UAAWC,KAAMmM,OAAzB,UACI,qBAAKpM,UAAWC,KAAMoM,KAAtB,SAA4B,qBAAKlG,IAAKkG,GAAMhG,IAAI,WAChD,sBAAKrG,UAAWC,KAAMqM,SAAtB,UACI,8BACI,cAAC,IAAD,CAAS5N,GAAG,WAAZ,SAAuB,cAAC,IAAD,CAAiBqJ,KAAMwE,UAElD,8BACI,cAAC,IAAD,CAAS7N,GAAG,IAAZ,SAAgB,cAAC,IAAD,CAAiBqJ,KAAMyE,UAE3C,8BAEQhO,EAAML,OAEF,sBAAK6B,UAAWC,KAAMgF,OAAtB,UACI,cAAC,IAAD,CAASvG,GAAG,kBAAZ,SAA+BF,EAAMmE,KAAK8J,QAC1C,wBAAQ3C,QAAStL,EAAMkO,SAAvB,uBAEF,cAAC,IAAD,CAAShO,GAAG,SAAZ,8B,SCNxBiO,G,uKAGE,OACI,cAACR,GAAD,eAAYX,KAAKhN,Y,GAJCM,IAAMmN,eAgBrB1N,gBAPS,SAACL,GACrB,MAAO,CACHyE,KAAMzE,EAAME,KAAKuE,KACjBxE,OAAQD,EAAME,KAAKD,UAKT,CAACuO,eADJnO,CACeoO,IChCxBtM,GAAe,CACjBuM,kBAAkB,GAkBPC,GAbI,WAA8F,IAA7F3O,EAA4F,uDAAlEmC,GAAcO,EAAoD,uCAE5G,OAAQA,EAAOzB,MACX,IAAK,yBACD,OAAO,2BACAjB,GADP,IAEI0O,iBAAkBhM,EAAOgM,mBAEjC,QACI,OAAO1O,ICpBZ,SAAS4O,GAAgBxO,GAE5B,OAAO,SAACG,GAAD,OACH,cAAC,IAAMsO,SAAP,CAAgBC,SAAU,cAACzF,EAAA,EAAD,IAA1B,SACI,cAACjJ,EAAD,eAAeG,OCO3B,IAAMwO,GAAUnO,IAAMoO,MAAK,kBAAM,iCAC3BC,GAAiBrO,IAAMoO,MAAK,kBAAM,iCAClCE,GAAiBtO,IAAMoO,MAAK,kBAAM,iCAelCG,G,kLAGE7B,KAAKhN,MAAM8O,oB,+BAKX,OAAK9B,KAAKhN,MAAMoO,iBAKZ,sBAAK5M,UAAWC,IAAMsN,IAAtB,UACI,cAAC,GAAD,IACA,cAAC7H,EAAD,IACA,qBAAK1F,UAAWC,IAAMuN,QAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAAM,cAAC,GAAD,OACpD,cAAC,IAAD,CAAOD,KAAK,SAAStO,UAAW0N,GAAaM,MAC7C,cAAC,IAAD,CAAOM,KAAK,SAAStO,UAAW0N,GAAaK,MAC7C,cAAC,IAAD,CAAOO,KAAK,WAAWtO,UAAW0N,GAAaG,WAGvD,cAACnH,EAAD,OAfG,cAACyB,EAAA,EAAD,Q,GATDzI,IAAMmN,eAqCTjB,gBACXzM,aARoB,SAACL,GACrB,MAAO,CACH0O,iBAAkB1O,EAAMqP,IAAIX,oBAO5B,CAACU,gBFtCsB,WAC3B,OAAO,SAAC/K,GACJ,IAAIqL,EAAcrL,EAASsL,gBAC3BC,QAAQC,IAAI,CAACH,IACRlL,MAAK,WACFH,EAPX,CAACpD,KAAM,yBAA0ByN,kBAOK,OAE9B/J,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,UE8BDmM,IAFblB,CAEyBqC,I,UCtElChN,GAAe,GASN2N,GALQ,WAA0E,IAAzE9P,EAAwE,uDAA/CmC,GAE7C,OAAOnC,G,8BCIL+P,GAAUC,aAAgB,CAC5BjD,YAAaR,EACb0D,YAAaxN,KACbyN,QAASJ,GACTK,UAAWpM,KACX7D,KAAMkQ,KACNf,IAAKV,GACLnN,KAAM6O,OAKGC,GAAQC,aAAYR,GAASS,aAAgBC,OAG1DC,OAAOJ,MAAQA,GCjBfK,IAASlB,OACL,cAAC,IAAMmB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZO,SAASC,eAAe,SAM5B9J,K,iKCNM7E,EAAe,CACjBsC,KAAM,CACFT,OAAQ,KACRuK,MAAO,KACP3H,MAAO,MAEX3G,QAAQ,GAuBGmQ,IAlBK,WAA+F,IAA9FpQ,EAA6F,uDAAnEmC,EAAcO,EAAqD,uCAE9G,OAAQA,EAAOzB,MACX,IAAK,qBACD,OAAO,2BACAjB,GADP,IAEIyE,KAAM/B,EAAO+B,OAErB,IAAK,mBACD,OAAO,2BACAzE,GADP,IAEIC,OAAQyC,EAAOzC,SAEvB,QACI,OAAOD,IAMZ,IAEM+Q,EAAY,SAAC9Q,GAAD,MAAsB,CAACgB,KAAM,mBAAoBhB,WAE7D0P,EAAS,WAClB,OAAO,SAACtL,GACJ,OAAOoC,IAAQC,SACVlC,MAAK,SAAAC,GACF,GAAwB,IAApBA,EAAKQ,WAAkB,CAAC,IAAD,EACER,EAAKA,KAAzBpC,EADkB,EAClBA,GAAIkM,EADc,EACdA,MAAO3H,EADO,EACPA,MAChBvC,EAVO,SAACL,EAAgBuK,EAAe3H,GAAhC,MACtB,CAAC3F,KAAM,qBAAsBwD,KAAM,CAACT,SAAQuK,QAAO3H,UAS3BoK,CAAY3O,EAAIkM,EAAO3H,IAChCvC,EAAS0M,GAAU,SAEftM,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,OAItCoC,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QAKhBoP,EAAU,SAACrK,EAAsBC,EAAyBC,GACnE,OAAO,SAACzC,GACJoC,IAAQE,MAAMC,EAAOC,EAAUC,GAC1BtC,MAAK,SAAAC,GACF,GAAwB,IAApBA,EAAKQ,WACLZ,EAASsL,UACN,GAAwB,IAApBlL,EAAKQ,WAAkB,CAC9B,IAAMpD,EAAQ4C,EAAKlC,SAAS,GAC5B8B,EAAS6M,YAAW,QAAS,CAACC,OAAQtP,UAElC4C,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,OAItCoC,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,QAKhB2M,EAAW,WACpB,OAAO,SAACnK,GACJoC,IAAQM,SACHvC,MAAK,SAAAC,GACsB,IAApBA,EAAKQ,YACLZ,EAAS4M,EAAQ,KAAM,MAAM,IAC7B5M,EAAS0M,GAAU,KAEftM,EAAKlC,SAAS2C,OAAS,GACvBN,QAAQC,KAAKJ,EAAKlC,SAAS,OAItCoC,OAAM,SAAA9C,GACH+C,QAAQC,KAAKhD,S,2CC1Gd,MAA0B,6C,OCGnCwH,E,OAAsBzI,EAAMC,MAAK,WACnC,OACI,mCACI,qBAAKoH,IAAKmJ,EAAWjJ,IAAI,mBAKtBkB,O,mBCVfxJ,EAAOC,QAAU,CAAC,KAAO,mBAAmB,qBAAuB,mCAAmC,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,qB,mBCA/KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,yB,gCCD5G,QAA0B,yC,mBCCzCD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,UAAY,iC,mBCA5GD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,MAAQ,yB,gCCDpG,oEAAO,IAAMuB,EAAW,SAACyH,GACrB,OAAIA,OACA,EAEO,qBAIFpI,EAAY,SAACD,GACtB,OAAO,SAACqI,GACJ,GAAIA,GAASA,EAAM5D,OAASzE,EACxB,MAAM,qBAAN,OAA4BA,EAA5B,e,mBCVZZ,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,wB","file":"static/js/main.63375ada.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormType = {\r\n    newText: string\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormType>> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type PhotoType = {\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    uploadPhoto(data: Blob) {\r\n        const formData = new FormData()\r\n        formData.append(`image`, data)\r\n        return instance.put<CommonResponseType<PhotoType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"buttonLoad\":\"ProfileData_buttonLoad__1p5LM\",\"data\":\"ProfileData_data__2dnsH\",\"name\":\"ProfileData_name__Cie_-\",\"aboutMe\":\"ProfileData_aboutMe__29MIs\",\"work\":\"ProfileData_work__3nfZO\",\"open\":\"ProfileData_open__1BQzQ\",\"busy\":\"ProfileData_busy__3wO3n\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React from \"react\";\r\nimport style from \"./ProfileAvatar.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileAvatar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    uploadPhoto: (photos: Blob) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n\r\n        const onUploadPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n            if (e.target.files) {\r\n                props.uploadPhoto(e.target.files[0])\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={style.profileData}>\r\n                {props.isFetching\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <div className={style.avatar}>\r\n                            <img className={style.avatarImg}\r\n                                 src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                                 alt=\"my_avatar\"/>\r\n                            {props.isOwner\r\n                                ? <label>\r\n                                    <FontAwesomeIcon icon={faFileImage} className={style.buttonLoad}/>\r\n                                    <input type=\"file\" onChange={onUploadPhoto}/>\r\n                                </label>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={style.data}>\r\n                            <h3 className={style.name}>{props.profile.fullName}</h3>\r\n                            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                            <span className={style.aboutMe}>{props.profile.aboutMe}</span>\r\n                            <div className={style.work}>\r\n                    <span>\r\n                        <span className={!props.profile.lookingForAJob ? style.open : style.busy}>\r\n                            {!props.profile.lookingForAJob ? \" Open to work\" : \" Busy\"}</span>\r\n                        </span>\r\n                                {props.profile.lookingForAJob && <span>{props.profile.lookingForAJobDescription}</span>}\r\n                            </div>\r\n                            <ul>Contacts:\r\n                                {props.profile.contacts.facebook && <li>{props.profile.contacts.facebook}</li>}\r\n                                {props.profile.contacts.website && <li>{props.profile.contacts.website}</li>}\r\n                                {props.profile.contacts.vk && <li>{props.profile.contacts.vk}</li>}\r\n                                {props.profile.contacts.twitter && <li>{props.profile.contacts.twitter}</li>}\r\n                                {props.profile.contacts.instagram && <li>{props.profile.contacts.instagram}</li>}\r\n                                {props.profile.contacts.youtube && <li>{props.profile.contacts.youtube}</li>}\r\n                                {props.profile.contacts.github && <li>{props.profile.contacts.github}</li>}\r\n                                {props.profile.contacts.mainLink && <li>{props.profile.contacts.mainLink}</li>}\r\n                            </ul>\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from \"../../../../assets/images/avatars/usersAvatar.jpg\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n    increase: (id: number) => void\r\n    smallImage: string | null\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const increase = (id: number) => {\r\n        props.increase(id)\r\n    }\r\n\r\n    const postsElement =\r\n        <>\r\n            {\r\n                props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                    <div className={style.postMessage}>\r\n                        <img src={props.smallImage ? props.smallImage : myAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                        <div className={style.text}> {p.post} </div>\r\n                    </div>\r\n                    <div className={style.like}\r\n                         onClick={() => increase(p.id)}>\r\n                        <FontAwesomeIcon icon={faHeart}/> {p.likesCounter}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const addPost = useCallback((text: CommonFormType) => {\r\n        props.addPost(text.newText)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}\r\n                      increase={props.increase}\r\n                      smallImage={props.smallImage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/my-photo1.ad902751.png\";","import myAvatar from \"../assets/images/my-photo/my-photo1.png\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof increaseLike>\r\n    | ReturnType<typeof setProfileImage>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\ntype ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: \"Hero class-C\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: \"saitama_hero.com\",\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: \"https://www.saitama.com/__hero_saitama/\",\r\n            youtube: null,\r\n            github: \"https://github.com/saitama_hero\",\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"Hero class-S\",\r\n        fullName: null as \"Saitama\" | null,\r\n        userId: 1,\r\n        photos: {\r\n            small: myAvatar,\r\n            large: myAvatar\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"PROFILE-PAGE/INCREASE-LIKE\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => p.id === action.postId ? {...p, likesCounter: p.likesCounter + 1} : p)\r\n            }\r\n        }\r\n        case \"PROFILE-PAGE/SET-PROFILE-IMAGE\": {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: {\r\n                        ...state.profile.photos,\r\n                        large: action.photo,\r\n                        small: action.photo\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPost = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\nexport const increaseLike = (postId: number) =>\r\n    ({type: \"PROFILE-PAGE/INCREASE-LIKE\", postId} as const)\r\nexport const setProfileImage = (photo: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-IMAGE\", photo} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const uploadPhotoTC = (photos: Blob): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.uploadPhoto(photos)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileImage(data.data.photos.large))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, increaseLike, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    smallImage: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n    increase: (id: number) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        smallImage: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPost(text))\r\n        },\r\n        increase: (id: number) => {\r\n            dispatch(increaseLike(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                    uploadPhoto={props.uploadPhotoTC}\r\n                    isOwner={props.isOwner ? props.isOwner : false}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfileTC,\r\n    getUserStatusTC,\r\n    uploadPhotoTC,\r\n    ProfileType,\r\n    updateStatusTC\r\n} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n    isOwner?: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    uploadPhotoTC: (photos: Blob) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    refresh() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile isOwner={!this.props.match.params.userId}\r\n                     {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {\r\n            getUserProfileTC,\r\n            getUserStatusTC,\r\n            updateStatusTC,\r\n            uploadPhotoTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\"><FontAwesomeIcon icon={faEnvelope}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\"><FontAwesomeIcon icon={faBell}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to=\"/profile/13446 \">{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to=\"/login\">Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (restProps: T) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...restProps}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n","import React, {ComponentType} from \"react\";\nimport style from \"./App.module.css\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs/Dialogs\"))\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\nconst LoginContainer = React.lazy(() => import(\"./components/Login/LoginContainer\"))\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Switch>\n                        <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/login\" component={withSuspense(LoginContainer)}/>\n                        <Route path=\"/users\" component={withSuspense(UsersContainer)}/>\n                        <Route path=\"/dialogs\" component={withSuspense(Dialogs)}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsAuth>\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authTC())\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"login\", {_error: error}))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};"],"sourceRoot":""}