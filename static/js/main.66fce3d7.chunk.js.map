{"version":3,"sources":["components/Profile/Profile.module.css","App.module.css","components/Footer/Footer.module.css","hoc/withAuthRedirect.tsx","components/common/Form/CommonForm.tsx","assets/images/avatars/city-Z.png","hoc/withSuspense.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","components/Profile/ProfileImages/ProfileImages.tsx","components/Profile/ProfileData/Contacts.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileInfo.tsx","components/Profile/ProfileData/ProfileForm.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Routes/Routes.tsx","redux/dialogsPageReducer.ts","utils/objectHelpers.ts","redux/usersPageReducer.ts","components/Profile/ProfileImages/ProfileImages.module.css","components/Profile/ProfileData/Contacts.module.css","api/api.ts","components/Navbar/Navbar.module.css","redux/profilePageReducer.ts","components/Profile/ProfileData/ProfileInfo.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","assets/images/logo/logo.png","components/Header/AppHeader.tsx","components/Header/HeaderContainer.tsx","redux/appReducer.ts","components/Footer/Footer.tsx","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","components/common/Form/CustomField.tsx","redux/authReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","utils/validator.ts","components/Profile/ProfileData/ProfileData.module.css","components/Profile/ProfileData/ProfileForm.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","assets/images/avatars/usersAvatar.jpg","components/common/Form/CustomField.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","PATH","LOGIN","max","maxLength","Form","React","memo","onSubmit","handleSubmit","name","type","component","Textarea","validate","required","disabled","disable","CommonForm","reduxForm","form","withSuspense","Suspense","fallback","Preloader","ProfileImages","className","style","profileAvatar","src","photo1","alt","photo2","photo3","Contacts","contactsValue","contactsKey","li","ProfileStatus","useEffect","setStatus","status","useState","editableMode","setEditableMode","onBlur","updateStatus","autoFocus","value","onChange","e","currentTarget","onDoubleClick","ProfileInfo","fullName","isOwner","onClick","onActivateEditMode","icon","faPen","aboutMe","descriptionInfo","work","lookingForAJob","open","busy","lookingForAJobDescription","ProfileForm","formContainer","formButton","faCheck","deactivateEditMode","cancel","Field","placeholder","Input","checkboxField","Object","keys","profile","contacts","map","key","contactFields","ProfileData","editMode","setEditMode","useCallback","formData","changeProfileInfo","profileData","isFetching","avatar","avatarImg","photos","large","userAvatar","faFileImage","buttonLoad","target","files","uploadPhoto","data","initialValues","index","Post","postsElement","posts","p","postMessageContainer","postMessage","smallImage","myAvatar","text","post","like","id","increase","faHeart","likesCounter","MyPosts","dispatch","useDispatch","addPost","newText","reset","myPosts","title","container","compose","profilePage","small","increaseLike","Profile","updateStatusTC","uploadPhotoTC","changeProfileInfoTC","MyPostsContainer","ProfileContainer","userId","Number","this","match","params","myId","getUserProfileTC","getUserStatusTC","refresh","prevProps","prevState","PureComponent","withRouter","Dialogs","lazy","UsersContainer","LoginContainer","PROFILE","USERS","DIALOGS","NEWS","MUSIC","SETTINGS","CHAT","Routes","exact","path","render","initialState","dialogs","img","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","sendMessage","objectHelpers","items","itemId","objectPropsName","newObjectsProps","item","users","pageSize","totalCount","currentPage","disableButton","followingInProgress","filter","term","friend","setIsFetchingUsersComponent","usersPageReducer","followed","setFollowingProgress","getUsersTC","usersAPI","getUsers","then","setSearchFilter","setCurrentPage","catch","error","console","warn","followTC","followAPI","follow","resultCode","length","unFollowTC","unFollow","instance","axios","create","withCredentials","baseURL","headers","get","response","delete","profileAPI","getUserProfile","getUserStatus","put","FormData","append","updateProfileInfo","authAPI","authMe","logIn","email","password","rememberMe","captcha","logOut","captchaAPI","getCaptcha","facebook","website","vk","twitter","instagram","youtube","github","mainLink","profilePageReducer","newPost","postText","postId","photo","setIsFetchingProfileComponent","setProfileStatus","getState","stopSubmit","_error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","navbar","activeClassName","activeLink","AppHeader","header","logo","headUser","faEnvelope","faBell","login","logOutTC","HeaderContainer","isInitialization","appReducer","Footer","footer","footerText","App","appInitializeTC","app","content","authPromise","authTC","Promise","all","sidebarReducer","reducer","combineReducers","dialogsPage","sidebar","usersPage","authReducer","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","fieldForm","children","setIsAuth","setUserData","logInTC","getCaptchaTC","url","preloader"],"mappings":"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","file":"static/js/main.66fce3d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {PATH} from \"../components/Routes/Routes\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormPropsType = {\r\n    newText: string\r\n}\r\n\r\ntype FormType = {\r\n    disable?: boolean\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormPropsType, FormType> & FormType> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button disabled={props.disable} type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormPropsType, FormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (restProps: T) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...restProps}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","import React from \"react\";\r\nimport style from \"./ProfileImages.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileImages: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Contacts.module.css\"\r\n\r\ntype ContactsPropsType = {\r\n    contactsKey: string | null\r\n    contactsValue: string | null\r\n}\r\nexport const Contacts: React.FC<ContactsPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.contactsValue && props.contactsValue ?\r\n                    <>\r\n                        <span>{props.contactsKey}</span>\r\n                        <li className={style.li}>{props.contactsValue}</li>\r\n                    </> : null}\r\n            </ul>\r\n        </>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPen} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    isOwner: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    onActivateEditMode: () => void\r\n}\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <h3 className={style.name}>{props.fullName} {props.isOwner ?\r\n                <button onClick={props.onActivateEditMode}><FontAwesomeIcon icon={faPen}/></button> : \"\"} </h3>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <span className={style.aboutMe}><span\r\n                className={style.descriptionInfo}>About Me:</span> {props.aboutMe}</span>\r\n            <div className={style.work}>\r\n                        <span className={props.lookingForAJob ? style.open : style.busy}>\r\n                            <span\r\n                                className={style.descriptionInfo}>Looking a job:</span> {props.lookingForAJob ? \" Open to work\" : \" Busy\"}\r\n                        </span>\r\n                {props.lookingForAJob && props.lookingForAJobDescription &&\r\n                <span><span className={style.descriptionInfo}>Vacancy:</span> {props.lookingForAJobDescription}</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./ProfileForm.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Input, Textarea} from \"../../common/Form/CustomField\";\r\nimport {required} from \"../../../utils/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\n\r\ntype FormType = {\r\n    profile: ProfileType\r\n    deactivateEditMode: () => void\r\n}\r\n\r\nexport type ProfileFormPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n}\r\n\r\nconst Form: React.FC<InjectedFormProps<ProfileFormPropsType, FormType> & FormType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.formContainer}>\r\n            <div className={style.formButton}>\r\n                <button type=\"submit\"><FontAwesomeIcon icon={faCheck}/></button>\r\n                <button onClick={props.deactivateEditMode} className={style.cancel}>x</button>\r\n            </div>\r\n            <div>\r\n                <span>Full Name: </span><Field name=\"fullName\" type=\"text\" placeholder=\"Full Name\" component={Input}\r\n                                               validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <span>About Me: </span><Field name=\"aboutMe\" type=\"text\" component={Textarea} validate={[required]}/>\r\n            </div>\r\n            <div className={style.checkboxField}>\r\n                <span>Looking for a job: </span>\r\n                <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input}/>\r\n            </div>\r\n            <div>\r\n                <span>A Job Description: </span>\r\n                <Field name=\"lookingForAJobDescription\" type=\"text\" component={Textarea} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                <span>Contacts:</span>\r\n                {(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key) => {\r\n                    return <div key={key} className={style.contactFields}>\r\n                        <span>{key}: </span><Field name={\"contacts.\" + key} type=\"text\" component={Input} validate={[]}/>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport const ProfileForm = (reduxForm<ProfileFormPropsType, FormType>({form: \"profileInfo\"})(Form))","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Contacts} from \"./Contacts\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileForm, ProfileFormPropsType} from \"./ProfileForm\";\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    uploadPhoto: (photos: Blob) => void\r\n    isOwner: boolean\r\n    changeProfileInfo: (profile: ProfileType) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n\r\n\r\n        const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n        const onUploadPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n            if (e.target.files) {\r\n                props.uploadPhoto(e.target.files[0])\r\n            }\r\n        }\r\n\r\n        const onActivateEditMode = () => {\r\n            setEditMode(true)\r\n        }\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false)\r\n        }\r\n\r\n        const onSubmit = useCallback((formData: ProfileFormPropsType) => {\r\n            // @ts-ignore\r\n            props.changeProfileInfo(formData)\r\n            setEditMode(false)\r\n        }, [props])\r\n\r\n        return (\r\n            <div className={style.profileData}>\r\n                {props.isFetching\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <div className={style.avatar}>\r\n                            <img className={style.avatarImg}\r\n                                 src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                                 alt=\"my_avatar\"/>\r\n                            {props.isOwner\r\n                                ? <label>\r\n                                    <FontAwesomeIcon icon={faFileImage} className={style.buttonLoad}/>\r\n                                    <input type=\"file\" onChange={onUploadPhoto}/>\r\n                                </label>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={style.data}>\r\n                            {editMode\r\n                                ? <ProfileForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                               profile={props.profile}\r\n                                               deactivateEditMode={deactivateEditMode}/>\r\n                                : < ProfileInfo fullName={props.profile.fullName}\r\n                                                aboutMe={props.profile.aboutMe}\r\n                                                lookingForAJob={props.profile.lookingForAJob}\r\n                                                lookingForAJobDescription={props.profile.lookingForAJobDescription}\r\n                                                isOwner={props.isOwner}\r\n                                                status={props.status}\r\n                                                updateStatus={props.updateStatus}\r\n                                                onActivateEditMode={onActivateEditMode}\r\n                                />\r\n                            }\r\n                            {\r\n                                editMode ? null\r\n                                    : <div>\r\n                                        <b>Contacts: </b>{(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key, index) => {\r\n                                        return <Contacts key={index} contactsKey={key}\r\n                                                         contactsValue={props.profile.contacts[key]}/>\r\n                                    })}\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from \"../../../../assets/images/avatars/usersAvatar.jpg\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n    increase: (id: number) => void\r\n    smallImage: string | null\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const increase = (id: number) => {\r\n        props.increase(id)\r\n    }\r\n\r\n    const postsElement =\r\n        <>\r\n            {\r\n                props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                    <div className={style.postMessage}>\r\n                        <img src={props.smallImage ? props.smallImage : myAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                        <div className={style.text}> {p.post} </div>\r\n                    </div>\r\n                    <div className={style.like}\r\n                         onClick={() => increase(p.id)}>\r\n                        <FontAwesomeIcon icon={faHeart}/> {p.likesCounter}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormPropsType} from \"../../common/Form/CommonForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addPost = useCallback((text: CommonFormPropsType) => {\r\n        props.addPost(text.newText)\r\n        dispatch(reset(\"formForSendNewText\"))\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}\r\n                      increase={props.increase}\r\n                      smallImage={props.smallImage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, increaseLike, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    smallImage: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n    increase: (id: number) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        smallImage: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPost(text))\r\n        },\r\n        increase: (id: number) => {\r\n            dispatch(increaseLike(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileImages} from \"./ProfileImages/ProfileImages\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n\r\n\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileImages/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                    uploadPhoto={props.uploadPhotoTC}\r\n                    changeProfileInfo={props.changeProfileInfoTC}\r\n                    isOwner={props.isOwner ? props.isOwner : false}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeProfileInfoTC,\r\n    getUserProfileTC,\r\n    getUserStatusTC,\r\n    ProfileType,\r\n    updateStatusTC,\r\n    uploadPhotoTC\r\n} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n    isOwner?: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    uploadPhotoTC: (photos: Blob) => void\r\n    changeProfileInfoTC: (profile: ProfileType) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    refresh() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile isOwner={!this.props.match.params.userId}{...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {\r\n            getUserProfileTC,\r\n            getUserStatusTC,\r\n            updateStatusTC,\r\n            uploadPhotoTC,\r\n            changeProfileInfoTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {withSuspense} from \"../../hoc/withSuspense\";\r\nimport ProfileContainer from \"../Profile/ProfileContainer\";\r\n\r\nconst Dialogs = React.lazy(() => import(\"../Dialogs/Dialogs\"))\r\nconst UsersContainer = React.lazy(() => import(\"../Users/UsersContainer\"))\r\nconst LoginContainer = React.lazy(() => import(\"../Login/LoginContainer\"))\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    DIALOGS: \"/dialogs\",\r\n    NEWS: \"/news\",\r\n    MUSIC: \"/music\",\r\n    SETTINGS: \"/settings\",\r\n    CHAT: \"/chat\"\r\n}\r\n\r\nexport const Routes: React.FC = React.memo(() => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={PATH.LOGIN} component={withSuspense(LoginContainer)}/>\r\n            <Route path={`${PATH.PROFILE}/:userId?`} render={() => <ProfileContainer/>}/>\r\n            <Route path={PATH.USERS} component={withSuspense(UsersContainer)}/>\r\n            <Route path={PATH.DIALOGS} component={withSuspense(Dialogs)}/>\r\n        </Switch>\r\n    )\r\n})","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n    | ReturnType<typeof setSearchFilter>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>,\r\n    filter: {\r\n        term: null as string | null,\r\n        friend: null as boolean | null\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        case \"USERS-PAGE/SET-SEARCH-FILTER\":\r\n            return {\r\n                ...state,\r\n                filter: {\r\n                    ...state.filter,\r\n                    term: action.term,\r\n                    friend: action.friend\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\nexport const setSearchFilter = (term: string | null, friend: boolean | null) =>\r\n    ({type: \"USERS-PAGE/SET-SEARCH-FILTER\", term, friend} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number, term: string | null , friend: null | boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize, term, friend)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount))\r\n                dispatch(setSearchFilter(term, friend))\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileImages_profileAvatar__2thf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__34pJT\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type PhotoType = {\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string | null = \"\", friend: boolean | null) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    uploadPhoto(data: Blob) {\r\n        const formData = new FormData()\r\n        formData.append(`image`, data)\r\n        return instance.put<CommonResponseType<PhotoType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateProfileInfo(profile: ProfileType) {\r\n        return instance.put<CommonResponseType>(`profile`, profile)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const captchaAPI = {\r\n    getCaptcha() {\r\n        return instance.get<CommonResponseType<{ url: string }>>(`security/get-captcha-url`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof increaseLike>\r\n    | ReturnType<typeof setProfileImage>\r\n\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: null,\r\n        fullName: null as string | null,\r\n        userId: 1,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"PROFILE-PAGE/INCREASE-LIKE\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => p.id === action.postId ? {...p, likesCounter: p.likesCounter + 1} : p)\r\n            }\r\n        }\r\n        case \"PROFILE-PAGE/SET-PROFILE-IMAGE\": {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: {\r\n                        ...state.profile.photos,\r\n                        large: action.photo,\r\n                        small: action.photo\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPost = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\nexport const increaseLike = (postId: number) =>\r\n    ({type: \"PROFILE-PAGE/INCREASE-LIKE\", postId} as const)\r\nexport const setProfileImage = (photo: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-IMAGE\", photo} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const uploadPhotoTC = (photos: Blob): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.uploadPhoto(photos)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileImage(data.data.photos.large))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const changeProfileInfoTC = (profile: ProfileType): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType | StopSubmitActionsType>, getState: () => AppStateType) => {\r\n        const userId = getState().auth.data.userId\r\n        profileAPI.updateProfileInfo(profile)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(getUserProfileTC(userId))\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"profileInfo\", {_error: error}))\r\n                } else if (data.messages.length > 0) {\r\n                    console.warn(data.messages[0])\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProfileInfo_name__2lyxE\",\"aboutMe\":\"ProfileInfo_aboutMe__2eb73\",\"work\":\"ProfileInfo_work__1n8of\",\"open\":\"ProfileInfo_open__20fJ1\",\"busy\":\"ProfileInfo_busy__268D-\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__1nUvi\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to={`${PATH.PROFILE}/:userId?`} activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.USERS} activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\n\r\nexport const AppHeader: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to={PATH.DIALOGS}><FontAwesomeIcon icon={faEnvelope}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\"><FontAwesomeIcon icon={faBell}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to={`${PATH.PROFILE}/:userId?`}>{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {AppHeader} from \"./AppHeader\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <AppHeader {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {Routes} from \"./components/Routes/Routes\";\nimport style from \"./App.module.css\"\nimport {Footer} from \"./components/Footer/Footer\";\n\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Routes/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI, captchaAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType =\r\n    ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setIsAuth>\r\n    | ReturnType<typeof setCaptcha>\r\n\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false,\r\n    captcha: null as string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        case \"AUTH/SET-CAPTCHA\":\r\n            return {\r\n                ...state,\r\n                captcha: action.captcha\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\nexport const setCaptcha = (captcha: null | string) => ({type: \"AUTH/SET-CAPTCHA\", captcha} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe, captcha)\r\n            .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(authTC())\r\n                    } else if (data.resultCode === 10) {\r\n                        dispatch(getCaptchaTC())\r\n                    } else if (data.resultCode === 1) {\r\n                        const error = data.messages[0]\r\n                        dispatch(stopSubmit(\"login\", {_error: error}))\r\n                    } else if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false, null))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        captchaAPI.getCaptcha()\r\n            .then(response => {\r\n                dispatch(setCaptcha(response.data.url))\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"buttonLoad\":\"ProfileData_buttonLoad__1p5LM\",\"data\":\"ProfileData_data__2dnsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ProfileForm_formContainer__MMIHX\",\"formButton\":\"ProfileForm_formButton__3AVOl\",\"cancel\":\"ProfileForm_cancel__1BYbG\",\"checkboxField\":\"ProfileForm_checkboxField__1SvOV\",\"contactFields\":\"ProfileForm_contactFields__3zXi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};"],"sourceRoot":""}