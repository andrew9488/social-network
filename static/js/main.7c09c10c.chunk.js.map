{"version":3,"sources":["components/Profile/Profile.module.css","hoc/withAuthRedirect.tsx","assets/images/avatars/usersAvatar.jpg","components/common/Form/CommonForm.tsx","components/common/Form/CustomField.tsx","redux/dialogsPageReducer.ts","components/Navbar/Navbar.module.css","utils/objectHelpers.ts","redux/usersPageReducer.ts","components/Profile/ProfileAvatar/ProfileAvatar.module.css","api/api.ts","components/Profile/ProfileData/ProfileData.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","assets/images/avatars/city-Z.png","components/Profile/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileData.tsx","assets/images/avatars/myAvatar.jpg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/appReducer.ts","hoc/withSuspense.tsx","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","redux/authReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/common/Form/CustomField.module.css","components/Profile/MyPosts/MyPosts.module.css","utils/validator.ts","App.module.css","components/Footer/Footer.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","max","maxLength","Form","React","memo","onSubmit","handleSubmit","name","type","component","Textarea","validate","required","CommonForm","reduxForm","form","FormControl","input","meta","touched","error","className","style","fieldForm","children","Input","initialState","dialogs","id","img","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","newText","sendMessage","objectHelpers","items","itemId","objectPropsName","newObjectsProps","map","item","users","pageSize","totalCount","currentPage","isFetching","disableButton","followingInProgress","setIsFetchingUsersComponent","usersPageReducer","userId","followed","filter","setFollowingProgress","getUsersTC","dispatch","usersAPI","getUsers","then","data","setCurrentPage","catch","console","warn","followTC","followAPI","follow","resultCode","length","unFollowTC","unFollow","instance","axios","create","withCredentials","baseURL","headers","get","response","post","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","authAPI","authMe","logIn","email","password","rememberMe","logOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","navbar","activeClassName","activeLink","Footer","footer","footerText","ProfileAvatar","profileAvatar","src","photo1","alt","photo2","photo3","ProfileStatus","useEffect","setStatus","useState","editableMode","setEditableMode","onBlur","autoFocus","value","onChange","e","currentTarget","onDoubleClick","ProfileData","profileData","Preloader","avatar","avatarImg","profile","photos","large","userAvatar","fullName","aboutMe","work","lookingForAJob","busy","open","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","postsElement","posts","p","postMessageContainer","postMessage","myAvatar","text","like","onClick","increase","icon","faHeart","likesCounter","MyPosts","addPost","useCallback","myPosts","title","container","small","profilePageReducer","newPost","postText","postId","setIsFetchingProfileComponent","setProfileStatus","compose","profilePage","Profile","updateStatusTC","MyPostsContainer","ProfileContainer","Number","this","match","params","myId","getUserProfileTC","getUserStatusTC","PureComponent","withRouter","Header","header","logo","headUser","faEnvelope","faBell","login","logOutTC","HeaderContainer","isInitialization","appReducer","withSuspense","Suspense","fallback","Dialogs","lazy","UsersContainer","LoginContainer","App","appInitializeTC","app","content","path","render","authPromise","authTC","Promise","all","sidebarReducer","reducer","combineReducers","dialogsPage","sidebar","usersPage","authReducer","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","setIsAuth","setUserData","logInTC","stopSubmit","_error","preloader"],"mappings":"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","file":"static/js/main.7c09c10c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormType = {\r\n    newText: string\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormType>> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\nimport {ProfileType} from \"../redux/profilePageReducer\";\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"data\":\"ProfileData_data__2dnsH\",\"name\":\"ProfileData_name__Cie_-\",\"aboutMe\":\"ProfileData_aboutMe__29MIs\",\"work\":\"ProfileData_work__3nfZO\",\"open\":\"ProfileData_open__1BQzQ\",\"busy\":\"ProfileData_busy__3wO3n\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import React from \"react\";\r\nimport style from \"./ProfileAvatar.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileAvatar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profileData}>\r\n            {props.isFetching\r\n                ? <Preloader/>\r\n                : <>\r\n                    <div className={style.avatar}>\r\n                        <img className={style.avatarImg}\r\n                             src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                    </div>\r\n                    <div className={style.data}>\r\n                        <h3 className={style.name}>{props.profile.fullName}</h3>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        <span className={style.aboutMe}>{props.profile.aboutMe}</span>\r\n                        <div className={style.work}>\r\n                    <span>\r\n                        <span className={!props.profile.lookingForAJob ? style.open : style.busy}>\r\n                            {!props.profile.lookingForAJob ? \" Open to work\" : \" Busy\"}</span>\r\n                        </span>\r\n                            {props.profile.lookingForAJob && <span>{props.profile.lookingForAJobDescription}</span>}\r\n                        </div>\r\n                        <ul>Contacts:\r\n                            {props.profile.contacts.facebook && <li>{props.profile.contacts.facebook}</li>}\r\n                            {props.profile.contacts.website && <li>{props.profile.contacts.website}</li>}\r\n                            {props.profile.contacts.vk && <li>{props.profile.contacts.vk}</li>}\r\n                            {props.profile.contacts.twitter && <li>{props.profile.contacts.twitter}</li>}\r\n                            {props.profile.contacts.instagram && <li>{props.profile.contacts.instagram}</li>}\r\n                            {props.profile.contacts.youtube && <li>{props.profile.contacts.youtube}</li>}\r\n                            {props.profile.contacts.github && <li>{props.profile.contacts.github}</li>}\r\n                            {props.profile.contacts.mainLink && <li>{props.profile.contacts.mainLink}</li>}\r\n                        </ul>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    );\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/myAvatar.d884b73f.jpg\";","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from \"../../../../assets/images/avatars/myAvatar.jpg\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n    increase: (id: number) => void\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const increase = (id: number) => {\r\n        props.increase(id)\r\n    }\r\n\r\n    const postsElement =\r\n        <>\r\n            {\r\n                props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                    <div className={style.postMessage}>\r\n                        <img src={myAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                        <div className={style.text}> {p.post} </div>\r\n                    </div>\r\n                    <div className={style.like}\r\n                         onClick={() => increase(p.id)}>\r\n                        <FontAwesomeIcon icon={faHeart}/> {p.likesCounter}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormType} from \"../../common/Form/CommonForm\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const addPost = useCallback((text: CommonFormType) => {\r\n        props.addPost(text.newText)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}\r\n                      increase={props.increase}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import myAvatar from \"../assets/images/avatars/myAvatar.jpg\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof increaseLike>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\ntype ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: \"https://www.instagram.com/__pashkevich_/\" | null,\r\n    youtube: string | null,\r\n    github: \"https://github.com/andrew9488\" | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: \"Student of IT-Incubator\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: \"https://www.instagram.com/__pashkevich_/\",\r\n            youtube: null,\r\n            github: \"https://github.com/andrew9488\",\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"Looking vacancy of Frontend Developer by React.js\",\r\n        fullName: null as \"Andrew Pashkevich\" | null,\r\n        userId: 13446,\r\n        photos: {\r\n            small: myAvatar,\r\n            large: myAvatar\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"PROFILE-PAGE/INCREASE-LIKE\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => p.id === action.postId ? {...p, likesCounter: p.likesCounter + 1} : p)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPost = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\nexport const increaseLike = (postId: number) =>\r\n    ({type: \"PROFILE-PAGE/INCREASE-LIKE\", postId} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, increaseLike, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n    increase:(id:number)=>void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPost(text))\r\n        },\r\n        increase:(id:number)=>{\r\n            dispatch(increaseLike(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileTC, getUserStatusTC, ProfileType, updateStatusTC} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {getUserProfileTC, getUserStatusTC, updateStatusTC}), withRouter, withAuthRedirect)(ProfileContainer)\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\"><FontAwesomeIcon icon={faEnvelope}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\"><FontAwesomeIcon icon={faBell}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to=\"/profile/13446 \">{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to=\"/login\">Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (restProps: T) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...restProps}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n","import React, {ComponentType} from \"react\";\nimport style from \"./App.module.css\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs/Dialogs\"))\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\nconst LoginContainer = React.lazy(() => import(\"./components/Login/LoginContainer\"))\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Switch>\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/login\" component={withSuspense(LoginContainer)}/>\n                        <Route path=\"/users\" component={withSuspense(UsersContainer)}/>\n                        <Route path=\"/dialogs\" component={withSuspense(Dialogs)}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype AuthReducerActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsAuth>\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authTC())\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"login\", {_error: error}))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};"],"sourceRoot":""}