{"version":3,"sources":["components/Users/Users.module.css","components/Profile/ProfileData/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsItem/Message.module.css","components/Dialogs/DialogsItem/Dialog.module.css","components/Profile/Profile.module.css","components/Footer/Footer.module.css","components/Profile/ProfileAvatar/ProfileAvatar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","assets/images/logo/logo.png","components/Header/Header.tsx","components/Navbar/Navbar.tsx","assets/images/my-photo/my-photo1.png","assets/images/my-photo/my-photo2.jpg","assets/images/my-photo/my-photo3.jpg","components/Profile/ProfileAvatar/ProfileAvatar.tsx","assets/images/avatars/myAvatar.jpg","components/Profile/ProfileData/ProfileData.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/ProfilePageReducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Footer/Footer.tsx","redux/DialogsPageReducer.ts","components/Dialogs/DialogsItem/MessageContainer.tsx","components/Dialogs/DialogsItem/Message.tsx","components/Dialogs/DialogsItem/DialogContainer.tsx","components/Dialogs/DialogsItem/Dialog.tsx","components/Dialogs/Dialogs.tsx","redux/UsersPageReducer.ts","assets/images/avatars/usersAvatar.jpg","assets/images/logo/Rolling-1s-231px.svg","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/SidebarReducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","logo","src","alt","headUser","to","Navbar","navbar","items","item","activeClassName","activeLink","ProfileAvatar","profileAvatar","photo1","photo2","photo3","ProfileData","props","profileData","avatar","avatarImg","myAvatar","data","name","status","city","age","Post","postsElement","Fragment","posts","map","p","postMessage","post","like","likesCounter","id","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","newPostText","profilePageReducer","state","action","type","newPost","Date","getTime","MyPostsContainer","connect","profilePage","dispatch","addPost","updateNewPostText","newText","updateNewPostTextActionCreator","myPosts","title","container","field","value","onChange","e","currentTarget","onClick","Profile","profile","Footer","footer","footerText","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogs","img","messages","message","newMessageText","dialogsPageReducer","newMessage","MessageContainer","dialogsPage","sendMessage","updateNewMessageText","updateNewMessageTextActionCreator","messageText","m","sendMessageButton","DialogContainer","dialog","d","dialogItem","Dialogs","users","pageSize","totalCount","currentPage","isFetching","usersPageReducer","u","userId","followed","Users","useState","portionNumber","setPortionNumber","countPage","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","usersPage","page","paginator","filter","index","onClickCurrentPage","preloader","user","userAvatar","photos","small","UsersPhoto","width","height","borderRadius","userData","location","unFollow","follow","UsersClassContainer","setIsFetching","setCurrentPage","axios","get","response","setUsers","this","setTotalCount","React","Component","UsersContainer","followActionCreator","unFollowActionCreator","setUsersActionCreator","setCurrentPageActionCreator","setTotalCountActionCreator","setIsFetchingActionCreator","App","path","render","sidebarReducer","reducers","combineReducers","sidebar","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d658d79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3EiO7\",\"paginator\":\"Users_paginator__30n-k\",\"currentPage\":\"Users_currentPage__jJNpC\",\"container\":\"Users_container__1wJvV\",\"user\":\"Users_user__2v1B1\",\"userAvatar\":\"Users_userAvatar__2NoUX\",\"userData\":\"Users_userData__3H7_8\",\"name\":\"Users_name__1ZiLC\",\"status\":\"Users_status__1zTcp\",\"location\":\"Users_location__3dymT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"data\":\"ProfileData_data__2dnsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\",\"field\":\"MyPosts_field__1F1re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessage\":\"Post_postMessage__1y_oZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__NMOAK\",\"messageText\":\"Message_messageText__215RR\",\"sendMessageButton\":\"Message_sendMessageButton__2mVJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__vfZZh\",\"dialogItem\":\"Dialog_dialogItem__3A0vj\",\"activeLink\":\"Dialog_activeLink__3wrI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatar_profileAvatar__ZGvhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__FhxYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport logo from '../../assets/images/logo/logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\">Notification</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\">Login</NavLink>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Navbar.module.css';\r\n\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/users\" activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/my-photo1.ad902751.png\";","export default __webpack_public_path__ + \"static/media/my-photo2.2eef9532.jpg\";","export default __webpack_public_path__ + \"static/media/my-photo3.e3818bac.jpg\";","import React from \"react\";\r\nimport style from './ProfileAvatar.module.css';\r\nimport photo1 from './../../../assets/images/my-photo/my-photo1.png'\r\nimport photo2 from './../../../assets/images/my-photo/my-photo2.jpg'\r\nimport photo3 from './../../../assets/images/my-photo/my-photo3.jpg'\r\n\r\n\r\nexport function ProfileAvatar() {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1}\r\n                alt=\"my_photo\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2}\r\n                alt=\"my_photo\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3}\r\n                alt=\"my_photo\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/myAvatar.d884b73f.jpg\";","import React from \"react\";\r\nimport style from './ProfileData.module.css';\r\nimport myAvatar from '../../../assets/images/avatars/myAvatar.jpg'\r\n\r\ntype ProfileDataPropsType = {\r\n    name: string\r\n    city: string\r\n    age: number\r\n    status: string\r\n}\r\n\r\nexport function ProfileData(props: ProfileDataPropsType) {\r\n    return (\r\n        <div className={style.profileData}>\r\n            <div className={style.avatar}>\r\n                <img className={style.avatarImg}\r\n                     src={myAvatar}\r\n                     alt=\"my_avatar\"/>\r\n            </div>\r\n            <div className={style.data}>\r\n                <h3>{props.name}</h3>\r\n                <span>Status: {props.status}</span>\r\n                <ul>Info:\r\n                    <li>Online</li>\r\n                    <li>{props.city}</li>\r\n                    <li>{props.age}</li>\r\n                    <li>Single</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/ProfilePageReducer\";\r\nimport myAvatar from '../../../../assets/images/avatars/myAvatar.jpg'\r\n\r\n\r\ntype PostsPropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\nexport function Post(props: PostsPropsType) {\r\n\r\n    const postsElement =\r\n        <React.Fragment>\r\n            {props.posts.map(p => <div className={style.postMessage} key={p.id}>\r\n                <img src={myAvatar}\r\n                     alt=\"my_avatar\"/>\r\n               <div> {p.post} </div>\r\n                <div className={style.like}>Like {p.likesCounter}</div>\r\n            </div>)}\r\n        </React.Fragment>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n}\r\n\r\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST}) as const\r\n\r\nexport const updateNewPostTextActionCreator = (newText: string) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newPostText: newText}) as const\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPostActionCreator> | ReturnType<typeof updateNewPostTextActionCreator>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n};\r\n\r\nconst initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ],\r\n    newPostText: \"\"\r\n}\r\n\r\nconst profilePageReducer = (state: ProfilePageType = initialState, action: ProfilePageReducerActionsType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: state.newPostText,\r\n                likesCounter: 0,\r\n            };\r\n            return {...state,\r\n            newPostText: \"\",\r\n            posts: [...state.posts, newPost]}\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {...state,\r\n            newPostText: action.newPostText}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {\r\n    addPostActionCreator,\r\n    PostType,\r\n    ProfilePageReducerActionsType,\r\n    updateNewPostTextActionCreator\r\n} from \"../../../redux/ProfilePageReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (newText: string) => {\r\n            dispatch(updateNewPostTextActionCreator(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostType} from \"../../../redux/ProfilePageReducer\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport function MyPosts(props: MyPostsPropsType) {\r\n\r\n    const addPostText = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    const onChangePostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget.value\r\n        props.updateNewPostText(newText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <div className={style.field}>\r\n                    <textarea value={props.newPostText}\r\n                              onChange={onChangePostText}\r\n                    />\r\n                    <div>\r\n                        <button onClick={addPostText}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n                <Post posts={props.posts}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileAvatar} from \"./ProfileAvatar/ProfileAvatar\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nexport function Profile() {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileAvatar/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    status=\"I am learning React.\"\r\n                    name=\"Andrew Pashkevich\"\r\n                    city=\"Minsk\"\r\n                    age={25}/>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from './Footer.module.css';\r\n\r\n\r\nexport function Footer() {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE}) as const\r\n\r\nexport const updateNewMessageTextActionCreator = (newText: string) =>\r\n    ({type: UPDATE_NEW_MESSAGE_TEXT, newMessageText: newText}) as const\r\n\r\nexport type DialogsPageReducerActionsType = ReturnType<typeof sendMessageActionCreator> |\r\n    ReturnType<typeof updateNewMessageTextActionCreator>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n};\r\n\r\nconst initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Anton\", img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"},\r\n        {id: 2, name: \"Oleg\", img:\"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {id: 3, name: \"Anna\", img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"},\r\n        {id: 4, name: \"Julia\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Rimma\", img:\"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\nconst dialogsPageReducer = (state: DialogPageType = initialState, action: DialogsPageReducerActionsType): DialogPageType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: state.newMessageText,\r\n            };\r\n            return {...state,\r\n            newMessageText: \"\",\r\n            messages:[...state.messages, newMessage]}\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {...state,\r\n            newMessageText: action.newMessageText}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;","import {Message} from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {\r\n    DialogsPageReducerActionsType,\r\n    MessageType,\r\n    sendMessageActionCreator,\r\n    updateNewMessageTextActionCreator\r\n} from \"../../../redux/DialogsPageReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: () => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<DialogsPageReducerActionsType>): MapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreator())\r\n        },\r\n        updateNewMessageText: (newText: string) => {\r\n            dispatch(updateNewMessageTextActionCreator(newText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const MessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message);\r\n\r\n","import style from \"./Message.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {MessageType} from \"../../../redux/DialogsPageReducer\";\r\n\r\ntype MessagePropsType = {\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n    sendMessage: () => void\r\n    updateNewMessageText: (newText: string) => void\r\n\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n\r\n    const sendMessageText = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    const onChangeMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewMessageText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.message}>\r\n            <div className={style.messageText}>\r\n                {props.messages.map(m => <div key={m.id}>{m.message}</div>)}\r\n            </div>\r\n            <div>\r\n                <textarea value={props.newMessageText}\r\n                          onChange={onChangeMessageText}\r\n                />\r\n            </div>\r\n            <div className={style.sendMessageButton}>\r\n                <button onClick={sendMessageText}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Dialog} from \"./Dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogType} from \"../../../redux/DialogsPageReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {}\r\n\r\nconst mapDispatchToProps = (dispatch: any): MapDispatchToProps => {\r\n    return {}\r\n}\r\n\r\n\r\nexport const DialogContainer = connect(mapStateToProps, mapDispatchToProps)(Dialog)\r\n\r\n","import style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogType} from \"../../../redux/DialogsPageReducer\";\r\n\r\ntype DialogPropsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\nexport function Dialog(props: DialogPropsType) {\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            {props.dialogs.map(d => <div className={style.dialogItem} key={d.id}>\r\n                <NavLink to={\"/dialogs/\" + d.id} activeClassName={style.activeLink}>\r\n                    <img src={d.img} alt=\"avatar\"/>{d.name}\r\n                </NavLink>\r\n            </div>)}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport {MessageContainer} from \"./DialogsItem/MessageContainer\";\r\nimport {DialogContainer} from \"./DialogsItem/DialogContainer\";\r\n\r\nexport function Dialogs() {\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div>\r\n                <DialogContainer/>\r\n            </div>\r\n            <div>\r\n               <MessageContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const followActionCreator = (userId: number) => ({type: \"FOLLOW\", userId} as const)\r\nexport const unFollowActionCreator = (userId: number) => ({type: \"UNFOLLOW\", userId} as const)\r\nexport const setUsersActionCreator = (users: Array<UserType>) => ({type: \"SET-USERS\", users} as const)\r\nexport const setCurrentPageActionCreator = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCountActionCreator = (totalCount: number) => ({type: \"SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingActionCreator = (isFetching:boolean) => ({type: \"SET-IS-FETCHING\", isFetching} as const)\r\n\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof followActionCreator>\r\n    | ReturnType<typeof unFollowActionCreator>\r\n    | ReturnType<typeof setUsersActionCreator>\r\n    | ReturnType<typeof setCurrentPageActionCreator>\r\n    | ReturnType<typeof setTotalCountActionCreator>\r\n    | ReturnType<typeof setIsFetchingActionCreator>\r\n\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n}\r\n\r\ntype InitialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\n\r\n/*\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            id: 1, fullName: \"Anton Borozna\", status: \"I am learning JAVA\", followed: true,\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\",\r\n            location: {country: \"Belarus\", city: \"Minsk\"}\r\n        },\r\n        {\r\n            id: 2, fullName: \"Misha Dubeiko\", status: \"I want to grow hair\", followed: false,\r\n            img: \"https://cdn.anisearch.com/images/character/cover/full/68/68527.jpg\",\r\n            location: {country: \"Denmark\", city: \"Kopenhagen\"}\r\n        },\r\n        {\r\n            id: 3, fullName: \"Anna Storm\", status: \"I won’t take advice from Andrew\", followed: true,\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\",\r\n            location: {country: \"Belarus\", city: \"Minsk\"}\r\n        },\r\n        {\r\n            id: 4, fullName: \"Dmitriy Prokopovich\", status: \"Why Kate don't love me?\", followed: false,\r\n            img: \"https://steamuserimages-a.akamaihd.net/ugc/840335235114018527/2BC1ABBB312428E16725B7AD99BEC0309D87B4A7/\",\r\n            location: {country: \"Belgium\", city: \"Antwerpen\"}\r\n        },\r\n    ]\r\n}\r\n*/\r\n\r\n//export type usersType = typeof initialState.users\r\n\r\n//export type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state = initialState, action: UsersPageReducerActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"SET-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import React, {useState} from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport {UserType} from \"../../redux/UsersPageReducer\";\r\nimport UsersPhoto from \"../../assets/images/avatars/usersAvatar.jpg\";\r\nimport preloader from \"../../assets/images/logo/Rolling-1s-231px.svg\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    usersPage: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<any>) => void\r\n    onClickCurrentPage: (page: number) => void\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    let countPage = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil((countPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <div className={style.page}>\r\n                <div className={style.paginator}>\r\n                    {portionNumber > 1 &&\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n                    {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map((p, index) => {\r\n                            return <span key={index} onClick={() => {\r\n                                props.onClickCurrentPage(p)\r\n                            }}\r\n                                         className={props.currentPage === p ? style.currentPage : ''}>{p}</span>\r\n                        })}\r\n                    {portionCount > portionNumber &&\r\n                    <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>}\r\n                </div>\r\n            </div>\r\n            {props.isFetching ? <img src={preloader} alt=\"preloader\" className={style.preloader}/>\r\n                : <div className={style.container}>\r\n                    {\r\n                        props.usersPage.map(u => <div key={u.id} className={style.user}>\r\n                            <div className={style.userAvatar}>\r\n                                <img src={u.photos.small != null ? u.photos.small : UsersPhoto}\r\n                                     style={{width: \"80px\", height: \"80px\", borderRadius: \"100%\",}} alt=\"avatar\"/>\r\n                            </div>\r\n                            <div className={style.userData}>\r\n                                <span className={style.name}>{u.name}</span>\r\n                                <span\r\n                                    className={style.status}>Status: {u.status != null ? u.status : \"I have not status\"}</span>\r\n                                <div className={style.location}>\r\n                                    <span>{\"u.location.city\"},</span>\r\n                                    <span>{\"u.location.country\"}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    !u.followed\r\n                                        ? <button onClick={() => props.follow(u.id)}>follow</button>\r\n                                        : <button onClick={() => props.unFollow(u.id)}>unfollow</button>\r\n                                }\r\n                                <button>message</button>\r\n                            </div>\r\n                        </div>)\r\n                    }\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator,\r\n    setCurrentPageActionCreator, setIsFetchingActionCreator,\r\n    setTotalCountActionCreator,\r\n    setUsersActionCreator,\r\n    unFollowActionCreator,\r\n    UsersPageReducerActionsType,\r\n    UserType\r\n} from \"../../redux/UsersPageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype UsersClassContainerPropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalCount: (totalCount: number) => void\r\n    isFetching: boolean\r\n    setIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setIsFetching(false)\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalCount(response.data.totalCount);\r\n            })\r\n    }\r\n\r\n    onClickCurrentPage = (page: number) => {\r\n        this.props.setIsFetching(true)\r\n        this.props.setCurrentPage(page)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setIsFetching(false)\r\n                this.props.setUsers(response.data.items);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Users\r\n                    usersPage={this.props.usersPage}\r\n                    currentPage={this.props.currentPage}\r\n                    pageSize={this.props.pageSize}\r\n                    totalCount={this.props.totalCount}\r\n                    setUsers={this.props.setUsers}\r\n                    follow={this.props.follow}\r\n                    unFollow={this.props.unFollow}\r\n                    onClickCurrentPage={this.onClickCurrentPage}\r\n                    isFetching={this.props.isFetching}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    usersPage: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (UserId: number) => void\r\n    unFollow: (UserId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UsersPageReducerActionsType>): MapDispatchToPropsType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followActionCreator(userId))\r\n        },\r\n        unFollow: (userId: number) => {\r\n            dispatch(unFollowActionCreator(userId))\r\n        },\r\n        setUsers: (users: Array<UserType>) => {\r\n            dispatch(setUsersActionCreator(users))\r\n        },\r\n        setCurrentPage: (currentPage: number) => {\r\n            dispatch(setCurrentPageActionCreator(currentPage))\r\n        },\r\n        setTotalCount: (totalCount: number) => {\r\n            dispatch(setTotalCountActionCreator(totalCount))\r\n        },\r\n        setIsFetching: (isFetching: boolean) => {\r\n            dispatch(setIsFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClassContainer)","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\n\nconst App: React.FC = () => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <Header/>\n                <Navbar/>\n                <div className=\"content\">\n                    <Route path=\"/profile\" render={() => <Profile/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/dialogs\" render={() => <Dialogs/>}/>\n                </div>\n                <Footer/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./ProfilePageReducer\";\r\nimport dialogsPageReducer from \"./DialogsPageReducer\";\r\nimport sidebarReducer from \"./SidebarReducer\";\r\nimport usersPageReducer from \"./UsersPageReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nexport const store = createStore(reducers);\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}