{"version":3,"sources":["components/Profile/Profile.module.css","App.module.css","components/Footer/Footer.module.css","hoc/withAuthRedirect.tsx","components/common/Form/CommonForm.tsx","assets/images/avatars/city-Z.png","api/api.ts","redux/dialogsPageReducer.ts","utils/objectHelpers.ts","api/users-api.ts","api/follow-api.ts","redux/usersPageReducer.ts","api/chat-api.ts","redux/chatReducer.ts","components/Profile/ProfileImages/ProfileImages.module.css","components/Profile/ProfileData/Contacts.module.css","hoc/withSuspense.tsx","assets/images/avatars/city-D.png","assets/images/avatars/city-A.png","components/Profile/ProfileImages/ProfileImages.tsx","components/Profile/ProfileData/Contacts.tsx","components/Profile/ProfileData/ProfileStatus.tsx","components/Profile/ProfileData/ProfileInfo.tsx","components/Profile/ProfileData/ProfileForm.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Routes/Routes.tsx","components/Navbar/Navbar.module.css","api/profile-api.ts","redux/profilePageReducer.ts","components/Profile/ProfileData/ProfileInfo.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","assets/images/logo/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/appReducer.ts","components/Footer/Footer.tsx","App.tsx","redux/sidebarReducer.ts","redux/redux-store.ts","index.tsx","components/common/Form/CustomField.tsx","api/auth-api.ts","api/captcha-api.ts","redux/authReducer.ts","assets/images/logo/Rolling-1s-231px.svg","components/common/Preloader/Preloader.tsx","utils/validator.ts","components/Profile/ProfileData/ProfileData.module.css","components/Profile/ProfileData/ProfileForm.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","assets/images/avatars/usersAvatar.jpg","components/common/Form/CustomField.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","PATH","LOGIN","max","maxLength","Form","React","memo","onSubmit","handleSubmit","name","type","component","Textarea","validate","required","disabled","disable","CommonForm","reduxForm","form","instance","axios","create","withCredentials","baseURL","headers","initialState","dialogs","id","img","messages","message","dialogsPageReducer","action","newMessage","Date","getTime","newText","sendMessage","objectHelpers","items","itemId","objectPropsName","newObjectsProps","map","item","usersAPI","currentPage","pageSize","term","friend","get","then","response","data","followAPI","post","delete","users","totalCount","isFetching","disableButton","followingInProgress","filter","setIsFetchingUsersComponent","usersPageReducer","userId","followed","setFollowingProgress","getUsersTC","dispatch","setSearchFilter","setCurrentPage","catch","error","console","warn","followTC","resultCode","follow","length","unFollowTC","unFollow","subscribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","openWebSocket","cleanUpListener","removeEventListener","messageHandler","openHandler","errorHandler","status","forEach","s","e","newMessages","JSON","parse","close","WebSocket","addEventListener","chatApi","eventName","callback","push","send","chatReducer","m","ind","arr","_newMessageHandler","newMessageHandlerCreator","getMessages","_statusHandler","statusHandlerCreator","changeStatus","startMessagesListeningTC","stopMessagesListeningTC","sendMessageChatTC","withSuspense","Suspense","fallback","Preloader","ProfileImages","className","style","profileAvatar","src","photo1","alt","photo2","photo3","Contacts","contactsValue","contactsKey","li","ProfileStatus","useEffect","setStatus","useState","editableMode","setEditableMode","onBlur","updateStatus","autoFocus","value","onChange","currentTarget","onDoubleClick","ProfileInfo","fullName","isOwner","onClick","onActivateEditMode","icon","faPen","aboutMe","descriptionInfo","work","lookingForAJob","open","busy","lookingForAJobDescription","ProfileForm","formContainer","formButton","faCheck","deactivateEditMode","cancel","Field","placeholder","Input","checkboxField","Object","keys","profile","contacts","key","contactFields","ProfileData","editMode","setEditMode","onUploadPhoto","useCallback","target","files","uploadPhoto","formData","changeProfileInfo","profileData","avatar","avatarImg","photos","large","userAvatar","faFileImage","buttonLoad","initialValues","index","Post","postsElement","posts","p","postMessageContainer","postMessage","smallImage","myAvatar","text","like","increase","faHeart","likesCounter","MyPosts","useDispatch","addPost","reset","myPosts","title","container","compose","profilePage","small","increaseLike","Profile","updateStatusTC","uploadPhotoTC","changeProfileInfoTC","MyPostsContainer","ProfileContainer","Number","this","match","params","myId","getUserProfileTC","getUserStatusTC","refresh","prevProps","prevState","PureComponent","withRouter","Dialogs","lazy","UsersContainer","LoginContainer","PROFILE","USERS","DIALOGS","NEWS","MUSIC","SETTINGS","CHAT","Routes","exact","path","render","profileAPI","put","FormData","append","facebook","website","vk","twitter","instagram","youtube","github","mainLink","profilePageReducer","newPost","postText","postId","photo","setIsFetchingProfileComponent","setProfileStatus","getState","stopSubmit","_error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","navbar","activeClassName","activeLink","Header","header","logo","headUser","faEnvelope","faBell","logOut","login","logOutTC","HeaderContainer","isInitialization","appReducer","Footer","footer","footerText","App","appInitializeTC","app","content","authPromise","authTC","Promise","all","sidebarReducer","reducer","combineReducers","dialogsPage","sidebar","usersPage","authReducer","formReducer","chat","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","fieldForm","children","authAPI","email","password","rememberMe","captcha","captchaAPI","setIsAuth","setUserData","logInTC","getCaptchaTC","url","preloader"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,6B,oBCAjED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,oBCAnDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,4HCSzDC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAOhC,OAAQC,YAAQN,EAAiB,GAAzBM,EANkB,SAACC,GAA8B,IAC9CL,EAAwBK,EAAxBL,OAAWM,EADkC,YACrBD,EADqB,YAEpD,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAIC,IAAKC,a,gICNzCC,EAAMC,YAAU,KAEhBC,EAA8EC,IAAMC,MAAK,SAACT,GAC5F,OACI,uBAAMU,SAAUV,EAAMW,aAAtB,UACI,8BACI,cAAC,IAAD,CAAOC,KAAK,UAAUC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAEhF,8BACI,wBAAQa,SAAUlB,EAAMmB,QAASN,KAAK,SAAtC,0BAMHO,EAAaC,YAAyC,CAC/DC,KAAM,sBADgBD,CAEvBd,I,iCC9BY,QAA0B,oC,gCCAzC,+CAQagB,EARb,OAQwBC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,2C,sFCAbC,EAAe,CACjBC,QAAS,CACL,CACIC,GAAI,EACJnB,KAAM,OACNoB,IAAK,6FAET,CAACD,GAAI,EAAGnB,KAAM,qBAAsBoB,IAAK,4EACzC,CACID,GAAI,EACJnB,KAAM,YACNoB,IAAK,6FAET,CAACD,GAAI,EAAGnB,KAAM,SAAUoB,IAAK,8DAC7B,CAACD,GAAI,EAAGnB,KAAM,eAAgBoB,IAAK,2DAEvCC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,oBACjB,CAACH,GAAI,EAAGG,QAAS,uBACjB,CAACH,GAAI,EAAGG,QAAS,sCACjB,CAACH,GAAI,EAAGG,QAAS,qBAuBVC,IAjBY,WAAsG,IAArGzC,EAAoG,uDAA1EmC,EAAcO,EAA4D,uCAE5H,OAAQA,EAAOvB,MACX,IAAK,4BACD,IAAMwB,EAA0B,CAC5BN,IAAI,IAAIO,MAAOC,UACfL,QAASE,EAAOI,SAEpB,OAAO,2BACA9C,GADP,IAEIuC,SAAS,GAAD,mBAAMvC,EAAMuC,UAAZ,CAAsBI,MAEtC,QACI,OAAO3C,IAMZ,IAAM+C,EAAc,SAACD,GAAD,MAAsB,CAAC3B,KAAM,4BAA6B2B,a,0JCzDxEE,EAAgB,SAACC,EAAYC,EAAaC,EAAsBC,GACzE,OAAOH,EAAMI,KAAI,SAACC,GAAD,OAAeA,EAAKH,KAAqBD,EAA1B,2BAAuCI,GAASF,GAAmBE,M,QCQ1FC,EAAW,SACXC,EAAqBC,GAAqE,IAAnDC,EAAkD,uDAA5B,GAAIC,EAAwB,uCAC9F,OAAO9B,IAAS+B,IAAsB,qBAAcJ,EAAd,kBAAmCC,EAAnC,iBAAoDC,IAAqB,OAAXC,EAAkB,GAAlB,kBAAkCA,KACjIE,MAAK,SAAAC,GACF,OAAOA,EAASC,SCXnBC,EAAY,SACd3B,GACH,OAAOR,IAASoC,KAAT,iBAA4C5B,GAAM,IACpDwB,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBC,EAAY,SAOZ3B,GACL,OAAOR,IAASqC,OAAT,iBAA8C7B,IAChDwB,MAAK,SAAAC,GACF,OAAOA,EAASC,SCyB1B5B,EAAe,CACjBgC,MAAO,GACPV,SAAU,GACVW,WAAY,EACZZ,YAAa,EACba,YAAY,EACZC,eAAe,EACfC,oBAAqB,GACrBC,OAAQ,CACJd,KAAM,KACNC,OAAQ,OAuDHc,GAPEC,IA1CU,WAAoG,IAAnG1E,EAAkG,uDAAxEmC,EAAcO,EAA0D,uCAExH,OAAQA,EAAOvB,MACX,IAAK,oBACD,OAAO,2BACAnB,GADP,IAEImE,MAAOnB,EAAchD,EAAMmE,MAAOzB,EAAOiC,OAAQ,KAAM,CAACC,UAAU,MAE1E,IAAK,sBACD,OAAO,2BACA5E,GADP,IAEImE,MAAOnB,EAAchD,EAAMmE,MAAOzB,EAAOiC,OAAQ,KAAM,CAACC,UAAU,MAE1E,IAAK,uBACD,OAAO,2BAAI5E,GAAX,IAAkBmE,MAAOzB,EAAOyB,QACpC,IAAK,8BACD,OAAO,2BAAInE,GAAX,IAAkBwD,YAAad,EAAOc,cAC1C,IAAK,6BACD,OAAO,2BAAIxD,GAAX,IAAkBoE,WAAY1B,EAAO0B,aACzC,IAAK,6CACD,OAAO,2BAAIpE,GAAX,IAAkBqE,WAAY3B,EAAO2B,aACzC,IAAK,oCACD,OAAO,2BACArE,GADP,IAEIuE,oBAAqB7B,EAAO4B,cAAP,sBACXtE,EAAMuE,qBADK,CACgB7B,EAAOiC,SACtC3E,EAAMuE,oBAAoBC,QAAO,SAAAnC,GAAE,OAAIA,IAAOK,EAAOiC,YAEnE,IAAK,+BACD,OAAO,2BACA3E,GADP,IAEIwE,OAAO,2BACAxE,EAAMwE,QADP,IAEFd,KAAMhB,EAAOgB,KACbC,OAAQjB,EAAOiB,WAG3B,QACI,OAAO3D,IAWwB,SAACqE,GAAD,MACtC,CAAClD,KAAM,6CAA8CkD,gBAC7CQ,EAAuB,SAACP,EAAwBK,GAAzB,MAC/B,CAACxD,KAAM,oCAAqCmD,gBAAeK,WAInDG,EAAa,SAACtB,EAAqBC,EAAkBC,EAAsBC,GACpF,OAAO,SAACoB,GACJA,EAASN,GAA4B,IACrClB,EAAkBC,EAAaC,EAAUC,EAAMC,GAC1CE,MAAK,SAAAE,GACFgB,EAASN,GAA4B,IACrCM,EAhBqC,CAAC5D,KAAM,uBAAwBgD,MAgBlDJ,EAAKd,QACvB8B,EAfsC,CAAC5D,KAAM,6BAA8BiD,WAepDL,EAAKK,aAC5BW,EAXe,SAACrB,EAAqBC,GAAtB,MAC1B,CAACxC,KAAM,+BAAgCuC,OAAMC,UAUzBqB,CAAgBtB,EAAMC,IAC/BoB,EAlBc,SAACvB,GAAD,MAA0B,CAACrC,KAAM,8BAA+BqC,eAkBrEyB,CAAezB,OAE3B0B,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBG,EAAW,SAACX,GACrB,OAAO,SAACI,GACJA,EAASF,GAAqB,EAAMF,IACpCX,EAAiBW,GACZd,MAAK,SAAAE,GACsB,IAApBA,EAAKwB,WACLR,EAnCE,SAACJ,GAAD,MAAqB,CAACxD,KAAM,oBAAqBwD,UAmC1Ca,CAAOb,IAEZZ,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,IAGnCwC,EAASF,GAAqB,EAAOF,OAExCO,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBO,EAAa,SAACf,GACvB,OAAO,SAACI,GACJA,EAASF,GAAqB,EAAMF,IACpCX,EAAmBW,GACdd,MAAK,SAAAE,GACsB,IAApBA,EAAKwB,WACLR,EAtDI,SAACJ,GAAD,MAAqB,CAACxD,KAAM,sBAAuBwD,UAsD9CgB,CAAShB,IAEdZ,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,IAGnCwC,EAASF,GAAqB,EAAOF,OAExCO,OAAM,SAAAC,GACHC,QAAQC,KAAKF,S,4LCtJzBS,EAAc,CACd,oBAAqB,GACrB,iBAAkB,IAGlBC,EAAuB,KACrBC,EAAe,WACjBC,EAA6B,WAC7BC,WAAWC,EAAe,MAGxBC,EAAkB,WAAO,IAAD,QACxB,QAAF,EAAAL,SAAA,SAAIM,oBAAoB,QAASL,GAC/B,QAAF,EAAAD,SAAA,SAAIM,oBAAoB,UAAWC,GACjC,QAAF,EAAAP,SAAA,SAAIM,oBAAoB,OAAQE,GAC9B,QAAF,EAAAR,SAAA,SAAIM,oBAAoB,QAASG,IAG/BP,EAA+B,SAACQ,GAAD,OAAwBX,EAAY,kBAAkBY,SAAQ,SAAAC,GAAC,OAAIA,EAAEF,OAEpGH,EAAiB,SAACM,GACpB,IAAMC,EAAcC,KAAKC,MAAMH,EAAE3C,MACjC6B,EAAY,qBAAqBY,SAAQ,SAAAC,GAAC,OAAIA,EAAEE,OAE9CN,EAAc,kBAAMN,EAA6B,UACjDO,EAAe,kBAAMP,EAA6B,UAElDE,EAAgB,WAAO,IAAD,EACxBC,IACE,QAAF,EAAAL,SAAA,SAAIiB,QACJjB,EAAK,IAAIkB,UAAU,gEACnBhB,EAA6B,WAC7BF,EAAGmB,iBAAiB,QAASlB,GAC7BD,EAAGmB,iBAAiB,UAAWZ,GAC/BP,EAAGmB,iBAAiB,OAAQX,GAC5BR,EAAGmB,iBAAiB,QAASV,IAGpBW,EAAU,WAEfhB,KAFKgB,EAAU,WAIX,IAAD,EACHf,IACE,QAAF,EAAAL,SAAA,SAAIiB,QACJlB,EAAY,qBAAuB,GACnCA,EAAY,kBAAoB,IAR3BqB,EAAU,SAUTC,EAA0BC,GAGhC,OADAvB,EAAYsB,GAAWE,KAAKD,GACrB,kBAAMvB,EAAYsB,GAAatB,EAAYsB,GAAW1C,QAAO,SAAAiC,GAAC,OAAIA,IAAMU,OAb1EF,EAAU,SAePC,EAA0BC,GAClCvB,EAAYsB,GAAatB,EAAYsB,GAAW1C,QAAO,SAAAiC,GAAC,OAAIA,IAAMU,MAhB7DF,EAAU,SAkBPzE,GAAkB,IAAD,EACvB,QAAF,EAAAqD,SAAA,SAAIwB,KAAK7E,IC3DXL,EAAe,CACjBI,SAAU,GACVgE,OAAQ,WAICe,EAAc,WAA+F,IAA9FtH,EAA6F,uDAAnEmC,EAAcO,EAAqD,uCACrH,OAAQA,EAAOvB,MACX,IAAK,oBACD,OAAO,2BACAnB,GADP,IAEIuC,SAAU,sBAAIvC,EAAMuC,UAAV,YAAuBG,EAAOH,WAAUiC,QAAO,SAAC+C,EAAGC,EAAKC,GAAT,OAAiBD,GAAOC,EAAIhC,OAAS,SAEtG,IAAK,qBACD,OAAO,2BACAzF,GADP,IAEIuG,OAAQ7D,EAAO6D,SAEvB,QACI,OAAOvG,IASf0H,EAA0E,KAC1EC,EAA2B,SAAC5C,GAM5B,OAL2B,OAAvB2C,IACAA,EAAqB,SAACnF,GAClBwC,EATe,SAACxC,GAAD,MACtB,CAACpB,KAAM,oBAAqBoB,YAQZqF,CAAYrF,MAGtBmF,GAGPG,EAAwD,KACxDC,EAAuB,SAAC/C,GAMxB,OALuB,OAAnB8C,IACAA,EAAiB,SAACtB,GACdxB,EAjBgB,SAACwB,GAAD,MACvB,CAACpF,KAAM,qBAAsBoF,UAgBbwB,CAAaxB,MAGvBsB,GAGEG,EAA2B,kBACpC,SAACjD,GACGkC,IACAA,EAAkB,oBAAqBU,EAAyB5C,IAChEkC,EAAkB,iBAAkBa,EAAqB/C,MAEpDkD,EAA0B,kBACnC,SAAClD,GACGkC,IACAA,EAAoB,oBAAqBU,EAAyB5C,IAClEkC,EAAoB,iBAAkBa,EAAqB/C,MAEtDmD,EAAoB,SAAC1F,GAAD,OAC7B,SAACuC,GAEGkC,EAAoBzE,M,oBCvE5B3C,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,GAAK,uB,wJCEhB,SAASqI,EAAgB/H,GAE5B,OAAO,SAACG,GAAD,OACH,cAAC,IAAM6H,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAA1B,SACI,cAAClI,EAAD,eAAeG,O,wECPZ,MAA0B,mCCA1B,MAA0B,mC,SCO5BgI,EAA0BzH,IAAMC,MAAK,WAC9C,OACI,sBAAKyH,UAAWC,IAAMC,cAAtB,UACI,8BACI,qBAAKC,IAAKC,EAAQC,IAAI,aAE1B,8BACI,qBAAKF,IAAKG,EAAQD,IAAI,aAE1B,8BACI,qBAAKF,IAAKI,IAAQF,IAAI,mB,mECVzBG,EAAwC,SAAC1I,GAClD,OACI,mCACI,6BACKA,EAAM2I,eAAiB3I,EAAM2I,cAC1B,qCACI,+BAAO3I,EAAM4I,cACb,oBAAIV,UAAWC,IAAMU,GAArB,SAA0B7I,EAAM2I,mBAC9B,U,iBCRbG,EAAkD,SAAC9I,GAE5D+I,qBAAU,WACNC,EAAUhJ,EAAMiG,UACjB,CAACjG,EAAMiG,SAJ4D,MAM9BgD,oBAAkB,GANY,mBAM/DC,EAN+D,KAMjDC,EANiD,OAO1CF,mBAAiBjJ,EAAMiG,QAPmB,mBAO/DA,EAP+D,KAOvD+C,EAPuD,KAsBtE,OACI,8BACME,EAEI,uBAAOE,OAbU,WAC3BD,GAAgB,GAChBnJ,EAAMqJ,aAAapD,IAYFqD,WAAS,EACTC,MAAOtD,EACPuD,SAXE,SAACpD,GACpB4C,EAAU5C,EAAEqD,cAAcF,UAMhB,uBAAMG,cAhBS,WACzBP,GAAgB,IAeN,qBAAoDnJ,EAAMiG,aChB/D0D,EAA8C,SAAC3J,GAExD,OACI,qCACI,qBAAIkI,UAAWC,IAAMvH,KAArB,UAA4BZ,EAAM4J,SAAlC,IAA6C5J,EAAM6J,QAC/C,wBAAQC,QAAS9J,EAAM+J,mBAAvB,SAA2C,cAAC,IAAD,CAAiBC,KAAMC,QAAoB,GAD1F,OAEA,cAAC,EAAD,CAAehE,OAAQjG,EAAMiG,OAAQoD,aAAcrJ,EAAMqJ,eACzD,uBAAMnB,UAAWC,IAAM+B,QAAvB,UAAgC,sBAC5BhC,UAAWC,IAAMgC,gBADW,uBAAhC,IACwDnK,EAAMkK,WAC9D,sBAAKhC,UAAWC,IAAMiC,KAAtB,UACY,uBAAMlC,UAAWlI,EAAMqK,eAAiBlC,IAAMmC,KAAOnC,IAAMoC,KAA3D,UACI,sBACIrC,UAAWC,IAAMgC,gBADrB,4BADJ,IAEiEnK,EAAMqK,eAAiB,gBAAkB,WAEjHrK,EAAMqK,gBAAkBrK,EAAMwK,2BAC/B,iCAAM,sBAAMtC,UAAWC,IAAMgC,gBAAvB,sBAAN,IAA+DnK,EAAMwK,oC,mDCyBxEC,EAAepJ,YAA0C,CAACC,KAAM,eAAjDD,EAnCyD,SAACrB,GAClF,OACI,uBAAMU,SAAUV,EAAMW,aAAcuH,UAAWC,IAAMuC,cAArD,UACI,sBAAKxC,UAAWC,IAAMwC,WAAtB,UACI,wBAAQ9J,KAAK,SAAb,SAAsB,cAAC,IAAD,CAAiBmJ,KAAMY,QAC7C,wBAAQd,QAAS9J,EAAM6K,mBAAoB3C,UAAWC,IAAM2C,OAA5D,kBAEJ,gCACI,+CAAwB,cAACC,EAAA,EAAD,CAAOnK,KAAK,WAAWC,KAAK,OAAOmK,YAAY,YAAYlK,UAAWmK,IAC/DjK,SAAU,CAACC,UAE9C,gCACI,8CAAuB,cAAC8J,EAAA,EAAD,CAAOnK,KAAK,UAAUC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,CAACC,UAE7F,sBAAKiH,UAAWC,IAAM+C,cAAtB,UACI,uDACA,cAACH,EAAA,EAAD,CAAOnK,KAAK,iBAAiBC,KAAK,WAAWC,UAAWmK,SAE5D,gCACI,uDACA,cAACF,EAAA,EAAD,CAAOnK,KAAK,4BAA4BC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,QAEvF,gCACI,6CACEmK,OAAOC,KAAKpL,EAAMqL,QAAQC,UAAwCvI,KAAI,SAACwI,GACrE,OAAO,sBAAerD,UAAWC,IAAMqD,cAAhC,UACH,iCAAOD,EAAP,QAAoB,cAACR,EAAA,EAAD,CAAOnK,KAAM,YAAc2K,EAAK1K,KAAK,OAAOC,UAAWmK,IAAOjK,SAAU,OAD/EuK,eCxBxBE,EAA8CjL,IAAMC,MAAK,SAACT,GAAW,IAAD,EAGzCiJ,oBAAkB,GAHuB,mBAGlEyC,EAHkE,KAGxDC,EAHwD,KAKnEC,EAAgBC,uBAAY,SAACzF,GAC3BA,EAAE0F,OAAOC,OACT/L,EAAMgM,YAAY5F,EAAE0F,OAAOC,MAAM,MAEtC,CAAC/L,EAAMgM,cAEJjC,EAAqB8B,uBAAY,WACnCF,GAAY,KACb,IACGd,EAAqBgB,uBAAY,WACnCF,GAAY,KACb,IAEGjL,EAAWmL,uBAAY,SAACI,GAC1BjM,EAAMkM,kBAAkBD,GACxBN,GAAY,KACb,CAAC3L,IAEJ,OACI,qBAAKkI,UAAWC,IAAMgE,YAAtB,SACKnM,EAAM+D,WACD,cAACiE,EAAA,EAAD,IACA,qCACE,sBAAKE,UAAWC,IAAMiE,OAAtB,UACI,qBAAKlE,UAAWC,IAAMkE,UACjBhE,IAAKrI,EAAMqL,QAAQiB,OAAOC,MAAQvM,EAAMqL,QAAQiB,OAAOC,MAAQC,IAC/DjE,IAAI,cACRvI,EAAM6J,QACD,kCACE,cAAC,IAAD,CAAiBG,KAAMyC,IAAavE,UAAWC,IAAMuE,aACrD,uBAAO7L,KAAK,OAAO2I,SAAUoC,OAE/B,MAGV,sBAAK1D,UAAWC,IAAM1E,KAAtB,UACKiI,EACK,cAACjB,EAAD,CAAa/J,SAAUA,EAAUiM,cAAe3M,EAAMqL,QACzCA,QAASrL,EAAMqL,QACfR,mBAAoBA,IACjC,cAAE,EAAF,CAAcjB,SAAU5J,EAAMqL,QAAQzB,SACxBM,QAASlK,EAAMqL,QAAQnB,QACvBG,eAAgBrK,EAAMqL,QAAQhB,eAC9BG,0BAA2BxK,EAAMqL,QAAQb,0BACzCX,QAAS7J,EAAM6J,QACf5D,OAAQjG,EAAMiG,OACdoD,aAAcrJ,EAAMqJ,aACpBU,mBAAoBA,IAIpC2B,EAAW,KACL,gCACE,2CAAmBP,OAAOC,KAAKpL,EAAMqL,QAAQC,UAAwCvI,KAAI,SAACwI,EAAKqB,GAC/F,OAAO,cAAC,EAAD,CAAsBhE,YAAa2C,EACzB5C,cAAe3I,EAAMqL,QAAQC,SAASC,IADjCqB,oB,kCCnEjDC,EAAOrM,IAAMC,MAAK,SAACT,GAE5B,IAIM8M,EACF,mCAEQ9M,EAAM+M,MAAMhK,KAAI,SAAAiK,GAAC,OAAI,sBAAK9E,UAAWC,IAAM8E,qBAAtB,UACjB,sBAAK/E,UAAWC,IAAM+E,YAAtB,UACI,qBAAK7E,IAAKrI,EAAMmN,WAAanN,EAAMmN,WAAaC,IAC3C7E,IAAI,cACT,sBAAKL,UAAWC,IAAMkF,KAAtB,cAA8BL,EAAErJ,KAAhC,UAEJ,sBAAKuE,UAAWC,IAAMmF,KACjBxD,QAAS,kBAdZ/H,EAc2BiL,EAAEjL,QAb3C/B,EAAMuN,SAASxL,GADF,IAACA,GAaF,UAEI,cAAC,IAAD,CAAiBiI,KAAMwD,MAF3B,IAEuCR,EAAES,kBARyBT,EAAEjL,SAcpF,OACI,qBAAKmG,UAAWC,IAAMxE,KAAtB,SACKmJ,O,yBC9BAY,EAAsClN,IAAMC,MAAK,SAACT,GAE3D,IAAMyE,EAAWkJ,cAEXC,EAAU/B,uBAAY,SAACwB,GACzBrN,EAAM4N,QAAQP,EAAK7K,SACnBiC,EAASoJ,YAAM,yBAChB,CAAC7N,IAEJ,OACI,sBAAKkI,UAAWC,IAAM2F,QAAtB,UACI,oBAAI5F,UAAWC,IAAM4F,MAArB,sBACA,sBAAK7F,UAAWC,IAAM6F,UAAtB,UACI,cAAC5M,EAAA,EAAD,CAAYV,SAAUkN,IACtB,cAACf,EAAD,CAAME,MAAO/M,EAAM+M,MACbQ,SAAUvN,EAAMuN,SAChBJ,WAAYnN,EAAMmN,sB,eCWzBc,eACXlO,aAnBoB,SAACL,GACrB,MAAO,CACHqN,MAAOrN,EAAMwO,YAAYnB,MACzBI,WAAYzN,EAAMwO,YAAY7C,QAAQiB,OAAO6B,UAI1B,SAAC1J,GACxB,MAAO,CACHmJ,QAAS,SAACP,GACN5I,EAASmJ,YAAQP,KAErBE,SAAU,SAACxL,GACP0C,EAAS2J,YAAarM,SAKnBkM,CAEcP,GC9BhBW,GAAsC7N,IAAMC,MAAK,SAACT,GAG3D,OACI,sBAAKkI,UAAWC,IAAMkD,QAAtB,UACI,cAACpD,EAAD,IACA,sBAAKC,UAAWC,IAAM6F,UAAtB,UACI,cAACvC,EAAD,CACI1H,WAAY/D,EAAM+D,WAClBsH,QAASrL,EAAMqL,QACfpF,OAAQjG,EAAMiG,OACdoD,aAAcrJ,EAAMsO,eACpBtC,YAAahM,EAAMuO,cACnBrC,kBAAmBlM,EAAMwO,oBACzB3E,UAAS7J,EAAM6J,SAAU7J,EAAM6J,UAEnC,cAAC4E,GAAD,a,UCkBVC,G,wKAGE,IAAIrK,EAASsK,OAAOC,KAAK5O,MAAM6O,MAAMC,OAAOzK,QACvCA,IACDA,EAASuK,KAAK5O,MAAM+O,MAExBH,KAAK5O,MAAMgP,iBAAiB3K,GAC5BuK,KAAK5O,MAAMiP,gBAAgB5K,K,0CAI3BuK,KAAKM,Y,yCAGUC,EAAgCC,GAC3CR,KAAK5O,MAAM6O,MAAMC,OAAOzK,SAAW8K,EAAUN,MAAMC,OAAOzK,QAC1DuK,KAAKM,Y,+BAKT,OACI,cAACb,GAAD,aAASxE,QAA4C,YAAnC+E,KAAK5O,MAAM6O,MAAMC,OAAOzK,QAAyBuK,KAAK5O,Y,GAvBrDQ,IAAM6O,eAsCtBpB,eACXlO,aAXoB,SAACL,GACrB,MAAO,CACH2L,QAAS3L,EAAMwO,YAAY7C,QAC3BtH,WAAYrE,EAAMwO,YAAYnK,WAC9BkC,OAAQvG,EAAMwO,YAAYjI,OAC1B8I,KAAMrP,EAAME,KAAK6D,KAAKY,OACtB1E,OAAQD,EAAME,KAAKD,UAMnB,CACIqP,qBACAC,oBACAX,mBACAC,kBACAC,0BACAc,IAAYzP,KARToO,CAQ2BS,ICnFpCa,GAAU/O,IAAMgP,MAAK,kBAAM,iCAC3BC,GAAiBjP,IAAMgP,MAAK,kBAAM,uDAClCE,GAAiBlP,IAAMgP,MAAK,kBAAM,iCAE3BrP,GAAO,CAChBC,MAAO,IACPuP,QAAS,WACTC,MAAO,SACPC,QAAS,WACTC,KAAM,QACNC,MAAO,SACPC,SAAU,YACVC,KAAM,SAGGC,GAAmB1P,IAAMC,MAAK,WAEvC,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0P,OAAK,EAACC,KAAMjQ,GAAKC,MAAOU,UAAW+G,EAAa6H,MACvD,cAAC,IAAD,CAAOU,KAAI,UAAKjQ,GAAKwP,QAAV,aAA8BU,OAAQ,kBAAM,cAAC,GAAD,OACvD,cAAC,IAAD,CAAOD,KAAMjQ,GAAKyP,MAAO9O,UAAW+G,EAAa4H,MACjD,cAAC,IAAD,CAAOW,KAAMjQ,GAAK0P,QAAS/O,UAAW+G,EAAa0H,a,mBC1B/DhQ,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,6B,iTCU5G8Q,EAAa,SACPjM,GACX,OAAO9C,IAAS+B,IAAT,kBAAqCe,IACvCd,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnB6M,EAAa,SAORjM,GACV,OAAO9C,IAAS+B,IAAT,yBAAuCe,IACzCd,MAAK,SAAAC,GACF,OAAOA,EAASC,SAVnB6M,EAAa,SAaTrK,GACT,OAAO1E,IAASgP,IAAT,iBAAmD,CAACtK,OAAQA,IAC9D1C,MAAK,SAAAC,GACF,OAAOA,EAASC,SAhBnB6M,EAAa,SAmBV7M,GACR,IAAMwI,EAAW,IAAIuE,SAErB,OADAvE,EAASwE,OAAT,QAAyBhN,GAClBlC,IAASgP,IAAT,gBAA6DtE,EAAU,CAC1ErK,QAAS,CACL,eAAgB,yBAGnB2B,MAAK,SAAAC,GACF,OAAOA,EAASC,SA5BnB6M,EAAa,SA+BJjF,GACd,OAAO9J,IAASgP,IAAT,UAA4ClF,GAC9C9H,MAAK,SAAAC,GACF,OAAOA,EAASC,SCE1B5B,EAAe,CACjBkL,MAAO,CACH,CAAChL,GAAI,EAAG4B,KAAM,yBAA0B8J,aAAc,GACtD,CAAC1L,GAAI,EAAG4B,KAAM,qBAAsB8J,aAAc,GAClD,CAAC1L,GAAI,EAAG4B,KAAM,4BAA6B8J,aAAc,GACzD,CAAC1L,GAAI,EAAG4B,KAAM,kCAAmC8J,aAAc,IAEnEpC,QAAS,CACLnB,QAAS,KACToB,SAAU,CACNoF,SAAU,KACVC,QAAS,KACTC,GAAI,KACJC,QAAS,KACTC,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,SAAU,MAEd5G,gBAAgB,EAChBG,0BAA2B,KAC3BZ,SAAU,KACVvF,OAAQ,EACRiI,OAAQ,CACJ6B,MAAO,KACP5B,MAAO,OAGfxI,YAAY,EACZkC,OAAQ,IA2DC2H,GAFEsD,IApDY,WAAsG,IAArGxR,EAAoG,uDAA1EmC,EAAcO,EAA4D,uCAE5H,OAAQA,EAAOvB,MACX,IAAK,wBACD,IAAMsQ,EAAoB,CACtBpP,IAAI,IAAIO,MAAOC,UACfoB,KAAMvB,EAAOgP,SACb3D,aAAc,GAElB,OAAO,2BACA/N,GADP,IAEIqN,MAAM,GAAD,mBAAMrN,EAAMqN,OAAZ,CAAmBoE,MAEhC,IAAK,qCACD,OAAO,2BACAzR,GADP,IAEI2L,QAASjJ,EAAOiJ,UAExB,IAAK,iDACD,OAAO,2BACA3L,GADP,IAEIqE,WAAY3B,EAAO2B,aAE3B,IAAK,kCACD,OAAO,2BACArE,GADP,IAEIuG,OAAQ7D,EAAO6D,SAEvB,IAAK,6BACD,OAAO,2BACAvG,GADP,IAEIqN,MAAOrN,EAAMqN,MAAMhK,KAAI,SAAAiK,GAAC,OAAIA,EAAEjL,KAAOK,EAAOiP,OAAhB,2BAA6BrE,GAA7B,IAAgCS,aAAcT,EAAES,aAAe,IAAKT,OAGxG,IAAK,iCACD,OAAO,2BACAtN,GADP,IAEI2L,QAAQ,2BACD3L,EAAM2L,SADN,IAEHiB,OAAO,2BACA5M,EAAM2L,QAAQiB,QADf,IAEFC,MAAOnK,EAAOkP,MACdnD,MAAO/L,EAAOkP,YAK9B,QACI,OAAO5R,IAMI,SAAC0R,GAAD,MAAuB,CAACvQ,KAAM,wBAAyBuQ,cAGjEG,EAAgC,SAACxN,GAAD,MACxC,CAAClD,KAAM,iDAAkDkD,eACjDyN,EAAmB,SAACvL,GAAD,MAC3B,CAACpF,KAAM,kCAAmCoF,WAClCmI,EAAe,SAACiD,GAAD,MACvB,CAACxQ,KAAM,6BAA8BwQ,WAI7BrC,EAAmB,SAAC3K,GAC7B,OAAO,SAACI,GACJA,EAAS8M,GAA8B,IACvCjB,EAA0BjM,GACrBd,MAAK,SAAAE,GACFgB,EAfX,CAAC5D,KAAM,qCAAsCwK,QAeN5H,IAC5BgB,EAAS8M,GAA8B,OAE1C3M,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBoK,EAAkB,SAAC5K,GAC5B,OAAO,SAACI,GACJ6L,EAAyBjM,GACpBd,MAAK,SAAAE,GACFgB,EAAS+M,EAAiB/N,OAE7BmB,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhByJ,EAAiB,SAACrI,GAC3B,OAAO,SAACxB,GACJ6L,EAAwBrK,GACnB1C,MAAK,SAAAE,GACsB,IAApBA,EAAKwB,WACLR,EAAS+M,EAAiBvL,IAEtBxC,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,OAItC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhB0J,EAAgB,SAACjC,GAC1B,OAAO,SAAC7H,GACJ6L,EAAuBhE,GAClB/I,MAAK,SAAAE,GACsB,IAApBA,EAAKwB,WACLR,EAnDf,CAAC5D,KAAM,iCAAkCyQ,MAmDD7N,EAAKA,KAAK6I,OAAOC,QAEtC9I,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,OAItC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhB2J,EAAsB,SAACnD,GAChC,OAAO,SAAC5G,EAAuGgN,GAC3G,IAAMpN,EAASoN,IAAW7R,KAAK6D,KAAKY,OACpCiM,EAA6BjF,GACxB9H,MAAK,SAAAE,GACF,GAAwB,IAApBA,EAAKwB,WACLR,EAASuK,EAAiB3K,SACvB,GAAwB,IAApBZ,EAAKwB,WAAkB,CAC9B,IAAMJ,EAAQpB,EAAKxB,SAAS,GAC5BwC,EAASiN,YAAW,cAAe,CAACC,OAAQ9M,UACrCpB,EAAKxB,SAASkD,OAAS,GAC9BL,QAAQC,KAAKtB,EAAKxB,SAAS,OAGlC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,S,mBC/N7BtF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,gBAAkB,uC,mDCahMoS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBvO,MAAK,YAAkD,IAA/CwO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kGCJDO,EAAmB5R,IAAMC,MAAK,WACvC,OACI,qBAAKyH,UAAWC,IAAMkK,OAAtB,SACI,sBAAKnK,UAAWC,IAAMxF,MAAtB,UACI,qBAAKuF,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAE,UAAKC,IAAKwP,QAAV,aAA8B2C,gBAAiBnK,IAAMoK,WAAhE,uBAEJ,qBAAKrK,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAIC,IAAK2P,KAAMwC,gBAAiBnK,IAAMoK,WAA/C,oBAEJ,qBAAKrK,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAIC,IAAK0P,QAASyC,gBAAiBnK,IAAMoK,WAAlD,wBAEJ,qBAAKrK,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAIC,IAAKyP,MAAO0C,gBAAiBnK,IAAMoK,WAAhD,0BAEJ,qBAAKrK,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAIC,IAAK4P,MAAOuC,gBAAiBnK,IAAMoK,WAAhD,qBAEJ,qBAAKrK,UAAWC,IAAMnF,KAAtB,SACI,cAAC,IAAD,CAAS9C,GAAIC,IAAK6P,SAAUsC,gBAAiBnK,IAAMoK,WAAnD,gC,gCCzBL,MAA0B,iC,gBCW5BC,EAAoChS,IAAMC,MAAK,SAACT,GAGzD,OACI,yBAAQkI,UAAWC,IAAMsK,OAAzB,UACI,qBAAKvK,UAAWC,IAAMuK,KAAtB,SAA4B,qBAAKrK,IAAKqK,EAAMnK,IAAI,WAChD,sBAAKL,UAAWC,IAAMwK,SAAtB,UACI,8BACI,cAAC,IAAD,CAASzS,GAAIC,IAAK0P,QAAlB,SAA2B,cAAC,IAAD,CAAiB7F,KAAM4I,UAEtD,8BACI,cAAC,IAAD,CAAS1S,GAAG,IAAZ,SAAgB,cAAC,IAAD,CAAiB8J,KAAM6I,UAE3C,8BAEQ7S,EAAML,OAEF,sBAAKuI,UAAWC,IAAM2K,OAAtB,UACI,cAAC,IAAD,CAAS5S,GAAE,UAAKC,IAAKwP,QAAV,aAAX,SAA0C3P,EAAMyD,KAAKsP,QACrD,wBAAQjJ,QAAS9J,EAAMgT,SAAvB,uBAEF,cAAC,IAAD,CAAS9S,GAAIC,IAAKC,MAAlB,8B,gBCTxB6S,E,uKAGE,OACI,cAACT,EAAD,eAAY5D,KAAK5O,Y,GAJCQ,IAAM6O,eAgBrBtP,eAPS,SAACL,GACrB,MAAO,CACH+D,KAAM/D,EAAME,KAAK6D,KACjB9D,OAAQD,EAAME,KAAKD,UAKT,CAACqT,cADJjT,CACekT,G,OChCxBpR,EAAe,CACjBqR,kBAAkB,GAkBPC,EAbI,WAA8F,IAA7FzT,EAA4F,uDAAlEmC,EAAcO,EAAoD,uCAE5G,OAAQA,EAAOvB,MACX,IAAK,yBACD,OAAO,2BACAnB,GADP,IAEIwT,iBAAkB9Q,EAAO8Q,mBAEjC,QACI,OAAOxT,I,4CCnBN0T,EAAmB5S,IAAMC,MAAK,WACvC,OACI,wBAAQyH,UAAWC,IAAMkL,OAAzB,SACI,sBAAKnL,UAAWC,IAAMmL,WAAtB,UACI,4DAAqC,uBACrC,6FCkBVC,E,kLAGE3E,KAAK5O,MAAMwT,oB,+BAKX,OAAK5E,KAAK5O,MAAMkT,iBAKZ,sBAAKhL,UAAWC,IAAMsL,IAAtB,UACI,cAAC,EAAD,IACA,cAACrB,EAAD,IACA,qBAAKlK,UAAWC,IAAMuL,QAAtB,SACI,cAACxD,EAAA,EAAD,MAEJ,cAACkD,EAAD,OAVG,cAACpL,EAAA,EAAD,Q,GATDxH,IAAM6O,eAgCTpB,cACXlO,aARoB,SAACL,GACrB,MAAO,CACHwT,iBAAkBxT,EAAM+T,IAAIP,oBAO5B,CAACM,gBF7BsB,WAC3B,OAAO,SAAC/O,GACJ,IAAIkP,EAAclP,EAASmP,eAC3BC,QAAQC,IAAI,CAACH,IACRpQ,MAAK,WACFkB,EAPX,CAAC5D,KAAM,yBAA0BqS,kBAOK,OAE9BtO,OAAM,SAAAC,GACHC,QAAQC,KAAKF,UEqBDyK,IAFbrB,CAEyBsF,G,iBC7DlC1R,EAAe,GASNkS,EALQ,WAA0E,IAAzErU,EAAwE,uDAA/CmC,EAE7C,OAAOnC,G,oCCKLsU,EAAUC,YAAgB,CAC5B/F,YAAagD,IACbgD,YAAa/R,IACbgS,QAASJ,EACTK,UAAWhQ,IACXxE,KAAMyU,IACNZ,IAAKN,EACL7R,KAAMgT,IACNC,KAAMvN,MAKGwN,EAAQC,YAAYT,EAASU,YAAgBC,MAG1DC,OAAOJ,MAAQA,ECnBfK,IAASxE,OACL,cAAC,IAAMyE,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZO,SAASC,eAAe,SAM5BpD,K,+JClBMqD,EAA2CzU,IAAMC,MAAK,YAAmD,EAAjDyU,MAAkD,IAAD,IAA1CC,KAAOC,EAAmC,EAAnCA,QAASvQ,EAA0B,EAA1BA,MAAW5E,EAAe,gCAC3G,OACI,qCACI,qBAAKiI,UAAS,UAAKC,IAAMkN,UAAX,YAAwBD,GAAWvQ,EAAQsD,IAAMtD,MAAQ,IAAvE,SACK5E,EAAUqV,WAEf,qBAAKpN,UAAWC,IAAMtD,MAAtB,SACKuQ,GAAWvQ,GAAS,+BAAOA,YAM/B9D,EAAwCP,IAAMC,MAAK,SAACT,GAAW,IACjEkV,EAAuClV,EAAvCkV,MAA0BjV,GAAaD,EAAhCmV,KAAgCnV,EAA1BsV,SADmD,YACzBtV,EADyB,8BAEvE,OAAO,cAACiV,EAAD,2BAAiBjV,GAAjB,aAAwB,oDAAckV,GAAWjV,UAG/CgL,EAAqCzK,IAAMC,MAAK,SAACT,GAAW,IAC9DkV,EAAuClV,EAAvCkV,MAA0BjV,GAAaD,EAAhCmV,KAAgCnV,EAA1BsV,SADgD,YACtBtV,EADsB,8BAEpE,OAAO,cAACiV,EAAD,2BAAiBjV,GAAjB,aAAwB,iDAAWkV,GAAWjV,W,iKChB5CsV,EAAU,WAEf,OAAOhU,IAAS+B,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnB8R,EAAU,SAObC,EAAsBC,EAAyBC,GAAqD,IAAhCC,EAA+B,uDAAN,KAC/F,OAAOpU,IAASoC,KAAT,aAAoE,CACvE6R,QACAC,WACAC,aACAC,YAECpS,MAAK,SAAAC,GACF,OAAOA,EAASC,SAfnB8R,EAAU,WAmBf,OAAOhU,IAASqC,OAAT,cACFL,MAAK,SAAAC,GACF,OAAOA,EAASC,SC3BnBmS,EAAa,WAElB,OAAOrU,IAAS+B,IAAT,4BACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SCe1B5B,EAAe,CACjB4B,KAAM,CACFY,OAAQ,KACR0O,MAAO,KACPyC,MAAO,MAEX7V,QAAQ,EACRgW,QAAS,MAgCAE,GAJExB,IAvBK,WAA+F,IAA9F3U,EAA6F,uDAAnEmC,EAAcO,EAAqD,uCAE9G,OAAQA,EAAOvB,MACX,IAAK,qBACD,OAAO,2BACAnB,GADP,IAEI+D,KAAMrB,EAAOqB,OAErB,IAAK,mBACD,OAAO,2BACA/D,GADP,IAEIC,OAAQyC,EAAOzC,SAEvB,IAAK,mBACD,OAAO,2BACAD,GADP,IAEIiW,QAASvT,EAAOuT,UAExB,QACI,OAAOjW,IAQM,SAACC,GAAD,MAAsB,CAACkB,KAAM,mBAAoBlB,YAG7DiU,EAAS,WAClB,OAAO,SAACnP,GACJ,OAAO8Q,IACFhS,MAAK,SAAAE,GACF,GAAwB,IAApBA,EAAKwB,WAAkB,CAAC,IAAD,EACExB,EAAKA,KAAzB1B,EADkB,EAClBA,GAAIgR,EADc,EACdA,MAAOyC,EADO,EACPA,MAChB/Q,EAXO,SAACJ,EAAgB0O,EAAeyC,GAAhC,MACtB,CAAC3U,KAAM,qBAAsB4C,KAAM,CAACY,SAAQ0O,QAAOyC,UAU3BM,CAAY/T,EAAIgR,EAAOyC,IAChC/Q,EAASoR,GAAU,SAEfpS,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,OAItC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBkR,EAAU,SAACP,EAAsBC,EAAyBC,EAAqBC,GACxF,OAAO,SAAClR,GACJ8Q,EAAcC,EAAOC,EAAUC,EAAYC,GACtCpS,MAAK,SAAAE,GACE,GAAwB,IAApBA,EAAKwB,WACLR,EAASmP,UACN,GAAwB,KAApBnQ,EAAKwB,WACZR,EAASuR,UACN,GAAwB,IAApBvS,EAAKwB,WAAkB,CAC9B,IAAMJ,EAAQpB,EAAKxB,SAAS,GAC5BwC,EAASiN,YAAW,QAAS,CAACC,OAAQ9M,UAC/BpB,EAAKxB,SAASkD,OAAS,GAC9BL,QAAQC,KAAKtB,EAAKxB,SAAS,OAItC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBmO,EAAW,WACpB,OAAO,SAACvO,GACJ8Q,IACKhS,MAAK,SAAAE,GACsB,IAApBA,EAAKwB,YACLR,EAASsR,EAAQ,KAAM,MAAM,EAAO,OACpCtR,EAASoR,GAAU,KAEfpS,EAAKxB,SAASkD,OAAS,GACvBL,QAAQC,KAAKtB,EAAKxB,SAAS,OAItC2C,OAAM,SAAAC,GACHC,QAAQC,KAAKF,QAKhBmR,EAAe,WACxB,OAAO,SAACvR,GACJmR,IACKrS,MAAK,SAAAC,GACFiB,EAnEuC,CAAC5D,KAAM,mBAAoB8U,QAmE9CnS,EAASC,KAAKwS,Y,2CChInC,MAA0B,6C,OCGnCjO,E,OAAsBxH,EAAMC,MAAK,WACnC,OACI,mCACI,qBAAK4H,IAAK6N,EAAW3N,IAAI,mBAKtBP,O,gCCXf,oEAAO,IAAM/G,EAAW,SAACsI,GACrB,OAAIA,OACA,EAEO,qBAIFjJ,EAAY,SAACD,GACtB,OAAO,SAACkJ,GACJ,GAAIA,GAASA,EAAMpE,OAAS9E,EACxB,MAAM,qBAAN,OAA4BA,EAA5B,e,mBCVZd,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,UAAY,+BAA+B,WAAa,gCAAgC,KAAO,4B,mBCArMD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,WAAa,gCAAgC,OAAS,4BAA4B,cAAgB,mCAAmC,cAAgB,qC,mBCA1ND,EAAOC,QAAU,CAAC,KAAO,mBAAmB,qBAAuB,mCAAmC,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,qB,mBCA/KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,yB,gCCD5G,QAA0B,yC,mBCCzCD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,UAAY,iC,mBCA5GD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,MAAQ,0B","file":"static/js/main.a46f27c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pH3w\",\"container\":\"Profile_container__2uepZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2teHa\",\"content\":\"App_content__134sW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Jxae\",\"footerText\":\"Footer_footerText__z6qKY\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {PATH} from \"../components/Routes/Routes\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validator\";\r\nimport {Textarea} from \"./CustomField\";\r\n\r\nexport type CommonFormPropsType = {\r\n    newText: string\r\n}\r\n\r\ntype FormType = {\r\n    disable?: boolean\r\n}\r\n\r\nconst max = maxLength(100)\r\n\r\nconst Form: React.FC<InjectedFormProps<CommonFormPropsType, FormType> & FormType> = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newText\" type=\"text\" component={Textarea} validate={[required, max]}/>\r\n            </div>\r\n            <div>\r\n                <button disabled={props.disable} type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n})\r\nexport const CommonForm = reduxForm<CommonFormPropsType, FormType>({\r\n    form: \"formForSendNewText\"\r\n})(Form)","export default __webpack_public_path__ + \"static/media/city-Z.7e6df5de.png\";","import axios from \"axios\";\r\n\r\nexport type CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"daffbeb3-8fec-4c34-9d8d-6fcb41a16549\"\r\n    }\r\n})","export type DialogsPageReducerActionsType = ReturnType<typeof sendMessage>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n};\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"King\",\r\n            img: \"http://pm1.narvii.com/7066/ae35e5668d78c2a362c4b594a3aa4687e77e1062r1-1200-1207v2_uhq.jpg\"\r\n        },\r\n        {id: 2, name: \"Puri-Puri Prisoner\", img: \"https://gamemag.ru/images/cache/News/News143316/c7a2dbcde1-3_350x250.jpg\"},\r\n        {\r\n            id: 3,\r\n            name: \"Tatsumaki\",\r\n            img: \"https://pm1.narvii.com/6890/6c7770044db1962ef51f199fa113165478d1f69er1-1321-1080v2_hq.jpg\"\r\n        },\r\n        {id: 4, name: \"Fubuki\", img: \"https://shikimori.one/system/characters/original/81931.jpg\"},\r\n        {id: 5, name: \"Watchdog Man\", img: \"https://slovnet.ru/wp-content/uploads/2019/05/8-32.jpg\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello my friend!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Will you go to the cinema with us?\"},\r\n        {id: 4, message: \"Can i help you?\"},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsPageReducer = (state: InitialStateType = initialState, action: DialogsPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"DIALOGS-PAGE/SEND-MESSAGE\":\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newText,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsPageReducer;\r\n\r\nexport const sendMessage = (newText: string) => ({type: \"DIALOGS-PAGE/SEND-MESSAGE\", newText}) as const","export const objectHelpers = (items: any, itemId: any, objectPropsName: any, newObjectsProps: any) => {\r\n    return items.map((item: any) => item[objectPropsName] === itemId ? {...item, ...newObjectsProps} : item)\r\n}","import {instance} from \"./api\";\r\nimport {UserType} from \"../redux/usersPageReducer\";\r\n\r\ntype UserResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string | null = \"\", friend: boolean | null) {\r\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {CommonResponseType, instance} from \"./api\";\r\n\r\nexport const followAPI = {\r\n    follow(id: number) {\r\n        return instance.post<CommonResponseType>(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${id}`,)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {objectHelpers} from \"../utils/objectHelpers\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {followAPI} from \"../api/follow-api\";\r\n\r\nexport type UsersPageReducerActionsType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setIsFetchingUsersComponent>\r\n    | ReturnType<typeof setFollowingProgress>\r\n    | ReturnType<typeof setSearchFilter>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, UsersPageReducerActionsType>\r\n\r\ntype LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\ntype PhotoType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotoType\r\n    status: null | string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    disableButton: false,\r\n    followingInProgress: [] as Array<number>,\r\n    filter: {\r\n        term: null as string | null,\r\n        friend: null as boolean | null\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersPageReducer = (state: InitialStateType = initialState, action: UsersPageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"USERS-PAGE/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case \"USERS-PAGE/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: objectHelpers(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"USERS-PAGE/SET-USERS\":\r\n            return {...state, users: action.users}\r\n        case \"USERS-PAGE/SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"USERS-PAGE/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"USERS-PAGE/SET-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.disableButton\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        case \"USERS-PAGE/SET-SEARCH-FILTER\":\r\n            return {\r\n                ...state,\r\n                filter: {\r\n                    ...state.filter,\r\n                    term: action.term,\r\n                    friend: action.friend\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;\r\n\r\nexport const follow = (userId: number) => ({type: \"USERS-PAGE/FOLLOW\", userId} as const)\r\nexport const unFollow = (userId: number) => ({type: \"USERS-PAGE/UNFOLLOW\", userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: \"USERS-PAGE/SET-USERS\", users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: \"USERS-PAGE/SET-CURRENT-PAGE\", currentPage} as const)\r\nexport const setTotalCount = (totalCount: number) => ({type: \"USERS-PAGE/SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const setIsFetchingUsersComponent = (isFetching: boolean) =>\r\n    ({type: \"USERS-PAGE/SET-IS-FETCHING-USERS-COMPONENT\", isFetching} as const)\r\nexport const setFollowingProgress = (disableButton: boolean, userId: number) =>\r\n    ({type: \"USERS-PAGE/SET-FOLLOWING-PROGRESS\", disableButton, userId} as const)\r\nexport const setSearchFilter = (term: string | null, friend: boolean | null) =>\r\n    ({type: \"USERS-PAGE/SET-SEARCH-FILTER\", term, friend} as const)\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number, term: string | null , friend: null | boolean): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setIsFetchingUsersComponent(true))\r\n        usersAPI.getUsers(currentPage, pageSize, term, friend)\r\n            .then(data => {\r\n                dispatch(setIsFetchingUsersComponent(false))\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount))\r\n                dispatch(setSearchFilter(term, friend))\r\n                dispatch(setCurrentPage(currentPage))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, UsersPageReducerActionsType>) => {\r\n        dispatch(setFollowingProgress(true, userId))\r\n        followAPI.unFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(userId))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n                dispatch(setFollowingProgress(false, userId))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","export type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = \"pending\" | \"ready\" | \"error\"\r\ntype MessagesSubscribeType = (message: Array<ChatMessageType>) => void\r\ntype StatusSubscribeType = (status: StatusType) => void\r\ntype EventNameType = \"messages-received\" | \"status-changed\"\r\n\r\nlet subscribers = {\r\n    \"messages-received\": [] as Array<MessagesSubscribeType>,\r\n    \"status-changed\": [] as Array<StatusSubscribeType>\r\n} as { [key in EventNameType]: Array<MessagesSubscribeType & StatusSubscribeType> }\r\n\r\nlet ws: WebSocket | null = null\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus(\"pending\")\r\n    setTimeout(openWebSocket, 3000)\r\n}\r\n\r\nconst cleanUpListener = () => {\r\n    ws?.removeEventListener(\"close\", closeHandler)\r\n    ws?.removeEventListener(\"message\", messageHandler)\r\n    ws?.removeEventListener(\"open\", openHandler)\r\n    ws?.removeEventListener(\"error\", errorHandler)\r\n}\r\n\r\nconst notifySubscribersAboutStatus = (status: StatusType) => subscribers[\"status-changed\"].forEach(s => s(status))\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subscribers[\"messages-received\"].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => notifySubscribersAboutStatus(\"ready\")\r\nconst errorHandler = () => notifySubscribersAboutStatus(\"error\")\r\n\r\nconst openWebSocket = () => {\r\n    cleanUpListener()\r\n    ws?.close()\r\n    ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\r\n    notifySubscribersAboutStatus(\"pending\")\r\n    ws.addEventListener(\"close\", closeHandler)\r\n    ws.addEventListener(\"message\", messageHandler)\r\n    ws.addEventListener(\"open\", openHandler)\r\n    ws.addEventListener(\"error\", errorHandler)\r\n}\r\n\r\nexport const chatApi = {\r\n    start() {\r\n        openWebSocket()\r\n    },\r\n    stop() {\r\n        cleanUpListener()\r\n        ws?.close()\r\n        subscribers[\"messages-received\"] = []\r\n        subscribers[\"status-changed\"] = []\r\n    },\r\n    subscribe(eventName: EventNameType, callback: MessagesSubscribeType | StatusSubscribeType) {\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    unsubscribe(eventName: EventNameType, callback: MessagesSubscribeType | StatusSubscribeType) {\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}","import {chatApi, ChatMessageType, StatusType} from \"../api/chat-api\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type ChatReducerActionsType = ReturnType<typeof getMessages> | ReturnType<typeof changeStatus>\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ChatReducerActionsType>\r\n\r\n\r\nconst initialState = {\r\n    messages: [] as Array<ChatMessageType>,\r\n    status: \"pending\" as StatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const chatReducer = (state: InitialStateType = initialState, action: ChatReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CHAT/GET-MESSAGES\":\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.messages].filter((m, ind, arr) => ind >= arr.length - 100)\r\n            }\r\n        case \"CHAT/CHANGE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getMessages = (messages: Array<ChatMessageType>) =>\r\n    ({type: \"CHAT/GET-MESSAGES\", messages} as const)\r\nexport const changeStatus = (status: StatusType) =>\r\n    ({type: \"CHAT/CHANGE-STATUS\", status} as const)\r\n\r\nlet _newMessageHandler: ((messages: Array<ChatMessageType>) => void) | null = null\r\nlet newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(getMessages(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusHandler: ((status: StatusType) => void) | null = null\r\nlet statusHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusHandler === null) {\r\n        _statusHandler = (status) => {\r\n            dispatch(changeStatus(status))\r\n        }\r\n    }\r\n    return _statusHandler\r\n}\r\n\r\nexport const startMessagesListeningTC = (): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, ChatReducerActionsType>) => {\r\n        chatApi.start()\r\n        chatApi.subscribe(\"messages-received\", newMessageHandlerCreator(dispatch))\r\n        chatApi.subscribe(\"status-changed\", statusHandlerCreator(dispatch))\r\n    }\r\nexport const stopMessagesListeningTC = (): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, ChatReducerActionsType>) => {\r\n        chatApi.stop()\r\n        chatApi.unsubscribe(\"messages-received\", newMessageHandlerCreator(dispatch))\r\n        chatApi.unsubscribe(\"status-changed\", statusHandlerCreator(dispatch))\r\n    }\r\nexport const sendMessageChatTC = (message: string): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, ChatReducerActionsType>) => {\r\n        debugger\r\n        chatApi.sendMessage(message)\r\n    }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileImages_profileAvatar__2thf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__34pJT\"};","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (restProps: T) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...restProps}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/city-D.7ac10eeb.png\";","export default __webpack_public_path__ + \"static/media/city-A.8a136fc2.png\";","import React from \"react\";\r\nimport style from \"./ProfileImages.module.css\";\r\nimport photo1 from \"./../../../assets/images/avatars/city-D.png\";\r\nimport photo2 from \"./../../../assets/images/avatars/city-A.png\";\r\nimport photo3 from \"./../../../assets/images/avatars/city-Z.png\";\r\n\r\n\r\nexport const ProfileImages: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.profileAvatar}>\r\n            <div>\r\n                <img src={photo1} alt=\"city-D\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo2} alt=\"city-A\"/>\r\n            </div>\r\n            <div>\r\n                <img src={photo3} alt=\"city-Z\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport style from \"./Contacts.module.css\"\r\n\r\ntype ContactsPropsType = {\r\n    contactsKey: string | null\r\n    contactsValue: string | null\r\n}\r\nexport const Contacts: React.FC<ContactsPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.contactsValue && props.contactsValue ?\r\n                    <>\r\n                        <span>{props.contactsKey}</span>\r\n                        <li className={style.li}>{props.contactsValue}</li>\r\n                    </> : null}\r\n            </ul>\r\n        </>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [editableMode, setEditableMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    const activateEditableMode = () => {\r\n        setEditableMode(true)\r\n    }\r\n\r\n    const deactivateEditableMode = () => {\r\n        setEditableMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editableMode\r\n                ? <span onDoubleClick={activateEditableMode}>Status: {props.status}</span>\r\n                : <input onBlur={deactivateEditableMode}\r\n                         autoFocus\r\n                         value={status}\r\n                         onChange={onStatusChange}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPen} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    isOwner: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    onActivateEditMode: () => void\r\n}\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <h3 className={style.name}>{props.fullName} {props.isOwner ?\r\n                <button onClick={props.onActivateEditMode}><FontAwesomeIcon icon={faPen}/></button> : \"\"} </h3>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <span className={style.aboutMe}><span\r\n                className={style.descriptionInfo}>About Me:</span> {props.aboutMe}</span>\r\n            <div className={style.work}>\r\n                        <span className={props.lookingForAJob ? style.open : style.busy}>\r\n                            <span\r\n                                className={style.descriptionInfo}>Looking a job:</span> {props.lookingForAJob ? \" Open to work\" : \" Busy\"}\r\n                        </span>\r\n                {props.lookingForAJob && props.lookingForAJobDescription &&\r\n                <span><span className={style.descriptionInfo}>Vacancy:</span> {props.lookingForAJobDescription}</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./ProfileForm.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Input, Textarea} from \"../../common/Form/CustomField\";\r\nimport {required} from \"../../../utils/validator\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\n\r\ntype FormType = {\r\n    profile: ProfileType\r\n    deactivateEditMode: () => void\r\n}\r\n\r\nexport type ProfileFormPropsType = {\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n}\r\n\r\nconst Form: React.FC<InjectedFormProps<ProfileFormPropsType, FormType> & FormType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.formContainer}>\r\n            <div className={style.formButton}>\r\n                <button type=\"submit\"><FontAwesomeIcon icon={faCheck}/></button>\r\n                <button onClick={props.deactivateEditMode} className={style.cancel}>x</button>\r\n            </div>\r\n            <div>\r\n                <span>Full Name: </span><Field name=\"fullName\" type=\"text\" placeholder=\"Full Name\" component={Input}\r\n                                               validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <span>About Me: </span><Field name=\"aboutMe\" type=\"text\" component={Textarea} validate={[required]}/>\r\n            </div>\r\n            <div className={style.checkboxField}>\r\n                <span>Looking for a job: </span>\r\n                <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input}/>\r\n            </div>\r\n            <div>\r\n                <span>A Job Description: </span>\r\n                <Field name=\"lookingForAJobDescription\" type=\"text\" component={Textarea} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                <span>Contacts:</span>\r\n                {(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key) => {\r\n                    return <div key={key} className={style.contactFields}>\r\n                        <span>{key}: </span><Field name={\"contacts.\" + key} type=\"text\" component={Input} validate={[]}/>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport const ProfileForm = (reduxForm<ProfileFormPropsType, FormType>({form: \"profileInfo\"})(Form))","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\nimport {ContactsType, ProfileType} from \"../../../redux/profilePageReducer\";\r\nimport userAvatar from \"../../../assets/images/avatars/usersAvatar.jpg\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Contacts} from \"./Contacts\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileForm, ProfileFormPropsType} from \"./ProfileForm\";\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    uploadPhoto: (photos: Blob) => void\r\n    isOwner: boolean\r\n    changeProfileInfo: (profile: ProfileFormPropsType) => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo((props) => {\r\n\r\n\r\n        const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n        const onUploadPhoto = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n            if (e.target.files) {\r\n                props.uploadPhoto(e.target.files[0])\r\n            }\r\n        }, [props.uploadPhoto])\r\n\r\n        const onActivateEditMode = useCallback(() => {\r\n            setEditMode(true)\r\n        }, [])\r\n        const deactivateEditMode = useCallback(() => {\r\n            setEditMode(false)\r\n        }, [])\r\n\r\n        const onSubmit = useCallback((formData: ProfileFormPropsType) => {\r\n            props.changeProfileInfo(formData)\r\n            setEditMode(false)\r\n        }, [props])\r\n\r\n        return (\r\n            <div className={style.profileData}>\r\n                {props.isFetching\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <div className={style.avatar}>\r\n                            <img className={style.avatarImg}\r\n                                 src={props.profile.photos.large ? props.profile.photos.large : userAvatar}\r\n                                 alt=\"my_avatar\"/>\r\n                            {props.isOwner\r\n                                ? <label>\r\n                                    <FontAwesomeIcon icon={faFileImage} className={style.buttonLoad}/>\r\n                                    <input type=\"file\" onChange={onUploadPhoto}/>\r\n                                </label>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={style.data}>\r\n                            {editMode\r\n                                ? <ProfileForm onSubmit={onSubmit} initialValues={props.profile}\r\n                                               profile={props.profile}\r\n                                               deactivateEditMode={deactivateEditMode}/>\r\n                                : < ProfileInfo fullName={props.profile.fullName}\r\n                                                aboutMe={props.profile.aboutMe}\r\n                                                lookingForAJob={props.profile.lookingForAJob}\r\n                                                lookingForAJobDescription={props.profile.lookingForAJobDescription}\r\n                                                isOwner={props.isOwner}\r\n                                                status={props.status}\r\n                                                updateStatus={props.updateStatus}\r\n                                                onActivateEditMode={onActivateEditMode}\r\n                                />\r\n                            }\r\n                            {\r\n                                editMode ? null\r\n                                    : <div>\r\n                                        <b>Contacts: </b>{(Object.keys(props.profile.contacts) as Array<keyof ContactsType>).map((key, index) => {\r\n                                        return <Contacts key={index} contactsKey={key}\r\n                                                         contactsValue={props.profile.contacts[key]}/>\r\n                                    })}\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profilePageReducer\";\r\nimport myAvatar from \"../../../../assets/images/avatars/usersAvatar.jpg\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostType>\r\n    increase: (id: number) => void\r\n    smallImage: string | null\r\n}\r\n\r\nexport const Post = React.memo((props: PostPropsType) => {\r\n\r\n    const increase = (id: number) => {\r\n        props.increase(id)\r\n    }\r\n\r\n    const postsElement =\r\n        <>\r\n            {\r\n                props.posts.map(p => <div className={style.postMessageContainer} key={p.id}>\r\n                    <div className={style.postMessage}>\r\n                        <img src={props.smallImage ? props.smallImage : myAvatar}\r\n                             alt=\"my_avatar\"/>\r\n                        <div className={style.text}> {p.post} </div>\r\n                    </div>\r\n                    <div className={style.like}\r\n                         onClick={() => increase(p.id)}>\r\n                        <FontAwesomeIcon icon={faHeart}/> {p.likesCounter}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n\r\n    return (\r\n        <div className={style.post}>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {CommonForm, CommonFormPropsType} from \"../../common/Form/CommonForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addPost = useCallback((text: CommonFormPropsType) => {\r\n        props.addPost(text.newText)\r\n        dispatch(reset(\"formForSendNewText\"))\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <div className={style.container}>\r\n                <CommonForm onSubmit={addPost}/>\r\n                <Post posts={props.posts}\r\n                      increase={props.increase}\r\n                      smallImage={props.smallImage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, increaseLike, PostType, ProfilePageReducerActionsType} from \"../../../redux/profilePageReducer\";\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    smallImage: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n    increase: (id: number) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        smallImage: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ProfilePageReducerActionsType>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPost(text))\r\n        },\r\n        increase: (id: number) => {\r\n            dispatch(increaseLike(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        mapDispatchToProps))(MyPosts)","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {ProfileImages} from \"./ProfileImages/ProfileImages\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((props) => {\r\n\r\n\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileImages/>\r\n            <div className={style.container}>\r\n                <ProfileData\r\n                    isFetching={props.isFetching}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatusTC}\r\n                    uploadPhoto={props.uploadPhotoTC}\r\n                    changeProfileInfo={props.changeProfileInfoTC}\r\n                    isOwner={props.isOwner ? props.isOwner : false}\r\n                />\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeProfileInfoTC,\r\n    getUserProfileTC,\r\n    getUserStatusTC,\r\n    ProfileType,\r\n    updateStatusTC,\r\n    uploadPhotoTC\r\n} from \"../../redux/profilePageReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {ProfileFormPropsType} from \"./ProfileData/ProfileForm\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    myId: number\r\n    isOwner?: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getUserStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    uploadPhotoTC: (photos: Blob) => void\r\n    changeProfileInfoTC: (profile: ProfileFormPropsType) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    refresh() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n        this.props.getUserStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile isOwner={this.props.match.params.userId === \":userId\"}{...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.data.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n        {\r\n            getUserProfileTC,\r\n            getUserStatusTC,\r\n            updateStatusTC,\r\n            uploadPhotoTC,\r\n            changeProfileInfoTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {withSuspense} from \"../../hoc/withSuspense\";\r\nimport ProfileContainer from \"../Profile/ProfileContainer\";\r\n\r\nconst Dialogs = React.lazy(() => import(\"../Dialogs/Dialogs\"))\r\nconst UsersContainer = React.lazy(() => import(\"../Users/UsersContainer\"))\r\nconst LoginContainer = React.lazy(() => import(\"../Login/LoginContainer\"))\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    DIALOGS: \"/dialogs\",\r\n    NEWS: \"/news\",\r\n    MUSIC: \"/music\",\r\n    SETTINGS: \"/settings\",\r\n    CHAT: \"/chat\"\r\n}\r\n\r\nexport const Routes: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={PATH.LOGIN} component={withSuspense(LoginContainer)}/>\r\n            <Route path={`${PATH.PROFILE}/:userId?`} render={() => <ProfileContainer/>}/>\r\n            <Route path={PATH.USERS} component={withSuspense(UsersContainer)}/>\r\n            <Route path={PATH.DIALOGS} component={withSuspense(Dialogs)}/>\r\n        </Switch>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__hXiam\",\"items\":\"Navbar_items__1SJqj\",\"item\":\"Navbar_item__1yYDQ\",\"activeLink\":\"Navbar_activeLink__19jiD\"};","import {ProfileType} from \"../redux/profilePageReducer\";\r\nimport {ProfileFormPropsType} from \"../components/Profile/ProfileData/ProfileForm\";\r\nimport {CommonResponseType, instance} from \"./api\";\r\n\r\nexport type PhotoType = {\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    uploadPhoto(data: Blob) {\r\n        const formData = new FormData()\r\n        formData.append(`image`, data)\r\n        return instance.put<CommonResponseType<PhotoType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateProfileInfo(profile: ProfileFormPropsType) {\r\n        return instance.put<CommonResponseType>(`profile`, profile)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ProfileFormPropsType} from \"../components/Profile/ProfileData/ProfileForm\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\nexport type ProfilePageReducerActionsType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfileData>\r\n    | ReturnType<typeof setIsFetchingProfileComponent>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof increaseLike>\r\n    | ReturnType<typeof setProfileImage>\r\n\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ProfilePageReducerActionsType>\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCounter: number\r\n};\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: \"Hello my dear friends.\", likesCounter: 2},\r\n        {id: 2, post: \"My name is Andrew.\", likesCounter: 5},\r\n        {id: 3, post: \"This is my first project.\", likesCounter: 3},\r\n        {id: 4, post: \"I am going to change my future.\", likesCounter: 7},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: null,\r\n        fullName: null as string | null,\r\n        userId: 1,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    } as ProfileType,\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfilePageReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"PROFILE-PAGE/ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.postText,\r\n                likesCounter: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE-PAGE/SET-USER-PROFILE-DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"PROFILE-PAGE/SET-PROFILE-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"PROFILE-PAGE/INCREASE-LIKE\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => p.id === action.postId ? {...p, likesCounter: p.likesCounter + 1} : p)\r\n            }\r\n        }\r\n        case \"PROFILE-PAGE/SET-PROFILE-IMAGE\": {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: {\r\n                        ...state.profile.photos,\r\n                        large: action.photo,\r\n                        small: action.photo\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const addPost = (postText: string) => ({type: \"PROFILE-PAGE/ADD-POST\", postText} as const)\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: \"PROFILE-PAGE/SET-USER-PROFILE-DATA\", profile} as const)\r\nexport const setIsFetchingProfileComponent = (isFetching: boolean) =>\r\n    ({type: \"PROFILE-PAGE/SET-IS-FETCHING-PROFILE-COMPONENT\", isFetching} as const)\r\nexport const setProfileStatus = (status: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-STATUS\", status} as const)\r\nexport const increaseLike = (postId: number) =>\r\n    ({type: \"PROFILE-PAGE/INCREASE-LIKE\", postId} as const)\r\nexport const setProfileImage = (photo: string) =>\r\n    ({type: \"PROFILE-PAGE/SET-PROFILE-IMAGE\", photo} as const)\r\n\r\nexport const getUserProfileTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        dispatch(setIsFetchingProfileComponent(true))\r\n        profileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfileData(data));\r\n                dispatch(setIsFetchingProfileComponent(false))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const uploadPhotoTC = (photos: Blob): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType>) => {\r\n        profileAPI.uploadPhoto(photos)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setProfileImage(data.data.photos.large))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const changeProfileInfoTC = (profile: ProfileFormPropsType): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, ProfilePageReducerActionsType | StopSubmitActionsType>, getState: () => AppStateType) => {\r\n        const userId = getState().auth.data.userId\r\n        profileAPI.updateProfileInfo(profile)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(getUserProfileTC(userId))\r\n                } else if (data.resultCode === 1) {\r\n                    const error = data.messages[0]\r\n                    dispatch(stopSubmit(\"profileInfo\", {_error: error}))\r\n                } else if (data.messages.length > 0) {\r\n                    console.warn(data.messages[0])\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProfileInfo_name__2lyxE\",\"aboutMe\":\"ProfileInfo_aboutMe__2eb73\",\"work\":\"ProfileInfo_work__1n8of\",\"open\":\"ProfileInfo_open__20fJ1\",\"busy\":\"ProfileInfo_busy__268D-\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__1nUvi\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Navbar.module.css\";\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\nexport const Navbar: React.FC = React.memo(() => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.items}>\r\n                <div className={style.item}>\r\n                    <NavLink to={`${PATH.PROFILE}/:userId?`} activeClassName={style.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={style.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={style.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.USERS} activeClassName={style.activeLink}>Find users</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={style.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={style.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.54c26e84.png\";","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\r\nimport {PATH} from \"../Routes/Routes\";\r\n\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <div className={style.headUser}>\r\n                <div>\r\n                    <NavLink to={PATH.DIALOGS}><FontAwesomeIcon icon={faEnvelope}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"#\"><FontAwesomeIcon icon={faBell}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.isAuth\r\n                            ?\r\n                            <div className={style.logOut}>\r\n                                <NavLink to={`${PATH.PROFILE}/:userId?`}>{props.data.login}</NavLink>\r\n                                <button onClick={props.logOutTC}>logout</button>\r\n                            </div>\r\n                            : <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataType, logOutTC} from \"../../redux/authReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logOutTC: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n    logOutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.PureComponent<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>\r\n(mapStateToProps, {logOutTC})(HeaderContainer)\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authTC} from \"./authReducer\";\r\n\r\ntype AppReducerActionsType = ReturnType<typeof initializeSuccess>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AppReducerActionsType>\r\n\r\nconst initialState = {\r\n    isInitialization: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"APP/INITIALIZE-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isInitialization: action.isInitialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport const initializeSuccess = (isInitialization: boolean) =>\r\n    ({type: \"APP/INITIALIZE-SUCCESS\", isInitialization} as const)\r\n\r\nexport const appInitializeTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerActionsType>) => {\r\n        let authPromise = dispatch(authTC())\r\n        Promise.all([authPromise])\r\n            .then(() => {\r\n                dispatch(initializeSuccess(true))\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <div className={style.footerText}>\r\n                <span>This is my firs project.</span><br/>\r\n                <span>Social network was developed by Andrew Pashkevich</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n})\r\n\r\n","import React, {ComponentType} from \"react\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {appInitializeTC} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {Routes} from \"./components/Routes/Routes\";\nimport style from \"./App.module.css\"\nimport {Footer} from \"./components/Footer/Footer\";\n\n\ntype MapStatePropsType = {\n    isInitialization: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitializeTC: () => void\n}\n\ntype AppPropsType = {\n    appInitializeTC: () => void\n    isInitialization: boolean\n}\n\nclass App extends React.PureComponent<AppPropsType> {\n\n    componentDidMount() {\n        this.props.appInitializeTC()\n    }\n\n    render() {\n\n        if (!this.props.isInitialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={style.app}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={style.content}>\n                    <Routes/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isInitialization: state.app.isInitialization,\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\n        {appInitializeTC}), withRouter)(App)\n\n\n\n","const initialState = {}\r\n\r\ntype InitialStateBar = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateBar = initialState, action: any): InitialStateBar => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\nimport {chatReducer} from \"./chatReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n    chat: chatReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport style from \"./CustomField.module.css\"\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = React.memo(({input, meta: {touched, error}, ...restProps}) => {\r\n    return (\r\n        <>\r\n            <div className={`${style.fieldForm} ${touched && error ? style.error : \"\"}`}>\r\n                {restProps.children}\r\n            </div>\r\n            <div className={style.error}>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n})\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n})","import {CommonResponseType, instance} from \"./api\";\r\n\r\ntype AuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<AuthResponseType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logIn(email: string | null, password: string | null, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<CommonResponseType<{ userId: number }>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}","import {CommonResponseType, instance} from \"./api\";\r\n\r\nexport const captchaAPI = {\r\n    getCaptcha() {\r\n        return instance.get<CommonResponseType<{ url: string }>>(`security/get-captcha-url`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {captchaAPI} from \"../api/captcha-api\";\r\n\r\ntype AuthReducerActionsType =\r\n    ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setIsAuth>\r\n    | ReturnType<typeof setCaptcha>\r\n\r\ntype StopSubmitActionsType = ReturnType<typeof stopSubmit>\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, AuthReducerActionsType>\r\n\r\nexport type DataType = {\r\n    userId: number\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nconst initialState = {\r\n    data: {\r\n        userId: null as number | null,\r\n        login: null,\r\n        email: null\r\n    } as DataType,\r\n    isAuth: false,\r\n    captcha: null as string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n            }\r\n        case \"AUTH/SET-IS-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        case \"AUTH/SET-CAPTCHA\":\r\n            return {\r\n                ...state,\r\n                captcha: action.captcha\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setUserData = (userId: number, login: string, email: string) =>\r\n    ({type: \"AUTH/SET-USER-DATA\", data: {userId, login, email}} as const)\r\nexport const setIsAuth = (isAuth: boolean) => ({type: \"AUTH/SET-IS-AUTH\", isAuth} as const)\r\nexport const setCaptcha = (captcha: null | string) => ({type: \"AUTH/SET-CAPTCHA\", captcha} as const)\r\n\r\nexport const authTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setUserData(id, login, email));\r\n                    dispatch(setIsAuth(true))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logInTC = (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType | StopSubmitActionsType>) => {\r\n        authAPI.logIn(email, password, rememberMe, captcha)\r\n            .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(authTC())\r\n                    } else if (data.resultCode === 10) {\r\n                        dispatch(getCaptchaTC())\r\n                    } else if (data.resultCode === 1) {\r\n                        const error = data.messages[0]\r\n                        dispatch(stopSubmit(\"login\", {_error: error}))\r\n                    } else if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOutTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        authAPI.logOut()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(logInTC(null, null, false, null))\r\n                    dispatch(setIsAuth(false))\r\n                } else {\r\n                    if (data.messages.length > 0) {\r\n                        console.warn(data.messages[0])\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AuthReducerActionsType>) => {\r\n        captchaAPI.getCaptcha()\r\n            .then(response => {\r\n                dispatch(setCaptcha(response.data.url))\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import preloader from \"../../../assets/images/logo/Rolling-1s-231px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Preloader;","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLength = (max: number) => {\r\n    return (value: string) => {\r\n        if (value && value.length > max) {\r\n            return `Maximum length is ${max} symbols`\r\n        }\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3j-zP\",\"avatar\":\"ProfileData_avatar__9BIoR\",\"avatarImg\":\"ProfileData_avatarImg__3EkIo\",\"buttonLoad\":\"ProfileData_buttonLoad__1p5LM\",\"data\":\"ProfileData_data__2dnsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ProfileForm_formContainer__MMIHX\",\"formButton\":\"ProfileForm_formButton__3AVOl\",\"cancel\":\"ProfileForm_cancel__1BYbG\",\"checkboxField\":\"ProfileForm_checkboxField__1SvOV\",\"contactFields\":\"ProfileForm_contactFields__3zXi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1RKKE\",\"postMessageContainer\":\"Post_postMessageContainer__1ZeU_\",\"postMessage\":\"Post_postMessage__1y_oZ\",\"text\":\"Post_text__y7xHJ\",\"like\":\"Post_like__3XQlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VJ_h\",\"logo\":\"Header_logo__21fB4\",\"headUser\":\"Header_headUser__3LZZq\",\"logOut\":\"Header_logOut__3X3a1\"};","export default __webpack_public_path__ + \"static/media/usersAvatar.d15d2aa0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldForm\":\"CustomField_fieldForm__1UmNf\",\"error\":\"CustomField_error__30fIk\",\"loginForm\":\"CustomField_loginForm__2ZBiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1vdmU\",\"container\":\"MyPosts_container__3jze1\",\"title\":\"MyPosts_title__3s1MX\"};"],"sourceRoot":""}